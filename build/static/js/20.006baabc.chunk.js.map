{"version":3,"sources":["views/pages/authentication/AuthCardWrapper.tsx","ui-component/cards/AuthFooter.tsx","hooks/useScriptRef.ts","views/pages/authentication/AuthWrapper.tsx","views/pages/authentication/auth-forms/AuthForgot.tsx","views/pages/authentication/auth/Forgot.tsx"],"names":["AuthCardWrapper","children","other","sx","maxWidth","xs","lg","margin","md","flexGrow","flexBasis","content","p","sm","xl","AuthFooter","direction","justifyContent","variant","component","Link","href","target","underline","useScriptRef","scripted","useRef","useEffect","current","AuthWrapper","styled","theme","backgroundColor","palette","mode","background","default","primary","light","minHeight","Alert","React","forwardRef","props","ref","elevation","JWTForgot","forgotProp","others","useTheme","scriptedRef","useState","open","setOpen","login","useAuth","handleClick","handleClose","event","reason","initialValues","email","password","submit","validationSchema","yup","shape","max","required","onSubmit","values","a","setErrors","setStatus","setSubmitting","then","err","success","message","console","error","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","FormControl","fullWidth","Boolean","typography","customInput","InputLabel","htmlFor","OutlinedInput","id","type","value","name","onBlur","onChange","label","inputProps","FormHelperText","Box","mt","AnimateButton","Button","onClick","disabled","size","color","Snackbar","autoHideDuration","onClose","severity","width","Forgot","matchDownSM","useMediaQuery","breakpoints","down","Grid","container","item","alignItems","m","mb","spacing","to","Logo","Stack","Typography","secondary","main","gutterBottom","fontSize","textAlign","AuthForgot","Divider","textDecoration"],"mappings":"wMAuBeA,IAjBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAaC,EAAhB,wBACtB,cAAC,IAAD,yBACEC,GAAI,CACFC,SAAU,CAAEC,GAAI,IAAKC,GAAI,KACzBC,OAAQ,CAAEF,GAAI,IAAKG,GAAI,GACvB,QAAS,CACPC,SAAU,EACVC,UAAW,QAGfC,SAAS,GACLT,GAVN,aAYE,cAAC,IAAD,CAAKC,GAAI,CAAES,EAAG,CAAEP,GAAI,EAAGQ,GAAI,EAAGC,GAAI,IAAlC,SAA0Cb,S,iCCnB9C,qCAcec,IAXI,kBACjB,eAAC,IAAD,CAAOC,UAAU,MAAMC,eAAe,gBAAtC,UACE,cAAC,IAAD,CAAYC,QAAQ,YAAYC,UAAWC,IAAMC,KAAK,0BAA0BC,OAAO,SAASC,UAAU,QAA1G,6BAGA,cAAC,IAAD,CAAYL,QAAQ,YAAYC,UAAWC,IAAMC,KAAK,0BAA0BC,OAAO,SAASC,UAAU,QAA1G,uC,iCCRJ,WAeeC,IAbM,WACnB,IAAMC,EAAWC,kBAAO,GASxB,OAPAC,qBACE,kBAAM,WACJF,EAASG,SAAU,KAErB,IAGKH,I,iCCZT,WAGMI,EAAcC,YAAO,MAAPA,EAAc,gBAAGC,EAAH,EAAGA,MAAH,MAAgB,CAChDC,gBAAwC,SAAvBD,EAAME,QAAQC,KAAkBH,EAAME,QAAQE,WAAWC,QAAUL,EAAME,QAAQI,QAAQC,MAC1GC,UAAW,YAGEV,O,sUCITW,EAAQC,IAAMC,YAAuC,SAACC,EAAOC,GAAR,OACzD,cAAC,IAAD,aAAUC,UAAW,EAAGD,IAAKA,EAAK1B,QAAQ,UAAayB,OA2G1CG,MAxGf,YAAoF,EAA/DC,WAAgE,IAAjDC,EAAgD,iBAC5EjB,EAAQkB,cACRC,EAAc1B,cAEpB,EAAwBiB,IAAMU,UAAS,GAAvC,mBAAOC,EAAP,KAAaC,EAAb,KAEQC,EAAUC,cAAVD,MAEFE,EAAc,WAElBH,GAAQ,IAGJI,EAAc,SAACC,EAAsCC,GAC1C,cAAXA,GAIJN,GAAQ,IAGV,OACE,mCACE,cAAC,IAAD,CACEO,cAAe,CACbC,MAAO,GACPC,SAAU,GACVC,OAAQ,MAEVC,iBAAkBC,MAAaC,MAAM,CACnCL,MAAOI,MAAaJ,MAAM,yBAAyBM,IAAI,KAAKC,SAAS,qBACrEN,SAAUG,MAAaE,IAAI,KAAKC,SAAS,0BAE3CC,SAAQ,uCAAE,WAAOC,EAAP,sBAAAC,EAAA,6DAAiBC,EAAjB,EAAiBA,UAAWC,EAA5B,EAA4BA,UAAWC,EAAvC,EAAuCA,cAAvC,kBAEApB,EAAMgB,EAAOT,MAAOS,EAAOR,UAAUa,MACzC,eACA,SAACC,GACK1B,EAAYtB,UACd6C,EAAU,CAAEI,SAAS,IACrBL,EAAU,CAAET,OAAQa,EAAIE,UACxBJ,GAAc,OARd,uDAaNK,QAAQC,MAAR,MACI9B,EAAYtB,UACd6C,EAAU,CAAEI,SAAS,IACrBL,EAAU,CAAET,OAAQ,KAAIe,UACxBJ,GAAc,IAjBV,yDAAF,wDAVV,SAgCG,gBAAGO,EAAH,EAAGA,OAAQC,EAAX,EAAWA,WAAYC,EAAvB,EAAuBA,aAAcC,EAArC,EAAqCA,aAAcC,EAAnD,EAAmDA,aAAcC,EAAjE,EAAiEA,QAAShB,EAA1E,EAA0EA,OAA1E,OACC,+CAAMiB,YAAU,EAAClB,SAAUe,GAAkBpC,GAA7C,cACE,eAACwC,EAAA,EAAD,CAAaC,WAAS,EAACT,MAAOU,QAAQJ,EAAQzB,OAASoB,EAAOpB,OAAQ1D,GAAE,eAAO4B,EAAM4D,WAAWC,aAAhG,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,iCAApB,sCACA,cAACC,EAAA,EAAD,CACEC,GAAG,iCACHC,KAAK,QACLC,MAAO5B,EAAOT,MACdsC,KAAK,QACLC,OAAQlB,EACRmB,SAAUlB,EACVmB,MAAM,2BACNC,WAAY,KAEbjB,EAAQzB,OAASoB,EAAOpB,OACvB,cAAC2C,EAAA,EAAD,CAAgBxB,OAAK,EAACgB,GAAG,0CAAzB,SACGf,EAAOpB,WAKd,cAAC4C,EAAA,EAAD,CAAKtG,GAAI,CAAEuG,GAAI,GAAf,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEvF,KAAK,QACLwF,QAASrD,EACTsD,SAAUzB,EACVI,WAAS,EACTsB,KAAK,QACLd,KAAK,SACL/E,QAAQ,YACR8F,MAAM,YARR,oBAYA,cAACC,EAAA,EAAD,CAAU7D,KAAMA,EAAM8D,iBAAkB,IAAMC,QAAS1D,EAAvD,SACE,cAAC,EAAD,CAAO0D,QAAS1D,EAAa2D,SAAS,UAAUjH,GAAI,CAAEkH,MAAO,QAA7D,yD,kBCtCHC,UAzDA,WACb,IAAMvF,EAAQkB,cACRsE,EAAcC,YAAczF,EAAM0F,YAAYC,KAAK,OAEzD,OACE,cAAC7F,EAAA,EAAD,UACE,eAAC8F,EAAA,EAAD,CAAMC,WAAS,EAAC5G,UAAU,SAASC,eAAe,WAAWd,GAAI,CAAEoC,UAAW,SAA9E,UACE,cAACoF,EAAA,EAAD,CAAME,MAAI,EAACxH,GAAI,GAAf,SACE,cAACsH,EAAA,EAAD,CAAMC,WAAS,EAAC3G,eAAe,SAAS6G,WAAW,SAAS3H,GAAI,CAAEoC,UAAW,sBAA7E,SACE,cAACoF,EAAA,EAAD,CAAME,MAAI,EAAC1H,GAAI,CAAE4H,EAAG,CAAE1H,GAAI,EAAGQ,GAAI,GAAKmH,GAAI,GAA1C,SACE,cAAChI,EAAA,EAAD,UACE,eAAC2H,EAAA,EAAD,CAAMC,WAAS,EAACK,QAAS,EAAGH,WAAW,SAAS7G,eAAe,SAA/D,UACE,cAAC0G,EAAA,EAAD,CAAME,MAAI,EAAC1H,GAAI,CAAE6H,GAAI,GAArB,SACE,cAAC,IAAD,CAAME,GAAG,IAAT,SACE,cAACC,EAAA,EAAD,QAGJ,cAACR,EAAA,EAAD,CAAME,MAAI,EAACxH,GAAI,GAAf,SACE,cAACsH,EAAA,EAAD,CAAMC,WAAS,EAAC5G,UAAWuG,EAAc,iBAAmB,MAAOO,WAAW,SAAS7G,eAAe,SAAtG,SACE,cAAC0G,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,eAACO,EAAA,EAAD,CAAON,WAAW,SAAS7G,eAAe,SAASgH,QAAS,EAA5D,UACE,cAACI,EAAA,EAAD,CAAYrB,MAAOjF,EAAME,QAAQqG,UAAUC,KAAMC,cAAY,EAACtH,QAASqG,EAAc,KAAO,KAA5F,8BAGA,cAACc,EAAA,EAAD,CAAYnH,QAAQ,UAAUuH,SAAS,OAAOC,UAAU,SAAxD,4FAOR,cAACf,EAAA,EAAD,CAAME,MAAI,EAACxH,GAAI,GAAf,SACE,cAACsI,EAAD,MAEF,cAAChB,EAAA,EAAD,CAAME,MAAI,EAACxH,GAAI,GAAf,SACE,cAACuI,EAAA,EAAD,MAEF,cAACjB,EAAA,EAAD,CAAME,MAAI,EAACxH,GAAI,GAAf,SACE,cAACsH,EAAA,EAAD,CAAME,MAAI,EAACD,WAAS,EAAC5G,UAAU,SAAS8G,WAAW,SAASzH,GAAI,GAAhE,SACE,cAACgI,EAAA,EAAD,CAAYlH,UAAWC,IAAM8G,GAAG,SAAShH,QAAQ,YAAYf,GAAI,CAAE0I,eAAgB,QAAnF,qDAUd,cAAClB,EAAA,EAAD,CAAME,MAAI,EAACxH,GAAI,GAAIF,GAAI,CAAE4H,EAAG,EAAGrB,GAAI,GAAnC,SACE,cAAC3F,EAAA,EAAD","file":"static/js/20.006baabc.chunk.js","sourcesContent":["// THIRD-PARTY\r\nimport { Box } from '@mui/material';\r\n\r\n// PROJECT IMPORTS\r\nimport MainCard, { MainCardProps } from 'ui-component/cards/MainCard';\r\n\r\nconst AuthCardWrapper = ({ children, ...other }: MainCardProps) => (\r\n  <MainCard\r\n    sx={{\r\n      maxWidth: { xs: 400, lg: 475 },\r\n      margin: { xs: 2.5, md: 3 },\r\n      '& > *': {\r\n        flexGrow: 1,\r\n        flexBasis: '50%'\r\n      }\r\n    }}\r\n    content={false}\r\n    {...other}\r\n  >\r\n    <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\r\n  </MainCard>\r\n);\r\n\r\nexport default AuthCardWrapper;\r\n","// THIRD-PARTY\r\nimport { Link, Stack, Typography } from '@mui/material';\r\n\r\nconst AuthFooter = () => (\r\n  <Stack direction=\"row\" justifyContent=\"space-between\">\r\n    <Typography variant=\"subtitle2\" component={Link} href=\"https://beetsoft.com.vn\" target=\"_blank\" underline=\"hover\">\r\n      beetsoft.com.vn\r\n    </Typography>\r\n    <Typography variant=\"subtitle2\" component={Link} href=\"https://beetsoft.com.vn\" target=\"_blank\" underline=\"hover\">\r\n      &copy; beetsoft.com.vn\r\n    </Typography>\r\n  </Stack>\r\n);\r\n\r\nexport default AuthFooter;\r\n","import { useEffect, useRef } from 'react';\r\n\r\nconst useScriptRef = () => {\r\n  const scripted = useRef(true);\r\n\r\n  useEffect(\r\n    () => () => {\r\n      scripted.current = false;\r\n    },\r\n    []\r\n  );\r\n\r\n  return scripted;\r\n};\r\n\r\nexport default useScriptRef;\r\n","// THIRD-PARTY\r\nimport { styled } from '@mui/material/styles';\r\n\r\nconst AuthWrapper = styled('div')(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === 'dark' ? theme.palette.background.default : theme.palette.primary.light,\r\n  minHeight: '100vh'\r\n}));\r\n\r\nexport default AuthWrapper;\r\n","import React from 'react';\r\nimport * as yup from 'yup';\r\nimport { Box, Button, FormControl, FormHelperText, InputLabel, OutlinedInput, Snackbar } from '@mui/material';\r\nimport { Formik } from 'formik';\r\nimport MuiAlert, { AlertProps } from '@mui/material/Alert';\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\n// PROJECT IMPORTS\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport useAuth from 'hooks/useAuth';\r\nimport useScriptRef from 'hooks/useScriptRef';\r\n\r\nconst Alert = React.forwardRef<HTMLDivElement, AlertProps>((props, ref) => (\r\n  <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />\r\n));\r\n\r\nfunction JWTForgot({ forgotProp, ...others }: { forgotProp?: number }): JSX.Element {\r\n  const theme = useTheme();\r\n  const scriptedRef = useScriptRef();\r\n  /* const [checked, setChecked] = React.useState(true); */\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const { login } = useAuth();\r\n\r\n  const handleClick = () => {\r\n    // If Input not empty then alert success, else set error\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event?: React.SyntheticEvent | Event, reason?: string) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={{\r\n          email: '',\r\n          password: '',\r\n          submit: null\r\n        }}\r\n        validationSchema={yup.object().shape({\r\n          email: yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n          password: yup.string().max(255).required('Password is required')\r\n        })}\r\n        onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n          try {\r\n            await login(values.email, values.password).then(\r\n              () => {},\r\n              (err: any) => {\r\n                if (scriptedRef.current) {\r\n                  setStatus({ success: false });\r\n                  setErrors({ submit: err.message });\r\n                  setSubmitting(false);\r\n                }\r\n              }\r\n            );\r\n          } catch (err: any) {\r\n            console.error(err);\r\n            if (scriptedRef.current) {\r\n              setStatus({ success: false });\r\n              setErrors({ submit: err.message });\r\n              setSubmitting(false);\r\n            }\r\n          }\r\n        }}\r\n      >\r\n        {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n          <form noValidate onSubmit={handleSubmit} {...others}>\r\n            <FormControl fullWidth error={Boolean(touched.email && errors.email)} sx={{ ...theme.typography.customInput }}>\r\n              <InputLabel htmlFor=\"outlined-adornment-email-login\">Email Address / Username</InputLabel>\r\n              <OutlinedInput\r\n                id=\"outlined-adornment-email-login\"\r\n                type=\"email\"\r\n                value={values.email}\r\n                name=\"email\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                label=\"Email Address / Username\"\r\n                inputProps={{}}\r\n              />\r\n              {touched.email && errors.email && (\r\n                <FormHelperText error id=\"standard-weight-helper-text-email-login\">\r\n                  {errors.email}\r\n                </FormHelperText>\r\n              )}\r\n            </FormControl>\r\n\r\n            <Box sx={{ mt: 2 }}>\r\n              <AnimateButton>\r\n                <Button\r\n                  href=\"login\"\r\n                  onClick={handleClick}\r\n                  disabled={isSubmitting}\r\n                  fullWidth\r\n                  size=\"large\"\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                >\r\n                  Submit\r\n                </Button>\r\n                <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                  <Alert onClose={handleClose} severity=\"success\" sx={{ width: '100%' }}>\r\n                    This is a success message!\r\n                  </Alert>\r\n                </Snackbar>\r\n              </AnimateButton>\r\n            </Box>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default JWTForgot;\r\n","// THIRD-PARTY\r\nimport { Divider, Grid, Stack, Typography, useMediaQuery } from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\n// PROJECT IMPORTS\r\nimport AuthCardWrapper from '../AuthCardWrapper';\r\nimport AuthFooter from 'ui-component/cards/AuthFooter';\r\nimport AuthForgot from '../auth-forms/AuthForgot';\r\nimport AuthWrapper from '../AuthWrapper';\r\nimport Logo from 'ui-component/Logo';\r\n\r\nconst Forgot = () => {\r\n  const theme = useTheme();\r\n  const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n  return (\r\n    <AuthWrapper>\r\n      <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\r\n        <Grid item xs={12}>\r\n          <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\r\n            <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\r\n              <AuthCardWrapper>\r\n                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\r\n                  <Grid item sx={{ mb: 3 }}>\r\n                    <Link to=\"#\">\r\n                      <Logo />\r\n                    </Link>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Grid container direction={matchDownSM ? 'column-reverse' : 'row'} alignItems=\"center\" justifyContent=\"center\">\r\n                      <Grid item>\r\n                        <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\r\n                          <Typography color={theme.palette.secondary.main} gutterBottom variant={matchDownSM ? 'h3' : 'h2'}>\r\n                            Forgot password?\r\n                          </Typography>\r\n                          <Typography variant=\"caption\" fontSize=\"16px\" textAlign=\"center\">\r\n                            Enter your email address below and we&apos;ll send you password reset OTP.\r\n                          </Typography>\r\n                        </Stack>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <AuthForgot />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Divider />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\r\n                      <Typography component={Link} to=\"/login\" variant=\"subtitle1\" sx={{ textDecoration: 'none' }}>\r\n                        Already have an account?\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </AuthCardWrapper>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\r\n          <AuthFooter />\r\n        </Grid>\r\n      </Grid>\r\n    </AuthWrapper>\r\n  );\r\n};\r\n\r\nexport default Forgot;\r\n"],"sourceRoot":""}