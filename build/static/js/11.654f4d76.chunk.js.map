{"version":3,"sources":["ui-component/extended/AnimateButton.tsx","views/pages/administrator/SortStatus.ts","views/pages/administrator/AddAdministrator.tsx","views/pages/administrator/AdministratorList.tsx","views/pages/administrator/index.tsx"],"names":["AnimateButton","React","forwardRef","ref","offset1","offset2","children","type","direction","offset","scale","useCycle","x","cycleX","y","cycleY","div","animate","rotate","transition","repeat","Infinity","repeatType","duration","repeatDelay","undefined","onHoverEnd","onHoverStart","hover","tap","whileHover","whileTap","defaultProps","SortStatus","value","label","Transition","props","Slide","AddAdministrator","open","handleCloseDialog","useTheme","Dialog","TransitionComponent","keepMounted","onClose","sx","m","borderRadius","width","maxWidth","maxHeight","DialogTitle","DialogContent","Grid","container","spacing","gridSpacing","mt","item","xs","TextField","id","fullWidth","DialogActions","Button","variant","color","onClick","AdministratorList","theme","dispatch","useDispatch","useState","data","setData","users","useSelector","state","user","useEffect","getAdministratorList","TableContainer","Table","TableHead","TableRow","TableCell","pl","align","pr","TableBody","map","row","index","name","username","email","phone","dob","gender","moment","created_at","format","status","Chip","size","background","palette","mode","dark","main","warning","light","success","orange","IconButton","fontSize","Administrator","matchDownSM","useMediaQuery","breakpoints","down","matchDownMD","spacingMD","setOpen","search","filter","setFilter","handleSearch","event","a","newString","target","anchorEl","setAnchorEl","openSort","Boolean","handleClose","filterData","setTimeout","sortLabel","items","MainCard","title","sm","alignItems","justifyContent","Stack","md","InputProps","startAdornment","InputAdornment","position","placeholder","onChange","Typography","display","fontWeight","currentTarget","endIcon","length","Menu","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","p","selected","handleMenuItemClick","textAlign","Tooltip","Fab","boxShadow","ml","height","minHeight","content","Pagination","count","grey"],"mappings":"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","file":"static/js/11.654f4d76.chunk.js","sourcesContent":["// THIRD-PARTY\nimport React, { Ref } from 'react';\nimport { motion, useCycle } from 'framer-motion';\n\ninterface ScaleProps {\n  hover: number | string | undefined;\n  tap: number | string | undefined;\n}\n\ninterface AnimateButtonProps {\n  children?: React.ReactNode;\n  type?: 'slide' | 'scale' | 'rotate';\n  direction?: 'up' | 'down' | 'left' | 'right';\n  offset?: number;\n  scale?: ScaleProps;\n}\n\nconst AnimateButton = React.forwardRef(({ children, type, direction, offset, scale }: AnimateButtonProps, ref: Ref<HTMLDivElement>) => {\n  let offset1;\n  let offset2;\n  switch (direction) {\n    case 'up':\n    case 'left':\n      offset1 = offset;\n      offset2 = 0;\n      break;\n    case 'right':\n    case 'down':\n    default:\n      offset1 = 0;\n      offset2 = offset;\n      break;\n  }\n\n  const [x, cycleX] = useCycle(offset1, offset2);\n  const [y, cycleY] = useCycle(offset1, offset2);\n\n  switch (type) {\n    case 'rotate':\n      return (\n        <motion.div\n          ref={ref}\n          animate={{ rotate: 360 }}\n          transition={{\n            repeat: Infinity,\n            repeatType: 'loop',\n            duration: 2,\n            repeatDelay: 0\n          }}\n        >\n          {children}\n        </motion.div>\n      );\n    case 'slide':\n      if (direction === 'up' || direction === 'down') {\n        return (\n          <motion.div ref={ref} animate={{ y: y !== undefined ? y : '' }} onHoverEnd={() => cycleY()} onHoverStart={() => cycleY()}>\n            {children}\n          </motion.div>\n        );\n      }\n      return (\n        <motion.div ref={ref} animate={{ x: x !== undefined ? x : '' }} onHoverEnd={() => cycleX()} onHoverStart={() => cycleX()}>\n          {children}\n        </motion.div>\n      );\n\n    case 'scale':\n    default:\n      if (typeof scale === 'number') {\n        scale = {\n          hover: scale,\n          tap: scale\n        };\n      }\n      return (\n        <motion.div ref={ref} whileHover={{ scale: scale?.hover }} whileTap={{ scale: scale?.tap }}>\n          {children}\n        </motion.div>\n      );\n  }\n});\n\nAnimateButton.defaultProps = {\n  type: 'scale',\n  offset: 10,\n  direction: 'right',\n  scale: {\n    hover: 1,\n    tap: 0.9\n  }\n};\n\nexport default AnimateButton;\n","// PROJECT IMPORTS\nimport { SortStatusProps } from 'types/user';\n\nconst SortStatus: SortStatusProps[] = [\n  {\n    value: '',\n    label: 'All'\n  },\n  {\n    value: '1',\n    label: 'Inactive'\n  },\n  {\n    value: '2',\n    label: 'Active'\n  },\n  {\n    value: '3',\n    label: 'Blocked'\n  }\n];\n\nexport default SortStatus;\n","// THIRD-PARTY\nimport { forwardRef, SyntheticEvent } from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Grid, Slide, SlideProps, TextField } from '@mui/material';\n\n// PROJECT IMPORTS\nimport AnimateButton from 'ui-component/extended/AnimateButton';\nimport { gridSpacing } from 'store/constant';\n\nconst Transition = forwardRef((props: SlideProps, ref) => <Slide direction=\"left\" ref={ref} {...props} />);\n\ninterface AddAdministratorProps {\n  open: boolean;\n  handleCloseDialog: (e: SyntheticEvent) => void;\n}\n\nconst AddAdministrator = ({ open, handleCloseDialog }: AddAdministratorProps) => {\n  const theme = useTheme();\n\n  return (\n    <Dialog\n      open={open}\n      TransitionComponent={Transition}\n      keepMounted\n      onClose={handleCloseDialog}\n      sx={{\n        '&>div:nth-of-type(3)': {\n          '&>div': {\n            m: 0,\n            borderRadius: '0px',\n            width: 850,\n            maxWidth: 850,\n            maxHeight: '100%'\n          }\n        }\n      }}\n    >\n      {open && (\n        <>\n          <DialogTitle>Add Administrator</DialogTitle>\n          <DialogContent>\n            <Grid container spacing={gridSpacing} sx={{ mt: 0.25 }}>\n              <Grid item xs={12}>\n                <TextField id=\"outlined-basic1\" fullWidth label=\"Enter Name*\" />\n              </Grid>\n            </Grid>\n          </DialogContent>\n          <DialogActions>\n            <AnimateButton>\n              <Button variant=\"contained\">Create</Button>\n            </AnimateButton>\n            <Button variant=\"text\" color=\"error\" onClick={handleCloseDialog}>\n              Close\n            </Button>\n          </DialogActions>\n        </>\n      )}\n    </Dialog>\n  );\n};\n\nexport default AddAdministrator;\n","// THIRD-PARTY\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone';\nimport EditTwoToneIcon from '@mui/icons-material/EditTwoTone';\nimport moment from 'moment';\nimport React from 'react';\nimport VisibilityTwoToneIcon from '@mui/icons-material/VisibilityTwoTone';\nimport { Chip, IconButton, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\n// PROJECT IMPORTS\nimport { getAdministratorList } from 'store/slices/user';\nimport { useDispatch, useSelector } from 'store';\nimport { UserProfile } from 'types/user-profile';\n\nconst AdministratorList = () => {\n  const theme = useTheme();\n  const dispatch = useDispatch();\n\n  const [data, setData] = React.useState<UserProfile[]>([]);\n  const { users } = useSelector((state) => state.user);\n\n  React.useEffect(() => {\n    setData(users);\n  }, [users]);\n\n  React.useEffect(() => {\n    dispatch(getAdministratorList());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <TableContainer>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell sx={{ pl: 3 }}>#</TableCell>\n            <TableCell>Name</TableCell>\n            <TableCell>Username</TableCell>\n            <TableCell>Email</TableCell>\n            <TableCell>Phone</TableCell>\n            <TableCell>Date of Birth</TableCell>\n            <TableCell>Gender</TableCell>\n            <TableCell>Created</TableCell>\n            <TableCell>Status</TableCell>\n            <TableCell align=\"center\" sx={{ pr: 3 }}>\n              Actions\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data &&\n            data.map((row, index) => (\n              <TableRow hover key={index}>\n                <TableCell sx={{ pl: 3 }}>{row.id}</TableCell>\n                <TableCell>{row.name}</TableCell>\n                <TableCell>{row.username}</TableCell>\n                <TableCell>{row.email}</TableCell>\n                <TableCell>{row.phone}</TableCell>\n                <TableCell>{row.dob ?? 'N/A'}</TableCell>\n                <TableCell>{row.gender ?? 'N/A'}</TableCell>\n                <TableCell>{moment(row.created_at).format('DD/MM/YYYY HH:mm')}</TableCell>\n                <TableCell>\n                  {row.status === 1 && (\n                    <Chip\n                      label=\"Inactive\"\n                      size=\"small\"\n                      sx={{\n                        background: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.warning.light,\n                        color: theme.palette.warning.dark\n                      }}\n                    />\n                  )}\n                  {row.status === 2 && (\n                    <Chip\n                      label=\"Active\"\n                      size=\"small\"\n                      sx={{\n                        background: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.success.light + 60,\n                        color: theme.palette.success.dark\n                      }}\n                    />\n                  )}\n                  {row.status === 3 && (\n                    <Chip\n                      label=\"Blocked\"\n                      size=\"small\"\n                      sx={{\n                        background: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.orange.light + 80,\n                        color: theme.palette.orange.dark\n                      }}\n                    />\n                  )}\n                </TableCell>\n                <TableCell align=\"center\" sx={{ pr: 3 }}>\n                  <IconButton color=\"primary\" size=\"large\">\n                    <VisibilityTwoToneIcon sx={{ fontSize: '1.3rem' }} />\n                  </IconButton>\n                  <IconButton color=\"secondary\" size=\"large\">\n                    <EditTwoToneIcon sx={{ fontSize: '1.3rem' }} />\n                  </IconButton>\n                  <IconButton color=\"error\" size=\"large\">\n                    <DeleteTwoToneIcon sx={{ fontSize: '1.3rem' }} />\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default AdministratorList;\n","// THIRD-PARTY\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport React, { useEffect, useState } from 'react';\nimport SearchIcon from '@mui/icons-material/Search';\nimport AddIcon from '@mui/icons-material/AddTwoTone';\nimport {\n  Button,\n  Fab,\n  Grid,\n  InputAdornment,\n  Menu,\n  MenuItem,\n  Pagination,\n  Stack,\n  TextField,\n  Tooltip,\n  Typography,\n  useMediaQuery\n} from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport ExpandMoreRoundedIcon from '@mui/icons-material/ExpandMoreRounded';\n\n// PROJECT IMPORTS\nimport AddAdministrator from 'views/pages/administrator/AddAdministrator';\nimport AdministratorList from 'views/pages/administrator/AdministratorList';\nimport MainCard from 'ui-component/cards/MainCard';\nimport SortStatus from 'views/pages/administrator/SortStatus';\nimport { dispatch } from 'store';\nimport { getAdministratorList } from 'store/slices/user';\nimport { UserFilter } from 'types/user';\nimport { gridSpacing } from '../../../store/constant';\n\nconst Administrator = () => {\n  const theme = useTheme();\n\n  const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\n  const matchDownMD = useMediaQuery(theme.breakpoints.down('lg'));\n\n  const spacingMD = matchDownMD ? 1 : 1.5;\n\n  const [open, setOpen] = React.useState(false);\n  const handleClickOpenDialog = () => {\n    setOpen(true);\n  };\n  const handleCloseDialog = () => {\n    setOpen(false);\n  };\n\n  const initialState: UserFilter = {\n    search: '',\n    status: ''\n  };\n  const [filter, setFilter] = useState(initialState);\n\n  const handleSearch = async (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement> | undefined) => {\n    const newString = event?.target.value;\n    setFilter({ ...filter, search: newString! });\n  };\n\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const openSort = Boolean(anchorEl);\n  const handleClickListItem = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const filterData = async () => {\n    setTimeout(async () => {\n      await dispatch(getAdministratorList(filter));\n    }, 400);\n  };\n\n  useEffect(() => {\n    filterData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [filter]);\n\n  const handleMenuItemClick = (event: React.MouseEvent<HTMLElement>, index: string | '') => {\n    setFilter({ ...filter, status: index });\n    setAnchorEl(null);\n  };\n  const sortLabel = SortStatus.filter((items) => items.value === filter.status);\n\n  const handleClickPagination = (event: React.MouseEvent) => {};\n\n  return (\n    <MainCard\n      title={\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={6}>\n            <Grid container alignItems=\"center\" justifyContent=\"space-between\" spacing={matchDownMD ? 0.5 : 2}>\n              <Grid item>\n                <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"center\" spacing={matchDownSM ? 0.5 : spacingMD}>\n                  <TextField\n                    sx={{ width: { xs: 140, md: 'auto' } }}\n                    InputProps={{\n                      startAdornment: (\n                        <InputAdornment position=\"start\">\n                          <SearchIcon fontSize=\"small\" />\n                        </InputAdornment>\n                      )\n                    }}\n                    value={filter.search}\n                    placeholder=\"Search....\"\n                    size=\"small\"\n                    onChange={handleSearch}\n                  />\n\n                  <Typography sx={{ display: { xs: 'none', sm: 'flex' }, fontSize: '1rem', color: 'grey.500', fontWeight: 400 }}>\n                    |\n                  </Typography>\n                  <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"center\" sx={{ display: { xs: 'none', sm: 'flex' } }}>\n                    <Typography variant=\"h5\">Sort by: </Typography>\n                    <Button\n                      id=\"demo-positioned-button\"\n                      aria-controls=\"demo-positioned-menu\"\n                      aria-haspopup=\"true\"\n                      aria-expanded={openSort ? 'true' : undefined}\n                      onClick={handleClickListItem}\n                      sx={{ color: 'grey.500', fontWeight: 400 }}\n                      endIcon={<KeyboardArrowDownIcon />}\n                    >\n                      {sortLabel.length > 0 && sortLabel[0].label}\n                    </Button>\n                    <Menu\n                      id=\"demo-positioned-menu\"\n                      aria-labelledby=\"demo-positioned-button\"\n                      anchorEl={anchorEl}\n                      open={openSort}\n                      onClose={handleClose}\n                      anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                      }}\n                      transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                      }}\n                    >\n                      {SortStatus.map((status, index) => (\n                        <MenuItem\n                          sx={{ p: 1.5 }}\n                          key={index}\n                          selected={status.value === filter.status}\n                          onClick={(event) => handleMenuItemClick(event, status.value || '')}\n                        >\n                          {status.label}\n                        </MenuItem>\n                      ))}\n                    </Menu>\n                  </Stack>\n                </Stack>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={12} sm={6} sx={{ textAlign: 'right' }}>\n            <Tooltip title=\"Add\">\n              <Fab\n                color=\"primary\"\n                size=\"small\"\n                onClick={handleClickOpenDialog}\n                sx={{ boxShadow: 'none', ml: 1, width: 32, height: 32, minHeight: 32 }}\n              >\n                <AddIcon fontSize=\"small\" />\n              </Fab>\n            </Tooltip>\n          </Grid>\n        </Grid>\n      }\n      content={false}\n    >\n      <AddAdministrator open={open} handleCloseDialog={handleCloseDialog} />\n      <AdministratorList />\n      <Grid item xs={12} sx={{ p: 3 }}>\n        <Grid container justifyContent=\"space-between\" spacing={gridSpacing}>\n          <Grid item>\n            <Pagination count={10} color=\"primary\" />\n          </Grid>\n          <Grid item>\n            <Button\n              size=\"large\"\n              sx={{ color: theme.palette.grey[900] }}\n              color=\"secondary\"\n              endIcon={<ExpandMoreRoundedIcon />}\n              onClick={handleClickPagination}\n            >\n              10 Rows\n            </Button>\n            <Menu\n              id=\"menu-user-list-style1\"\n              anchorEl={anchorEl}\n              keepMounted\n              open={Boolean(anchorEl)}\n              onClose={handleClose}\n              variant=\"selectedMenu\"\n              anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right'\n              }}\n              transformOrigin={{\n                vertical: 'bottom',\n                horizontal: 'right'\n              }}\n            >\n              <MenuItem onClick={handleClose}> 10 Rows</MenuItem>\n              <MenuItem onClick={handleClose}> 20 Rows</MenuItem>\n              <MenuItem onClick={handleClose}> 30 Rows </MenuItem>\n            </Menu>\n          </Grid>\n        </Grid>\n      </Grid>\n    </MainCard>\n  );\n};\n\nexport default Administrator;\n"],"sourceRoot":""}