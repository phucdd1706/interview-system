{"version":3,"sources":["views/pages/ranks/SortStatus.ts","views/pages/ranks/RanksList.tsx","views/pages/ranks/index.tsx"],"names":["SortStatus","value","label","RanksList","dispatch","useDispatch","React","useState","data","setData","ranks","useSelector","state","rank","useEffect","getRanksList","TableContainer","Table","TableHead","TableRow","TableCell","sx","pl","align","pr","TableBody","map","row","index","hover","id","name","IconButton","color","size","fontSize","Ranks","theme","useTheme","matchDownSM","useMediaQuery","breakpoints","down","matchDownMD","spacingMD","setOpen","search","status","filter","setFilter","handleSearch","event","a","newString","target","anchorEl","setAnchorEl","openSort","Boolean","filterData","setTimeout","sortLabel","items","MainCard","title","Grid","container","spacing","item","xs","sm","alignItems","justifyContent","Stack","direction","TextField","width","md","InputProps","startAdornment","InputAdornment","position","placeholder","onChange","Typography","display","fontWeight","variant","Button","undefined","onClick","currentTarget","endIcon","length","Menu","open","onClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","p","selected","handleMenuItemClick","textAlign","Tooltip","Fab","boxShadow","ml","height","minHeight","content"],"mappings":"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","file":"static/js/19.e0a2e4be.chunk.js","sourcesContent":["// PROJECT IMPORTS\r\nimport { SortStatusProps } from 'types/rank';\r\n\r\nconst SortStatus: SortStatusProps[] = [\r\n  {\r\n    value: '',\r\n    label: 'All'\r\n  },\r\n  {\r\n    value: 0,\r\n    label: 'Inactive'\r\n  },\r\n  {\r\n    value: 1,\r\n    label: 'Active'\r\n  }\r\n];\r\n\r\nexport default SortStatus;\r\n","// THIRD-PARTY\r\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone';\r\nimport EditTwoToneIcon from '@mui/icons-material/EditTwoTone';\r\nimport React from 'react';\r\nimport VisibilityTwoToneIcon from '@mui/icons-material/VisibilityTwoTone';\r\nimport { IconButton, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\r\n\r\n// PROJECT IMPORTS\r\nimport { getRanksList } from 'store/slices/rank';\r\nimport { Rank } from 'types/rank';\r\nimport { useDispatch, useSelector } from 'store';\r\n\r\nconst RanksList = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [data, setData] = React.useState<Rank[]>([]);\r\n  const { ranks } = useSelector((state) => state.rank);\r\n\r\n  React.useEffect(() => {\r\n    setData(ranks);\r\n  }, [ranks]);\r\n\r\n  React.useEffect(() => {\r\n    dispatch(getRanksList());\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <TableContainer>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell sx={{ pl: 3 }}>#</TableCell>\r\n            <TableCell>Name</TableCell>\r\n            <TableCell align=\"center\" sx={{ pr: 3 }}>\r\n              Actions\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data &&\r\n            data.map((row, index) => (\r\n              <TableRow hover key={index}>\r\n                <TableCell sx={{ pl: 3 }}>{row.id}</TableCell>\r\n                <TableCell>{row.name}</TableCell>\r\n                <TableCell align=\"center\" sx={{ pr: 3 }}>\r\n                  <IconButton color=\"primary\" size=\"large\">\r\n                    <VisibilityTwoToneIcon sx={{ fontSize: '1.3rem' }} />\r\n                  </IconButton>\r\n                  <IconButton color=\"secondary\" size=\"large\">\r\n                    <EditTwoToneIcon sx={{ fontSize: '1.3rem' }} />\r\n                  </IconButton>\r\n                  <IconButton color=\"error\" size=\"large\">\r\n                    <DeleteTwoToneIcon sx={{ fontSize: '1.3rem' }} />\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default RanksList;\r\n","// THIRD-PARTY\r\nimport AddIcon from '@mui/icons-material/AddTwoTone';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport React, { useEffect, useState } from 'react';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport SortStatus from 'views/pages/ranks/SortStatus';\r\nimport { Button, Fab, Grid, InputAdornment, Menu, MenuItem, Stack, TextField, Tooltip, Typography, useMediaQuery } from '@mui/material';\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\n// PROJECT IMPORTS\r\nimport RanksList from 'views/pages/ranks/RanksList';\r\nimport { dispatch } from 'store';\r\nimport { getRanksList } from 'store/slices/rank';\r\nimport { RankFilter } from 'types/rank';\r\n\r\nconst Ranks = () => {\r\n  const theme = useTheme();\r\n\r\n  const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\r\n  const matchDownMD = useMediaQuery(theme.breakpoints.down('lg'));\r\n\r\n  const spacingMD = matchDownMD ? 1 : 1.5;\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClickOpenDialog = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleCloseDialog = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const initialState: RankFilter = {\r\n    search: '',\r\n    status: ''\r\n  };\r\n  const [filter, setFilter] = useState(initialState);\r\n\r\n  const handleSearch = async (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement> | undefined) => {\r\n    const newString = event?.target.value;\r\n    setFilter({ ...filter, search: newString! });\r\n  };\r\n\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n  const openSort = Boolean(anchorEl);\r\n  const handleClickListItem = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const filterData = async () => {\r\n    setTimeout(async () => {\r\n      await dispatch(getRanksList(filter));\r\n    }, 400);\r\n  };\r\n\r\n  useEffect(() => {\r\n    filterData();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [filter]);\r\n\r\n  const handleMenuItemClick = (event: React.MouseEvent<HTMLElement>, index: any) => {\r\n    setFilter({ ...filter, status: index });\r\n    setAnchorEl(null);\r\n  };\r\n  const sortLabel = SortStatus.filter((items) => items.value === filter.status);\r\n\r\n  return (\r\n    <MainCard\r\n      title={\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} sm={6}>\r\n            <Grid container alignItems=\"center\" justifyContent=\"space-between\" spacing={matchDownMD ? 0.5 : 2}>\r\n              <Grid item>\r\n                <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"center\" spacing={matchDownSM ? 0.5 : spacingMD}>\r\n                  <TextField\r\n                    sx={{ width: { xs: 140, md: 'auto' } }}\r\n                    InputProps={{\r\n                      startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                          <SearchIcon fontSize=\"small\" />\r\n                        </InputAdornment>\r\n                      )\r\n                    }}\r\n                    value={filter.search}\r\n                    placeholder=\"Search....\"\r\n                    size=\"small\"\r\n                    onChange={handleSearch}\r\n                  />\r\n\r\n                  <Typography sx={{ display: { xs: 'none', sm: 'flex' }, fontSize: '1rem', color: 'grey.500', fontWeight: 400 }}>\r\n                    |\r\n                  </Typography>\r\n                  <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"center\" sx={{ display: { xs: 'none', sm: 'flex' } }}>\r\n                    <Typography variant=\"h5\">Sort by: </Typography>\r\n                    <Button\r\n                      id=\"demo-positioned-button\"\r\n                      aria-controls=\"demo-positioned-menu\"\r\n                      aria-haspopup=\"true\"\r\n                      aria-expanded={openSort ? 'true' : undefined}\r\n                      onClick={handleClickListItem}\r\n                      sx={{ color: 'grey.500', fontWeight: 400 }}\r\n                      endIcon={<KeyboardArrowDownIcon />}\r\n                    >\r\n                      {sortLabel.length > 0 && sortLabel[0].label}\r\n                    </Button>\r\n                    <Menu\r\n                      id=\"demo-positioned-menu\"\r\n                      aria-labelledby=\"demo-positioned-button\"\r\n                      anchorEl={anchorEl}\r\n                      open={openSort}\r\n                      onClose={handleClose}\r\n                      anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                      }}\r\n                      transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right'\r\n                      }}\r\n                    >\r\n                      {SortStatus.map((status, index) => (\r\n                        <MenuItem\r\n                          sx={{ p: 1.5 }}\r\n                          key={index}\r\n                          selected={status.value === filter.status}\r\n                          onClick={(event) => handleMenuItemClick(event, status.value)}\r\n                        >\r\n                          {status.label}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Menu>\r\n                  </Stack>\r\n                </Stack>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} sx={{ textAlign: 'right' }}>\r\n            <Tooltip title=\"Add\">\r\n              <Fab\r\n                color=\"primary\"\r\n                size=\"small\"\r\n                onClick={handleClickOpenDialog}\r\n                sx={{ boxShadow: 'none', ml: 1, width: 32, height: 32, minHeight: 32 }}\r\n              >\r\n                <AddIcon fontSize=\"small\" />\r\n              </Fab>\r\n            </Tooltip>\r\n          </Grid>\r\n        </Grid>\r\n      }\r\n      content={false}\r\n    >\r\n      <RanksList />\r\n    </MainCard>\r\n  );\r\n};\r\n\r\nexport default Ranks;\r\n"],"sourceRoot":""}