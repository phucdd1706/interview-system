{"version":3,"sources":["views/pages/account/tabs/ProfileEdit.tsx","views/pages/account/tabs/Profile.tsx","views/pages/account/tabs/ChangePassword.tsx","views/pages/account/tabs/SettingsPage.tsx","views/pages/account/index.tsx"],"names":["Gender","value","label","validationSchema","yup","name","required","phone","gender","ProfileEdit","open","handleDialogOpen","user","useAuth","formik","useFormik","enableReinitialize","initialValues","dob","onSubmit","values","dispatch","editProfile","openSnackbar","message","anchorOrigin","vertical","horizontal","variant","alert","color","close","Dialog","onClose","resetForm","sx","m","borderRadius","width","maxWidth","maxHeight","Box","p","Grid","container","alignItems","spacing","justifyContent","item","Stack","direction","Button","minWidth","display","xs","md","onClick","Typography","textOverflow","whiteSpace","overflow","verticalAlign","Divider","handleSubmit","LocalizationProvider","dateAdapter","AdapterDateFns","DialogContent","gridSpacing","mt","TextField","fullWidth","id","onChange","handleChange","error","touched","Boolean","errors","helperText","DesktopDatePicker","inputFormat","date","setFieldValue","renderInput","props","FormControl","Select","displayEmpty","inputProps","map","index","MenuItem","DialogActions","size","type","e","Profile","theme","useTheme","React","useState","openDialog","setOpenDialog","prevState","userStr","dobLocale","Date","toLocaleDateString","displayGender","setDisplayGender","useEffect","minHeight","lg","MainCard","CardHeader","avatar","Avatar","src","User","typography","largeAvatar","cursor","title","subheader","borderBottom","borderColor","palette","mode","background","default","primary","boxShadow","CardContent","List","ListItemButton","ListItemIcon","ListItemText","ListItemSecondaryAction","username","email","action","TableContainer","component","Card","Table","TableBody","TableRow","TableCell","Yup","Alert","forwardRef","ref","elevation","ChangePassword","showPassword","setOpen","handleClose","event","reason","password","password_confirmation","changeNewPassword","Paper","noValidate","rowSpacing","columnSpacing","FormHelperText","Snackbar","autoHideDuration","severity","SettingPage","openSettings","setOpenSettings","notifiState","useSelector","state","notification","notifications","setState","FacebookURL","setFacebookURL","LinkedInURL","setLinkedInURL","TwitterURL","setTwitterURL","target","checked","handleSettingsClose","FormGroup","FormControlLabel","control","Switch","desktop","attempted","editNotifications","alignContent","fontSize","margin","LabTabs","setValue","TabContext","TabList","newValue","Tab","TabPanel"],"mappings":"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","file":"static/js/22.c4e1b140.chunk.js","sourcesContent":["// THIRD-PARTY\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport DesktopDatePicker from '@mui/lab/DesktopDatePicker';\r\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport * as yup from 'yup';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  Divider,\r\n  FormControl,\r\n  Grid,\r\n  MenuItem,\r\n  Select,\r\n  Stack,\r\n  TextField,\r\n  Typography\r\n} from '@mui/material';\r\nimport { useFormik } from 'formik';\r\n\r\n// PROJECT IMPORTS\r\nimport { gridSpacing } from 'store/constant';\r\nimport { SelectProps } from 'types/customer';\r\nimport useAuth from 'hooks/useAuth';\r\nimport { dispatch } from 'store';\r\nimport { openSnackbar } from 'store/slices/snackbar';\r\nimport { editProfile } from 'store/slices/profile';\r\n\r\ninterface Props {\r\n  open: boolean;\r\n  handleDialogOpen: () => void;\r\n}\r\n\r\nconst Gender: SelectProps[] = [\r\n  {\r\n    value: 'male',\r\n    label: 'Male'\r\n  },\r\n  {\r\n    value: 'female',\r\n    label: 'Female'\r\n  },\r\n  {\r\n    value: null,\r\n    label: 'N/A'\r\n  }\r\n];\r\n\r\nconst validationSchema = yup.object({\r\n  name: yup.string().required('Name is required'),\r\n  phone: yup.string().required('Phone is required'),\r\n  // dob: yup.date().required('Date of Birth is required'),\r\n  gender: yup.string().required('Gender is required')\r\n});\r\n\r\nconst ProfileEdit = ({ open, handleDialogOpen }: Props) => {\r\n  const { user } = useAuth();\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      name: user?.name,\r\n      phone: user?.phone,\r\n      dob: '',\r\n      gender: user?.gender\r\n    },\r\n    validationSchema,\r\n    onSubmit: (values) => {\r\n      dispatch(editProfile(values));\r\n      dispatch(\r\n        openSnackbar({\r\n          open: true,\r\n          message: 'Edit Success',\r\n          anchorOrigin: { vertical: 'top', horizontal: 'right' },\r\n          variant: 'alert',\r\n          alert: {\r\n            color: 'success'\r\n          },\r\n          close: false\r\n        })\r\n      );\r\n      handleDialogOpen();\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={() => {\r\n        handleDialogOpen();\r\n        formik.resetForm();\r\n      }}\r\n      sx={{\r\n        '&>div:nth-of-type(3)': {\r\n          '&>div': {\r\n            m: 0,\r\n            borderRadius: '0px',\r\n            width: 850,\r\n            maxWidth: 850,\r\n            maxHeight: '100%'\r\n          }\r\n        }\r\n      }}\r\n    >\r\n      {open && (\r\n        <>\r\n          <Box sx={{ p: 3 }}>\r\n            <Grid container alignItems=\"center\" spacing={0.5} justifyContent=\"space-between\">\r\n              <Grid item sx={{ width: 'calc(100% - 50px)' }}>\r\n                <Stack direction=\"row\" spacing={0.5} alignItems=\"center\">\r\n                  <Button\r\n                    variant=\"text\"\r\n                    color=\"error\"\r\n                    sx={{ p: 0.5, minWidth: 32, display: { xs: 'block', md: 'none' } }}\r\n                    onClick={handleDialogOpen}\r\n                  >\r\n                    <HighlightOffIcon />\r\n                  </Button>\r\n                  <Typography\r\n                    variant=\"h4\"\r\n                    sx={{\r\n                      display: 'inline-block',\r\n                      width: 'calc(100% - 34px)',\r\n                      textOverflow: 'ellipsis',\r\n                      whiteSpace: 'nowrap',\r\n                      overflow: 'hidden',\r\n                      verticalAlign: 'middle'\r\n                    }}\r\n                  >\r\n                    Edit Profile\r\n                  </Typography>\r\n                </Stack>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n          <Divider />\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n              <DialogContent>\r\n                <Grid container spacing={gridSpacing} sx={{ mt: 0.25 }}>\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      id=\"name\"\r\n                      name=\"name\"\r\n                      label=\"Name\"\r\n                      value={formik.values.name}\r\n                      onChange={formik.handleChange}\r\n                      error={formik.touched.name && Boolean(formik.errors.name)}\r\n                      helperText={formik.touched.name && formik.errors.name}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      id=\"phone\"\r\n                      name=\"phone\"\r\n                      label=\"Phone\"\r\n                      value={formik.values.phone}\r\n                      onChange={formik.handleChange}\r\n                      error={formik.touched.phone && Boolean(formik.errors.phone)}\r\n                      helperText={formik.touched.phone && formik.errors.phone}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <DesktopDatePicker\r\n                      label=\"Date of Birth\"\r\n                      value={formik.values.dob}\r\n                      inputFormat=\"dd/MM/yyyy\"\r\n                      onChange={(date) => {\r\n                        formik.setFieldValue('dob', date);\r\n                      }}\r\n                      renderInput={(props) => <TextField fullWidth {...props} />}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <FormControl fullWidth>\r\n                      <Select\r\n                        id=\"gender\"\r\n                        name=\"gender\"\r\n                        displayEmpty\r\n                        value={formik.values.gender}\r\n                        onChange={formik.handleChange}\r\n                        inputProps={{ 'aria-label': 'Without label' }}\r\n                      >\r\n                        {Gender.map((gender: SelectProps, index: number) => (\r\n                          <MenuItem key={index} value={gender.value}>\r\n                            {gender.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                </Grid>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button size=\"large\" variant=\"contained\" type=\"submit\">\r\n                  Save\r\n                </Button>\r\n                <Button size=\"large\" type=\"reset\" variant=\"outlined\" color=\"error\" onClick={(e) => formik.resetForm()}>\r\n                  Clear\r\n                </Button>\r\n              </DialogActions>\r\n            </LocalizationProvider>\r\n          </form>\r\n        </>\r\n      )}\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ProfileEdit;\r\n","// THIRD-PARTY\r\nimport React, { useEffect } from 'react';\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Grid,\r\n  List,\r\n  ListItemButton,\r\n  ListItemIcon,\r\n  ListItemSecondaryAction,\r\n  ListItemText,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableRow,\r\n  Typography\r\n} from '@mui/material';\r\nimport EmailIcon from '@mui/icons-material/Email';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport PhoneIphoneIcon from '@mui/icons-material/PhoneIphone';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport { Box } from '@mui/system';\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\n// PROJECT IMPORTS\r\nimport useAuth from 'hooks/useAuth';\r\n// import { getProfile } from '../../../../store/slices/profile';\r\nimport User from 'assets/images/users/user-round.svg';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport ProfileEdit from './ProfileEdit';\r\n\r\nexport default function Profile() {\r\n  const theme = useTheme();\r\n  const { user } = useAuth();\r\n\r\n  const [openDialog, setOpenDialog] = React.useState<boolean>(false);\r\n  const handleDialogOpen = () => {\r\n    setOpenDialog((prevState: any) => !prevState);\r\n  };\r\n\r\n  const userStr: string = user?.dob!;\r\n  const d = new Date(userStr);\r\n  const dobLocale = d.toLocaleDateString();\r\n\r\n  const [displayGender, setDisplayGender] = React.useState<string>('');\r\n  useEffect(() => {\r\n    switch (user?.gender) {\r\n      case 'male':\r\n        setDisplayGender('Male');\r\n        break;\r\n      case 'female':\r\n        setDisplayGender('Female');\r\n        break;\r\n      default:\r\n        setDisplayGender('N/A');\r\n        break;\r\n    }\r\n  }, [user?.gender]);\r\n\r\n  return (\r\n    <Box>\r\n      <Grid container justifyContent=\"center\" spacing={2} sx={{ minHeight: '100vh' }}>\r\n        <Grid item xs={12} lg={4}>\r\n          <MainCard>\r\n            <CardHeader\r\n              avatar={\r\n                <Avatar\r\n                  src={User}\r\n                  sx={{\r\n                    ...theme.typography.largeAvatar,\r\n                    cursor: 'pointer'\r\n                  }}\r\n                  aria-haspopup=\"true\"\r\n                  color=\"inherit\"\r\n                />\r\n              }\r\n              title={user?.name}\r\n              subheader={user?.type === 1 ? 'Administrator' : 'User'}\r\n              sx={{\r\n                borderBottom: '1px solid',\r\n                borderColor: theme.palette.mode === 'dark' ? theme.palette.background.default : theme.palette.primary[200] + 75,\r\n                ':hover': {\r\n                  boxShadow: theme.palette.mode === 'dark' ? '0 2px 14px 0 rgb(33 150 243 / 10%)' : '0 2px 14px 0 rgb(32 40 45 / 8%)'\r\n                }\r\n              }}\r\n            />\r\n            <CardContent>\r\n              <List>\r\n                <ListItemButton>\r\n                  <ListItemIcon>\r\n                    <PersonIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText>\r\n                    <Typography variant=\"h5\">Username</Typography>\r\n                  </ListItemText>\r\n                  <ListItemSecondaryAction>\r\n                    <Typography>{user?.username}</Typography>\r\n                  </ListItemSecondaryAction>\r\n                </ListItemButton>\r\n                <Divider />\r\n                <ListItemButton>\r\n                  <ListItemIcon>\r\n                    <EmailIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText>\r\n                    <Typography variant=\"h5\">Email</Typography>\r\n                  </ListItemText>\r\n                  <ListItemSecondaryAction>\r\n                    <Typography>{user?.email === null ? 'N/A' : user?.email}</Typography>\r\n                  </ListItemSecondaryAction>\r\n                </ListItemButton>\r\n                <Divider />\r\n                <ListItemButton>\r\n                  <ListItemIcon>\r\n                    <PhoneIphoneIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText>\r\n                    <Typography variant=\"h5\">Phone Number</Typography>\r\n                  </ListItemText>\r\n                  <ListItemSecondaryAction>\r\n                    <Typography>{user?.phone === null ? 'N/A' : user?.phone}</Typography>\r\n                  </ListItemSecondaryAction>\r\n                </ListItemButton>\r\n              </List>\r\n            </CardContent>\r\n          </MainCard>\r\n        </Grid>\r\n        <Grid item xs={12} lg={8}>\r\n          <MainCard>\r\n            <CardHeader\r\n              title=\"Personal Details\"\r\n              action={\r\n                <Button onClick={handleDialogOpen}>\r\n                  <EditIcon />\r\n                </Button>\r\n              }\r\n              sx={{\r\n                borderBottom: '1px solid',\r\n                borderColor: theme.palette.mode === 'dark' ? theme.palette.background.default : theme.palette.primary[200] + 75,\r\n                ':hover': {\r\n                  boxShadow: theme.palette.mode === 'dark' ? '0 2px 14px 0 rgb(33 150 243 / 10%)' : '0 2px 14px 0 rgb(32 40 45 / 8%)'\r\n                }\r\n              }}\r\n            />\r\n            <CardContent>\r\n              <TableContainer component={Card}>\r\n                <Table>\r\n                  <TableBody>\r\n                    <TableRow>\r\n                      <TableCell variant=\"head\">Full Name</TableCell>\r\n                      <TableCell variant=\"body\">{user?.name}</TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell variant=\"head\">Phone</TableCell>\r\n                      <TableCell variant=\"body\">{user?.phone === null ? 'N/A' : user?.phone}</TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell variant=\"head\">Date Of Birth</TableCell>\r\n                      <TableCell variant=\"body\">{dobLocale}</TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell variant=\"head\">Gender</TableCell>\r\n                      <TableCell variant=\"body\">{displayGender}</TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell variant=\"head\">Position</TableCell>\r\n                      <TableCell variant=\"body\">{user?.type === 1 ? 'Administrator' : 'User'}</TableCell>\r\n                    </TableRow>\r\n                  </TableBody>\r\n                </Table>\r\n                <ProfileEdit open={openDialog} handleDialogOpen={handleDialogOpen} />\r\n              </TableContainer>\r\n            </CardContent>\r\n          </MainCard>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\n// THIRD-PARTY\r\nimport React from 'react';\r\nimport { Grid, Button, FormControl, FormHelperText, Paper, CardHeader, TextField, Snackbar } from '@mui/material';\r\nimport { useTheme } from '@mui/system';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport MuiAlert, { AlertProps } from '@mui/material/Alert';\r\n\r\n// PROJECT IMPORTS\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport { gridSpacing } from 'store/constant';\r\nimport useAuth from 'hooks/useAuth';\r\nimport { dispatch } from 'store';\r\nimport { changeNewPassword } from 'store/slices/profile';\r\n\r\nconst validationSchema = Yup.object({\r\n  name: Yup.string().required('Name is required')\r\n});\r\n\r\nconst Alert = React.forwardRef<HTMLDivElement, AlertProps>((props, ref) => (\r\n  <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />\r\n));\r\n\r\nexport default function ChangePassword() {\r\n  const theme = useTheme();\r\n  const [showPassword, setShowPassword] = React.useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n  const { user } = useAuth();\r\n\r\n  // const handleClickShowPassword = () => {\r\n  //   setShowPassword(!showPassword);\r\n  // };\r\n\r\n  const handleClickChange = () => {\r\n    setOpen(true);\r\n    formik.resetForm();\r\n  };\r\n\r\n  const handleClose = (event?: React.SyntheticEvent | Event, reason?: string) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleMouseDownPassword = (event: React.SyntheticEvent) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: user?.name,\r\n      phone: user?.phone,\r\n      dob: user?.dob,\r\n      gender: user?.gender,\r\n      password: '',\r\n      password_confirmation: ''\r\n    },\r\n    validationSchema,\r\n    onSubmit: (values) => {\r\n      dispatch(changeNewPassword(values));\r\n      handleClickChange();\r\n    }\r\n  });\r\n  return (\r\n    <Paper>\r\n      <MainCard>\r\n        <CardHeader\r\n          title=\"Change Password\"\r\n          sx={{\r\n            borderBottom: '1px solid'\r\n            // borderColor: theme.palette.mode === 'dark' ? theme.palette.background.default : theme.palette.primary[200] + 75,\r\n            // ':hover': {\r\n            //   boxShadow: theme.palette.mode === 'dark' ? '0 2px 14px 0 rgb(33 150 243 / 10%)' : '0 2px 14px 0 rgb(32 40 45 / 8%)'\r\n            // }\r\n          }}\r\n        />\r\n        <form noValidate onSubmit={formik.handleSubmit}>\r\n          <Grid container rowSpacing={2} columnSpacing={gridSpacing} sx={{ mt: 0.25 }}>\r\n            <Grid item xs={6}>\r\n              <FormControl fullWidth error={Boolean(formik.touched.password && formik.errors.password)}>\r\n                {/* <InputLabel htmlFor=\"outlined-adornment-password\">New Password</InputLabel> */}\r\n                <TextField\r\n                  id=\"password\"\r\n                  value={formik.values.password}\r\n                  type={showPassword ? 'text' : 'password'}\r\n                  name=\"password\"\r\n                  onChange={formik.handleChange}\r\n                  label=\"Password\"\r\n                />\r\n                {formik.touched.password && formik.errors.password && (\r\n                  <FormHelperText error id=\"standard-weight-helper-text-password-login\">\r\n                    {formik.errors.password}\r\n                  </FormHelperText>\r\n                )}\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <FormControl fullWidth error={Boolean(formik.touched.password_confirmation && formik.errors.password_confirmation)}>\r\n                {/* <InputLabel htmlFor=\"outlined-adornment-retype-password\">Retype New Password</InputLabel> */}\r\n                <TextField\r\n                  id=\"password_confirmation\"\r\n                  value={formik.values.password_confirmation}\r\n                  type={showPassword ? 'text' : 'password'}\r\n                  name=\"password_confirmation\"\r\n                  onChange={formik.handleChange}\r\n                  label=\"Password Confirmation\"\r\n                  inputProps={{}}\r\n                />\r\n                {formik.touched.password_confirmation && formik.errors.password_confirmation && (\r\n                  <FormHelperText error id=\"standard-weight-helper-text-password-login\">\r\n                    {formik.errors.password_confirmation}\r\n                  </FormHelperText>\r\n                )}\r\n              </FormControl>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container direction=\"row\" alignItems=\"flex-end\" justifyContent=\"flex-end\" spacing={gridSpacing} sx={{ mt: 2 }}>\r\n            <Grid item>\r\n              <Button size=\"large\" type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                Change Password\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button size=\"large\" type=\"reset\" variant=\"outlined\" color=\"error\" onClick={(e) => formik.resetForm()}>\r\n                Clear\r\n              </Button>\r\n            </Grid>\r\n            <Snackbar open={open} autoHideDuration={2000} onClose={handleClose}>\r\n              <Alert onClose={handleClose} severity=\"success\" sx={{ width: '100%' }}>\r\n                Change Password Successfully!\r\n              </Alert>\r\n            </Snackbar>\r\n          </Grid>\r\n        </form>\r\n      </MainCard>\r\n    </Paper>\r\n  );\r\n}\r\n","// THIRD-PARTY\r\nimport React from 'react';\r\nimport {\r\n  Paper,\r\n  Grid,\r\n  useTheme,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  Switch,\r\n  Divider,\r\n  TextField,\r\n  Button,\r\n  Stack,\r\n  Snackbar,\r\n  FormGroup,\r\n  FormControlLabel\r\n} from '@mui/material';\r\nimport FacebookIcon from '@mui/icons-material/Facebook';\r\nimport LinkedInIcon from '@mui/icons-material/LinkedIn';\r\nimport TwitterIcon from '@mui/icons-material/Twitter';\r\nimport MuiAlert, { AlertProps } from '@mui/material/Alert';\r\n\r\n// PROJECT IMPORTS\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport { gridSpacing } from 'store/constant';\r\nimport { useSelector } from 'store';\r\nimport { editNotifications } from 'store/slices/notification';\r\n\r\nconst Alert = React.forwardRef<HTMLDivElement, AlertProps>((props, ref) => (\r\n  <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />\r\n));\r\n\r\nexport default function SettingPage() {\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [openSettings, setOpenSettings] = React.useState(false);\r\n\r\n  const notifiState = useSelector((state) => state.notification.notifications);\r\n\r\n  const [state, setState] = React.useState(notifiState);\r\n\r\n  const [FacebookURL, setFacebookURL] = React.useState('');\r\n  const [LinkedInURL, setLinkedInURL] = React.useState('');\r\n  const [TwitterURL, setTwitterURL] = React.useState('');\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.checked\r\n    });\r\n  };\r\n\r\n  const handleClose = (event?: React.SyntheticEvent | Event, reason?: string) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSettingsChange = () => {\r\n    editNotifications(state);\r\n    setOpenSettings(true);\r\n  };\r\n\r\n  const handleSettingsClose = (event?: React.SyntheticEvent | Event, reason?: string) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpenSettings(false);\r\n  };\r\n\r\n  const handleFacebookURLChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setFacebookURL(event.target.value);\r\n  };\r\n  const handleFacebookConnect = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleLinkedInURLChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setLinkedInURL(event.target.value);\r\n  };\r\n  const handleLinkedInConnect = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleTwitterURLChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setTwitterURL(event.target.value);\r\n  };\r\n  const handleTwitterConnect = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <Grid container justifyContent=\"center\" spacing={gridSpacing}>\r\n        <Grid item xs={12}>\r\n          <MainCard>\r\n            <CardHeader\r\n              title=\"Notifications\"\r\n              subheader=\"Alway let you knows about important changes\"\r\n              sx={{\r\n                borderBottom: '1px solid',\r\n                borderColor: theme.palette.mode === 'dark' ? theme.palette.background.default : theme.palette.primary[200] + 75,\r\n                ':hover': {\r\n                  boxShadow: theme.palette.mode === 'dark' ? '0 2px 14px 0 rgb(33 150 243 / 10%)' : '0 2px 14px 0 rgb(32 40 45 / 8%)'\r\n                }\r\n              }}\r\n            />\r\n            <CardContent>\r\n              <Grid container justifyContent=\"center\" spacing={2}>\r\n                <Grid item xs={12} lg={4}>\r\n                  <Typography variant=\"h5\">Send Email Notifications</Typography>\r\n                </Grid>\r\n                <Grid item xs={12} lg={8}>\r\n                  <FormGroup>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Switch checked={state.email} onChange={handleChange} name=\"email\" inputProps={{ 'aria-label': 'controlled' }} />\r\n                      }\r\n                      label=\"\"\r\n                    />\r\n                  </FormGroup>\r\n                </Grid>\r\n              </Grid>\r\n              <Divider />\r\n              <Grid container justifyContent=\"center\" spacing={2} sx={{ mt: 0.25 }}>\r\n                <Grid item xs={12} lg={4}>\r\n                  <Typography variant=\"h5\">Notifications on your Desktop</Typography>\r\n                </Grid>\r\n                <Grid item xs={12} lg={8}>\r\n                  <FormGroup>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Switch\r\n                          checked={state.desktop}\r\n                          onChange={handleChange}\r\n                          name=\"desktop\"\r\n                          inputProps={{ 'aria-label': 'controlled' }}\r\n                        />\r\n                      }\r\n                      label=\"Chrome Browser Notification\"\r\n                    />\r\n                  </FormGroup>\r\n                </Grid>\r\n              </Grid>\r\n              <Divider />\r\n              <Grid container justifyContent=\"center\" spacing={2} sx={{ mt: 0.25 }}>\r\n                <Grid item xs={12} lg={4}>\r\n                  <Typography variant=\"h5\">Notify when login attempted from other place</Typography>\r\n                </Grid>\r\n                <Grid item xs={12} lg={8}>\r\n                  <FormGroup>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Switch\r\n                          checked={state.attempted}\r\n                          onChange={handleChange}\r\n                          name=\"attempted\"\r\n                          inputProps={{ 'aria-label': 'controlled' }}\r\n                        />\r\n                      }\r\n                      label=\"\"\r\n                    />\r\n                  </FormGroup>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container direction=\"row\" alignItems=\"flex-end\" justifyContent=\"flex-end\" spacing={gridSpacing} sx={{ mt: 2 }}>\r\n                <Grid item>\r\n                  <Button size=\"large\" type=\"submit\" variant=\"contained\" color=\"primary\" onClick={handleSettingsChange}>\r\n                    Apply Change\r\n                  </Button>\r\n                </Grid>\r\n                <Snackbar open={openSettings} autoHideDuration={2500} onClose={handleSettingsClose}>\r\n                  <Alert onClose={handleSettingsClose} severity=\"success\" sx={{ width: '100%' }}>\r\n                    Apply Settings Change Successfully!\r\n                  </Alert>\r\n                </Snackbar>\r\n              </Grid>\r\n            </CardContent>\r\n          </MainCard>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <MainCard>\r\n            <CardHeader\r\n              title=\"Social Networks\"\r\n              subheader=\"Learn more\"\r\n              sx={{\r\n                borderBottom: '1px solid',\r\n                borderColor: theme.palette.mode === 'dark' ? theme.palette.background.default : theme.palette.primary[200] + 75,\r\n                ':hover': {\r\n                  boxShadow: theme.palette.mode === 'dark' ? '0 2px 14px 0 rgb(33 150 243 / 10%)' : '0 2px 14px 0 rgb(32 40 45 / 8%)'\r\n                }\r\n              }}\r\n            />\r\n            <CardContent>\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignContent=\"center\"\r\n                alignItems=\"center\"\r\n                spacing={2}\r\n                sx={{ mt: 0.25 }}\r\n              >\r\n                <Grid item xs={12}>\r\n                  <Stack direction=\"row\" spacing={2}>\r\n                    <FacebookIcon fontSize=\"large\" />\r\n                    <TextField\r\n                      margin=\"dense\"\r\n                      id=\"FacebookUrl\"\r\n                      label=\"Facebook Profile URL\"\r\n                      value={FacebookURL}\r\n                      onChange={handleFacebookURLChange}\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                    />\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleFacebookConnect}>\r\n                      Connect\r\n                    </Button>\r\n                  </Stack>\r\n                </Grid>\r\n                <Divider />\r\n                <Grid item xs={12}>\r\n                  <Stack direction=\"row\" spacing={2}>\r\n                    <LinkedInIcon fontSize=\"large\" />\r\n                    <TextField\r\n                      margin=\"dense\"\r\n                      id=\"LinkedInUrl\"\r\n                      label=\"LinkedIn Profile URL\"\r\n                      value={LinkedInURL}\r\n                      onChange={handleLinkedInURLChange}\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                    />\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleLinkedInConnect}>\r\n                      Connect\r\n                    </Button>\r\n                  </Stack>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Stack direction=\"row\" spacing={2}>\r\n                    <TwitterIcon fontSize=\"large\" />\r\n                    <TextField\r\n                      margin=\"dense\"\r\n                      id=\"TwitterUrl\"\r\n                      label=\"Twitter Profile URL\"\r\n                      value={TwitterURL}\r\n                      onChange={handleTwitterURLChange}\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                    />\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleTwitterConnect}>\r\n                      Connect\r\n                    </Button>\r\n                  </Stack>\r\n                  <Snackbar open={open} autoHideDuration={2000} onClose={handleClose}>\r\n                    <Alert onClose={handleClose} severity=\"success\" sx={{ width: '100%' }}>\r\n                      Connected Successfully!\r\n                    </Alert>\r\n                  </Snackbar>\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n          </MainCard>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Tab from '@mui/material/Tab';\r\nimport TabContext from '@mui/lab/TabContext';\r\nimport TabList from '@mui/lab/TabList';\r\nimport TabPanel from '@mui/lab/TabPanel';\r\nimport Profile from 'views/pages/account/tabs/Profile';\r\nimport ChangePassword from 'views/pages/account/tabs/ChangePassword';\r\nimport SettingPage from 'views/pages/account/tabs/SettingsPage';\r\nimport { Grid, Paper, CardContent } from '@mui/material';\r\n\r\nexport default function LabTabs() {\r\n  const [value, setValue] = React.useState('1');\r\n\r\n  const handleChange = (event: React.SyntheticEvent, newValue: string) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <Paper elevation={0}>\r\n      <CardContent>\r\n        <Grid container spacing={2} sx={{ minHeight: '100vh' }}>\r\n          <Grid item xs={12}>\r\n            <TabContext value={value}>\r\n              <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n                <TabList onChange={handleChange} aria-label=\"lab API tabs example\">\r\n                  <Tab label=\"Profile\" value=\"1\" />\r\n                  <Tab label=\"Change Password\" value=\"2\" />\r\n                  <Tab label=\"Setings\" value=\"3\" />\r\n                </TabList>\r\n              </Box>\r\n              <TabPanel value=\"1\">\r\n                {' '}\r\n                <Profile />{' '}\r\n              </TabPanel>\r\n              <TabPanel value=\"2\">\r\n                {' '}\r\n                <ChangePassword />{' '}\r\n              </TabPanel>\r\n              <TabPanel value=\"3\">\r\n                {' '}\r\n                <SettingPage />{' '}\r\n              </TabPanel>\r\n            </TabContext>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Paper>\r\n  );\r\n}\r\n"],"sourceRoot":""}