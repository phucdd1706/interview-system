{"version":3,"sources":["ui-component/extended/AnimateButton.tsx","ui-component/Alert/AlertDelete.tsx","views/pages/language/AddLanguage.tsx","views/pages/language/Language.tsx","ui-component/CommonFilters/SortStatus.ts","ui-component/CommonFilters/StatusFilters.tsx","views/pages/language/index.tsx"],"names":["AnimateButton","React","forwardRef","ref","offset1","offset2","children","type","direction","offset","scale","useCycle","x","cycleX","y","cycleY","div","animate","rotate","transition","repeat","Infinity","repeatType","duration","repeatDelay","undefined","onHoverEnd","onHoverStart","hover","tap","whileHover","whileTap","defaultProps","AlertDelete","name","open","handleClose","onClose","keepMounted","maxWidth","id","sx","mr","onClick","color","variant","size","autoFocus","AddInProgress","dataEdit","visible","handleVisibleModal","getList","useState","errors","setErrors","openNotification","message","dispatch","openSnackbar","anchorOrigin","vertical","horizontal","alert","close","changeModal","formik","resetForm","validationSchema","yup","shape","max","required","description","useFormik","enableReinitialize","initialValues","status","onSubmit","values","editLanguage","params","callback","res","data","success","addLanguage","handleAdd","Dialog","m","borderRadius","width","maxHeight","Box","p","Grid","container","alignItems","spacing","justifyContent","item","Stack","Button","minWidth","display","xs","md","Typography","textOverflow","whiteSpace","overflow","verticalAlign","Divider","handleSubmit","DialogContent","gridSpacing","mt","xl","TextField","value","label","style","fullWidth","onChange","handleChange","error","touched","Boolean","helperText","FormControl","InputLabel","Select","displayEmpty","inputProps","map","index","MenuItem","Language","language","theme","useTheme","visibleAdd","setVisibleAdd","anchorEl","setAnchorEl","openModal","setOpenModal","languageState","useSelector","state","handleClick","event","currentTarget","TableRow","TableCell","currentPage","component","scope","Link","underline","cursor","moment","created_at","format","Chip","background","palette","mode","dark","main","warning","light","ButtonBase","className","IconButton","disableRipple","fontSize","Menu","transformOrigin","e","removeLanguage","AddLanguage","prevState","SortStatus","StatusFilters","props","filters","handleSortClick","anchorElSort","handleSort","handleCloseSort","sortLabel","filter","items","openSort","sm","fontWeight","endIcon","length","selected","Index","useDispatch","matchDownSM","useMediaQuery","breakpoints","down","matchDownMD","spacingMD","setLanguage","setAnchorElSort","search","limit","setFilters","useEffect","filterData","fetchLanguages","a","handleSearch","newString","target","addInProgress","MainCard","title","InputProps","startAdornment","InputAdornment","position","placeholder","textAlign","Tooltip","Fab","boxShadow","ml","height","minHeight","content","TableContainer","Table","TableHead","pl","align","pr","TableBody","row","Pagination","count","pageCount","page","pageTable"],"mappings":"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","file":"static/js/19.39fa8594.chunk.js","sourcesContent":["// THIRD-PARTY\r\nimport React, { Ref } from 'react';\r\nimport { motion, useCycle } from 'framer-motion';\r\n\r\ninterface ScaleProps {\r\n  hover: number | string | undefined;\r\n  tap: number | string | undefined;\r\n}\r\n\r\ninterface AnimateButtonProps {\r\n  children?: React.ReactNode;\r\n  type?: 'slide' | 'scale' | 'rotate';\r\n  direction?: 'up' | 'down' | 'left' | 'right';\r\n  offset?: number;\r\n  scale?: ScaleProps;\r\n}\r\n\r\nconst AnimateButton = React.forwardRef(({ children, type, direction, offset, scale }: AnimateButtonProps, ref: Ref<HTMLDivElement>) => {\r\n  let offset1;\r\n  let offset2;\r\n  switch (direction) {\r\n    case 'up':\r\n    case 'left':\r\n      offset1 = offset;\r\n      offset2 = 0;\r\n      break;\r\n    case 'right':\r\n    case 'down':\r\n    default:\r\n      offset1 = 0;\r\n      offset2 = offset;\r\n      break;\r\n  }\r\n\r\n  const [x, cycleX] = useCycle(offset1, offset2);\r\n  const [y, cycleY] = useCycle(offset1, offset2);\r\n\r\n  switch (type) {\r\n    case 'rotate':\r\n      return (\r\n        <motion.div\r\n          ref={ref}\r\n          animate={{ rotate: 360 }}\r\n          transition={{\r\n            repeat: Infinity,\r\n            repeatType: 'loop',\r\n            duration: 2,\r\n            repeatDelay: 0\r\n          }}\r\n        >\r\n          {children}\r\n        </motion.div>\r\n      );\r\n    case 'slide':\r\n      if (direction === 'up' || direction === 'down') {\r\n        return (\r\n          <motion.div ref={ref} animate={{ y: y !== undefined ? y : '' }} onHoverEnd={() => cycleY()} onHoverStart={() => cycleY()}>\r\n            {children}\r\n          </motion.div>\r\n        );\r\n      }\r\n      return (\r\n        <motion.div ref={ref} animate={{ x: x !== undefined ? x : '' }} onHoverEnd={() => cycleX()} onHoverStart={() => cycleX()}>\r\n          {children}\r\n        </motion.div>\r\n      );\r\n\r\n    case 'scale':\r\n    default:\r\n      if (typeof scale === 'number') {\r\n        scale = {\r\n          hover: scale,\r\n          tap: scale\r\n        };\r\n      }\r\n      return (\r\n        <motion.div ref={ref} whileHover={{ scale: scale?.hover }} whileTap={{ scale: scale?.tap }}>\r\n          {children}\r\n        </motion.div>\r\n      );\r\n  }\r\n});\r\n\r\nAnimateButton.defaultProps = {\r\n  type: 'scale',\r\n  offset: 10,\r\n  direction: 'right',\r\n  scale: {\r\n    hover: 1,\r\n    tap: 0.9\r\n  }\r\n};\r\n\r\nexport default AnimateButton;\r\n","// THIRD-PARTY\r\nimport { Button, Dialog, DialogActions, DialogTitle } from '@mui/material';\r\n\r\n// PROJECT IMPORTS\r\ninterface Props {\r\n  name: string | undefined;\r\n  open: boolean;\r\n  handleClose: (status: boolean) => void;\r\n}\r\n\r\nexport default function AlertDelete({ name, open, handleClose }: Props) {\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={() => handleClose(false)}\r\n      keepMounted\r\n      maxWidth=\"xs\"\r\n      aria-labelledby=\"item-delete-title\"\r\n      aria-describedby=\"item-delete-description\"\r\n    >\r\n      {open && (\r\n        <>\r\n          <DialogTitle id=\"item-delete-title\">{name} - Are you sure you want to delete?</DialogTitle>{' '}\r\n          <DialogActions sx={{ mr: 2 }}>\r\n            <Button onClick={() => handleClose(false)} color=\"error\">\r\n              Cancel\r\n            </Button>\r\n            <Button variant=\"contained\" size=\"small\" onClick={() => handleClose(true)} autoFocus>\r\n              Delete\r\n            </Button>\r\n          </DialogActions>\r\n        </>\r\n      )}\r\n    </Dialog>\r\n  );\r\n}\r\n","// THIRD PARTY\r\nimport React, { useState } from 'react';\r\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Stack,\r\n  DialogContent,\r\n  Typography,\r\n  Divider,\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  TextField,\r\n  Grid,\r\n  InputLabel,\r\n  Dialog\r\n} from '@mui/material';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\n\r\n// PROJECT IMPORT\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport { addLanguage, editLanguage } from 'store/slices/language';\r\nimport { Languages } from 'types/language';\r\nimport { dispatch } from 'store';\r\nimport { openSnackbar } from 'store/slices/snackbar';\r\nimport { gridSpacing } from 'store/constant';\r\nimport { SelectProps } from 'types/customer';\r\n\r\ninterface Props {\r\n  dataEdit: Languages;\r\n  visible: boolean;\r\n  handleVisibleModal: () => void;\r\n  getList: () => void;\r\n}\r\n\r\nconst AddInProgress = ({ dataEdit, visible, handleVisibleModal, getList }: Props) => {\r\n  const [errors, setErrors] = useState<any>({});\r\n\r\n  const handleAdd = (values: Languages) => {\r\n    if (dataEdit.id) {\r\n      dispatch(\r\n        editLanguage({\r\n          id: dataEdit.id,\r\n          params: values,\r\n          callback: (res) => {\r\n            if (res?.data?.success) {\r\n              openNotification('success', 'Edit language successfully!');\r\n              changeModal('close');\r\n            } else {\r\n              openNotification('error', res?.message);\r\n              setErrors(res?.errors);\r\n            }\r\n          }\r\n        })\r\n      );\r\n    } else {\r\n      dispatch(\r\n        addLanguage({\r\n          params: values,\r\n          callback: (res) => {\r\n            if (res?.data?.success) {\r\n              getList();\r\n              openNotification('success', 'Add language successfully!');\r\n              changeModal('close');\r\n            } else {\r\n              openNotification('error', res?.message);\r\n              setErrors(res?.errors);\r\n            }\r\n          }\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const openNotification = (color: string, message: string) => {\r\n    dispatch(\r\n      openSnackbar({\r\n        open: true,\r\n        message,\r\n        anchorOrigin: { vertical: 'top', horizontal: 'right' },\r\n        variant: 'alert',\r\n        alert: {\r\n          color\r\n        },\r\n        close: true\r\n      })\r\n    );\r\n  };\r\n\r\n  const changeModal = (type: string) => {\r\n    if (type === 'close') {\r\n      setErrors({});\r\n      handleVisibleModal();\r\n      formik.resetForm();\r\n    }\r\n  };\r\n\r\n  const validationSchema = yup.object().shape({\r\n    name: yup.string().max(30).required('Name is required'),\r\n    description: yup.string().max(255).required('Description is required')\r\n  });\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      name: dataEdit?.name,\r\n      description: dataEdit?.description,\r\n      status: dataEdit?.id ? dataEdit.status : 1\r\n    },\r\n    validationSchema,\r\n    onSubmit: (values) => {\r\n      handleAdd(values);\r\n    }\r\n  });\r\n\r\n  const Status: SelectProps[] = [\r\n    {\r\n      value: 0,\r\n      label: 'Inactive'\r\n    },\r\n    {\r\n      value: 1,\r\n      label: 'Active'\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Dialog\r\n      open={visible}\r\n      onClose={() => {\r\n        changeModal('close');\r\n      }}\r\n      sx={{\r\n        '&>div:nth-of-type(3)': {\r\n          '&>div': {\r\n            m: 0,\r\n            borderRadius: '0px',\r\n            width: 850,\r\n            maxWidth: 850,\r\n            maxHeight: '100%'\r\n          }\r\n        }\r\n      }}\r\n    >\r\n      {visible && (\r\n        <>\r\n          <Box sx={{ p: 3 }}>\r\n            <Grid container alignItems=\"center\" spacing={0.5} justifyContent=\"space-between\">\r\n              <Grid item sx={{ width: 'calc(100% - 50px)' }}>\r\n                <Stack direction=\"row\" spacing={0.5} alignItems=\"center\">\r\n                  <Button\r\n                    variant=\"text\"\r\n                    color=\"error\"\r\n                    sx={{ p: 0.5, minWidth: 32, display: { xs: 'block', md: 'none' } }}\r\n                    onClick={() => changeModal('close')}\r\n                  >\r\n                    <HighlightOffIcon />\r\n                  </Button>\r\n                  <Typography\r\n                    variant=\"h4\"\r\n                    sx={{\r\n                      display: 'inline-block',\r\n                      width: 'calc(100% - 34px)',\r\n                      textOverflow: 'ellipsis',\r\n                      whiteSpace: 'nowrap',\r\n                      overflow: 'hidden',\r\n                      verticalAlign: 'middle'\r\n                    }}\r\n                  >\r\n                    {dataEdit?.id ? `Edit ${dataEdit.name}` : 'Add new language'}\r\n                  </Typography>\r\n                </Stack>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n\r\n          <Divider />\r\n\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <DialogContent>\r\n              <Grid container spacing={gridSpacing} sx={{ mt: 0.25 }}>\r\n                <Grid item xs={12} xl={12}>\r\n                  <TextField\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    value={formik.values?.name}\r\n                    label={\r\n                      <span>\r\n                        <span style={{ color: '#f44336' }}>*</span> Name\r\n                      </span>\r\n                    }\r\n                    fullWidth\r\n                    onChange={formik.handleChange}\r\n                    error={(formik.touched.name && Boolean(formik.errors.name)) || errors?.name}\r\n                    helperText={(formik.touched.name && formik.errors.name) || errors?.name}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} xl={12}>\r\n                  <TextField\r\n                    id=\"description\"\r\n                    name=\"description\"\r\n                    value={formik.values?.description}\r\n                    label={\r\n                      <span>\r\n                        <span style={{ color: '#f44336' }}>*</span> Description\r\n                      </span>\r\n                    }\r\n                    fullWidth\r\n                    onChange={formik.handleChange}\r\n                    error={(formik.touched.description && Boolean(formik.errors.description)) || errors?.description}\r\n                    helperText={(formik.touched.description && formik.errors.description) || errors?.description}\r\n                  />\r\n                </Grid>\r\n                {dataEdit.id && (\r\n                  <Grid item xs={12}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel>Status</InputLabel>\r\n                      <Select\r\n                        id=\"status\"\r\n                        name=\"status\"\r\n                        label=\"Status\"\r\n                        displayEmpty\r\n                        value={formik.values.status}\r\n                        onChange={formik.handleChange}\r\n                        inputProps={{ 'aria-label': 'Without label' }}\r\n                      >\r\n                        {Status.map((status: SelectProps, index: number) => (\r\n                          <MenuItem key={index} value={status.value}>\r\n                            {status.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                )}\r\n                <Grid item xs={12}>\r\n                  <AnimateButton>\r\n                    <Button fullWidth variant=\"contained\" type=\"submit\">\r\n                      Save\r\n                    </Button>\r\n                  </AnimateButton>\r\n                </Grid>\r\n              </Grid>\r\n            </DialogContent>\r\n          </form>\r\n        </>\r\n      )}\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AddInProgress;\r\n","// THIRD-PARTY\r\nimport React, { useState } from 'react';\r\nimport { ButtonBase, Link, TableCell, TableRow, Chip, IconButton, Menu, MenuItem, Stack, Typography } from '@mui/material';\r\nimport moment from 'moment';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport MoreVertTwoToneIcon from '@mui/icons-material/MoreVertTwoTone';\r\n\r\n// PROJECT IMPORTS\r\nimport { removeLanguage } from 'store/slices/language';\r\nimport { Languages } from 'types/language';\r\nimport AddLanguage from 'views/pages/language/AddLanguage';\r\nimport AlertDelete from 'ui-component/Alert/AlertDelete';\r\nimport { openSnackbar } from 'store/slices/snackbar';\r\nimport { RootState, dispatch, useSelector } from 'store/index';\r\n\r\ninterface Props {\r\n  language: Languages;\r\n  index: number;\r\n  getList: () => void;\r\n}\r\n\r\nconst Language = ({ language, index, getList }: Props) => {\r\n  const theme = useTheme();\r\n\r\n  const [visibleAdd, setVisibleAdd] = useState<boolean>(false);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const languageState = useSelector((state: RootState) => state.language);\r\n\r\n  const handleClick = (event: any) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleRemove = (status: boolean) => {\r\n    setOpenModal(false);\r\n    if (status) {\r\n      dispatch(\r\n        removeLanguage({\r\n          id: language.id,\r\n          callback: (res) => {\r\n            if (res?.data?.success) {\r\n              getList();\r\n              openNotification('success', 'Delete record successfully!');\r\n            } else {\r\n              openNotification('error', res?.message);\r\n            }\r\n          }\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const openNotification = (color: string, message: string) => {\r\n    dispatch(\r\n      openSnackbar({\r\n        open: true,\r\n        message,\r\n        anchorOrigin: { vertical: 'top', horizontal: 'right' },\r\n        variant: 'alert',\r\n        alert: {\r\n          color\r\n        },\r\n        close: true\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleVisibleModal = () => {\r\n    setVisibleAdd((prevState) => !prevState);\r\n  };\r\n\r\n  const renderMenuButton = () => (\r\n    <>\r\n      <ButtonBase\r\n        className=\"more-button\"\r\n        sx={{ borderRadius: '12px' }}\r\n        onClick={handleClick}\r\n        aria-controls=\"menu-comment\"\r\n        aria-haspopup=\"true\"\r\n      >\r\n        <IconButton component=\"span\" size=\"small\" disableRipple>\r\n          <MoreVertTwoToneIcon fontSize=\"inherit\" />\r\n        </IconButton>\r\n      </ButtonBase>\r\n      <Menu\r\n        id=\"menu-comment\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n        variant=\"selectedMenu\"\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'right'\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right'\r\n        }}\r\n      >\r\n        <MenuItem\r\n          onClick={() => {\r\n            handleClose();\r\n            setVisibleAdd(!visibleAdd);\r\n          }}\r\n        >\r\n          Edit\r\n        </MenuItem>\r\n        <MenuItem\r\n          onClick={(e) => {\r\n            handleClose();\r\n            setOpenModal(true);\r\n          }}\r\n        >\r\n          Delete\r\n        </MenuItem>\r\n      </Menu>\r\n    </>\r\n  );\r\n\r\n  const renderStatus = (status: number) => (\r\n    <>\r\n      {status === 0 && (\r\n        <Chip\r\n          label=\"Inactive\"\r\n          size=\"small\"\r\n          sx={{\r\n            background: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.warning.light,\r\n            color: theme.palette.warning.dark\r\n          }}\r\n        />\r\n      )}\r\n      {status === 1 && (\r\n        <Chip\r\n          label=\"Active\"\r\n          size=\"small\"\r\n          sx={{\r\n            background: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.success.light + 60,\r\n            color: theme.palette.success.dark\r\n          }}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <TableRow hover key={language?.id}>\r\n        <TableCell sx={{ width: 110, minWidth: 110 }}>\r\n          <Stack direction=\"row\" spacing={0.5} alignItems=\"center\">\r\n            <Typography variant=\"body2\">{index + 20 * (languageState.currentPage - 1) + 1}</Typography>\r\n          </Stack>\r\n        </TableCell>\r\n        <TableCell sx={{ width: '15%', minWidth: 250, maxWidth: 'calc(100vw - 850px)', overflow: 'hidden' }} component=\"th\" scope=\"row\">\r\n          <Link\r\n            underline=\"hover\"\r\n            color=\"default\"\r\n            sx={{\r\n              overflow: 'hidden',\r\n              display: 'block',\r\n              textOverflow: 'ellipsis',\r\n              whiteSpace: 'nowrap',\r\n              ':hover': { color: 'primary.main' },\r\n              cursor: 'pointer'\r\n            }}\r\n          >\r\n            {language?.name}\r\n          </Link>\r\n        </TableCell>\r\n        <TableCell sx={{ width: '30%', minWidth: 250, maxWidth: 450, overflow: 'hidden' }}>{language?.description}</TableCell>\r\n        <TableCell>{moment(language.created_at).format('DD/MM/YYYY HH:mm')}</TableCell>\r\n        <TableCell>{renderStatus(language?.status)}</TableCell>\r\n        <TableCell sx={{ width: 60, minWidth: 60 }}>{renderMenuButton()}</TableCell>\r\n        {openModal && <AlertDelete name={language?.name} open={openModal} handleClose={handleRemove} />}\r\n      </TableRow>\r\n      <AddLanguage visible={visibleAdd} dataEdit={language} handleVisibleModal={handleVisibleModal} getList={() => getList()} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Language;\r\n","// PROJECT IMPORTS\r\nimport { Status } from 'types/history';\r\n\r\nconst SortStatus: Status[] = [\r\n  {\r\n    value: '',\r\n    label: 'All'\r\n  },\r\n  {\r\n    value: 0,\r\n    label: 'Inactive'\r\n  },\r\n  {\r\n    value: 1,\r\n    label: 'Active'\r\n  }\r\n];\r\n\r\nexport default SortStatus;\r\n","// THIRD-PARTY\r\nimport { Button, Typography, Menu, MenuItem, Stack } from '@mui/material';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\n\r\n// PROJECT IMPORTS\r\nimport SortStatus from './SortStatus';\r\n\r\nconst StatusFilters = (props: any) => {\r\n  const { filters, handleSortClick, anchorElSort, handleSort, handleCloseSort } = props;\r\n  const sortLabel = SortStatus?.filter((items) => items.value === filters.status);\r\n\r\n  const openSort = Boolean(anchorElSort);\r\n\r\n  return (\r\n    <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"center\" sx={{ display: { xs: 'none', sm: 'flex' } }}>\r\n      <Typography variant=\"h5\">Sort by: </Typography>\r\n      <Button\r\n        id=\"demo-positioned-button\"\r\n        aria-controls=\"demo-positioned-menu\"\r\n        aria-haspopup=\"true\"\r\n        aria-expanded={openSort ? 'true' : undefined}\r\n        onClick={handleSort}\r\n        sx={{ color: 'grey.500', fontWeight: 400 }}\r\n        endIcon={<KeyboardArrowDownIcon />}\r\n      >\r\n        {sortLabel?.length > 0 && sortLabel[0]?.label}\r\n      </Button>\r\n      <Menu\r\n        id=\"demo-positioned-menu\"\r\n        aria-labelledby=\"demo-positioned-button\"\r\n        anchorEl={anchorElSort}\r\n        open={openSort}\r\n        onClose={handleCloseSort}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'right'\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right'\r\n        }}\r\n      >\r\n        {SortStatus?.map((status, index) => (\r\n          <MenuItem\r\n            sx={{ p: 1.5 }}\r\n            key={index}\r\n            selected={status.value === filters.status}\r\n            onClick={(event) => handleSortClick(event, status.value)}\r\n          >\r\n            {status.label}\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default StatusFilters;\r\n","// THIRD-PARTY\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n  TextField,\r\n  Grid,\r\n  InputAdornment,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableRow,\r\n  TableContainer,\r\n  TableHead,\r\n  Fab,\r\n  Tooltip,\r\n  Pagination,\r\n  Stack,\r\n  useMediaQuery\r\n} from '@mui/material';\r\nimport AddIcon from '@mui/icons-material/AddTwoTone';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\n\r\n// PROJECT IMPORTS\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport { RootState, useDispatch, useSelector } from 'store/index';\r\nimport { Languages, SearchValues } from 'types/language';\r\nimport { fetchLanguages } from 'store/slices/language';\r\nimport Language from 'views/pages/language/Language';\r\nimport { gridSpacing } from '../../../store/constant';\r\nimport AddLanguage from 'views/pages/language/AddLanguage';\r\nimport StatusFilters from 'ui-component/CommonFilters/StatusFilters';\r\n\r\nconst Index = () => {\r\n  const dispatch = useDispatch();\r\n  const theme = useTheme();\r\n  const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\r\n  const matchDownMD = useMediaQuery(theme.breakpoints.down('lg'));\r\n  const spacingMD = matchDownMD ? 1 : 1.5;\r\n\r\n  const languageState = useSelector((state: RootState) => state.language);\r\n\r\n  const [language, setLanguage] = useState<Languages[]>([]);\r\n  const [visibleAdd, setVisibleAdd] = useState(false);\r\n  const [anchorElSort, setAnchorElSort] = useState(null);\r\n\r\n  const [filters, setFilters] = useState<SearchValues>({\r\n    search: '',\r\n    status: '',\r\n    currentPage: 1,\r\n    limit: 20\r\n  });\r\n\r\n  useEffect(() => {\r\n    setLanguage(languageState.language);\r\n  }, [languageState]);\r\n\r\n  useEffect(() => {\r\n    getList();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    filterData();\r\n  }, [filters]);\r\n\r\n  const getList = () => {\r\n    dispatch(fetchLanguages({ params: filters }));\r\n  };\r\n\r\n  const filterData = async () => {\r\n    dispatch(fetchLanguages({ params: filters }));\r\n  };\r\n\r\n  const handleSortClick = (event: React.MouseEvent<HTMLElement>, index: number) => {\r\n    setFilters({ ...filters, status: index });\r\n    setAnchorElSort(null);\r\n  };\r\n\r\n  const handleTableChange = (e: any, pageTable: number) => {\r\n    setFilters({ ...filters, currentPage: pageTable! });\r\n  };\r\n\r\n  const handleSearch = async (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement> | undefined) => {\r\n    const newString = event?.target.value;\r\n    setFilters({ ...filters, search: newString! });\r\n  };\r\n\r\n  const handleSort = (event: any) => {\r\n    setAnchorElSort(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseSort = () => {\r\n    setAnchorElSort(null);\r\n  };\r\n\r\n  const addInProgress = () => {\r\n    setVisibleAdd(!visibleAdd);\r\n  };\r\n\r\n  const handleVisibleModal = () => {\r\n    setVisibleAdd((prevState) => !prevState);\r\n  };\r\n\r\n  const renderSearchForm = () => (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12} sm={6}>\r\n        <Grid container alignItems=\"center\" justifyContent=\"space-between\" spacing={matchDownMD ? 0.5 : 2}>\r\n          <Grid item>\r\n            <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"center\" spacing={matchDownSM ? 0.5 : spacingMD}>\r\n              <TextField\r\n                sx={{ width: { xs: 140, md: 'auto' } }}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <SearchIcon fontSize=\"small\" />\r\n                    </InputAdornment>\r\n                  )\r\n                }}\r\n                value={filters.search}\r\n                placeholder=\"Search....\"\r\n                size=\"small\"\r\n                onChange={handleSearch}\r\n              />\r\n\r\n              <Typography sx={{ display: { xs: 'none', sm: 'flex' }, fontSize: '1rem', color: 'grey.500', fontWeight: 400 }}>|</Typography>\r\n\r\n              <StatusFilters\r\n                filters={filters}\r\n                anchorElSort={anchorElSort}\r\n                handleSort={handleSort}\r\n                handleCloseSort={handleCloseSort}\r\n                handleSortClick={handleSortClick}\r\n              />\r\n            </Stack>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={12} sm={6} sx={{ textAlign: 'right' }}>\r\n        <Tooltip title=\"Add\">\r\n          <Fab color=\"primary\" size=\"small\" onClick={addInProgress} sx={{ boxShadow: 'none', ml: 1, width: 32, height: 32, minHeight: 32 }}>\r\n            <AddIcon fontSize=\"small\" />\r\n          </Fab>\r\n        </Tooltip>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <MainCard title={renderSearchForm()} content={false}>\r\n        <TableContainer>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell sx={{ pl: 3 }}>#</TableCell>\r\n                <TableCell>Name</TableCell>\r\n                <TableCell>Description</TableCell>\r\n                <TableCell>Created</TableCell>\r\n                <TableCell>Status</TableCell>\r\n                <TableCell align=\"center\" sx={{ pr: 3 }}>\r\n                  Actions\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody sx={{ '& th,& td': { whiteSpace: 'nowrap' } }}>\r\n              {language?.map((row, index: number) => (\r\n                <Language key={row?.id} language={row} index={index} getList={() => getList()} />\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <Grid item xs={12} sx={{ p: 3 }}>\r\n          <Grid container justifyContent=\"space-between\" spacing={gridSpacing}>\r\n            <Grid item>\r\n              <Pagination count={languageState.pageCount} page={languageState.currentPage} color=\"primary\" onChange={handleTableChange} />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </MainCard>\r\n      <AddLanguage visible={visibleAdd} dataEdit={{}} handleVisibleModal={handleVisibleModal} getList={() => getList()} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n"],"sourceRoot":""}