{"version":3,"sources":["ui-component/extended/AnimateButton.tsx","views/pages/administrator/SortStatus.ts","views/pages/customer/CustomerList.tsx","views/pages/customer/AddCustomer.tsx","views/pages/customer/EditCustomer.tsx","views/pages/customer/InfoCustomer.tsx","views/pages/customer/index.tsx"],"names":["AnimateButton","React","forwardRef","ref","offset1","offset2","children","type","direction","offset","scale","useCycle","x","cycleX","y","cycleY","div","animate","rotate","transition","repeat","Infinity","repeatType","duration","repeatDelay","undefined","onHoverEnd","onHoverStart","hover","tap","whileHover","whileTap","defaultProps","SortStatus","value","label","CustomerList","handleEdit","handleDelete","handleInfor","onSelected","theme","useTheme","dispatch","useDispatch","useState","data","setData","users","useSelector","state","customer","useEffect","getCustomerList","TableContainer","Table","TableHead","TableRow","TableCell","sx","pl","align","pr","TableBody","map","row","index","onSelect","id","name","username","email","phone","dob","gender","moment","created_at","format","status","Chip","size","background","palette","mode","dark","main","warning","light","color","success","orange","IconButton","onClick","fontSize","Transition","props","Slide","validationSchema","Yup","required","AddAdministrator","open","handleCloseDialog","formik","useFormik","initialValues","password","password_confirmation","onSubmit","values","Dialog","TransitionComponent","keepMounted","onClose","m","borderRadius","width","maxWidth","maxHeight","DialogTitle","handleSubmit","DialogContent","Grid","container","spacing","gridSpacing","mt","item","xs","TextField","fullWidth","onChange","handleChange","error","touched","Boolean","errors","helperText","DialogActions","Button","variant","InfoCustomer","Customer","matchDownSM","useMediaQuery","breakpoints","down","matchDownMD","spacingMD","setOpen","openEdit","setOpenEdit","openInfo","setOpenInfo","search","filter","setFilter","handleSearch","event","a","newString","target","anchorEl","setAnchorEl","openSort","handleClose","filterData","setTimeout","sortLabel","items","MainCard","title","sm","alignItems","justifyContent","Stack","md","InputProps","startAdornment","InputAdornment","position","placeholder","Typography","display","fontWeight","currentTarget","endIcon","length","Menu","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","p","selected","handleMenuItemClick","textAlign","Tooltip","Fab","boxShadow","ml","height","minHeight","content","AddCustomer","EditCustomer","console","log","Pagination","count","grey"],"mappings":"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","file":"static/js/11.df79a33b.chunk.js","sourcesContent":["// THIRD-PARTY\nimport React, { Ref } from 'react';\nimport { motion, useCycle } from 'framer-motion';\n\ninterface ScaleProps {\n  hover: number | string | undefined;\n  tap: number | string | undefined;\n}\n\ninterface AnimateButtonProps {\n  children?: React.ReactNode;\n  type?: 'slide' | 'scale' | 'rotate';\n  direction?: 'up' | 'down' | 'left' | 'right';\n  offset?: number;\n  scale?: ScaleProps;\n}\n\nconst AnimateButton = React.forwardRef(({ children, type, direction, offset, scale }: AnimateButtonProps, ref: Ref<HTMLDivElement>) => {\n  let offset1;\n  let offset2;\n  switch (direction) {\n    case 'up':\n    case 'left':\n      offset1 = offset;\n      offset2 = 0;\n      break;\n    case 'right':\n    case 'down':\n    default:\n      offset1 = 0;\n      offset2 = offset;\n      break;\n  }\n\n  const [x, cycleX] = useCycle(offset1, offset2);\n  const [y, cycleY] = useCycle(offset1, offset2);\n\n  switch (type) {\n    case 'rotate':\n      return (\n        <motion.div\n          ref={ref}\n          animate={{ rotate: 360 }}\n          transition={{\n            repeat: Infinity,\n            repeatType: 'loop',\n            duration: 2,\n            repeatDelay: 0\n          }}\n        >\n          {children}\n        </motion.div>\n      );\n    case 'slide':\n      if (direction === 'up' || direction === 'down') {\n        return (\n          <motion.div ref={ref} animate={{ y: y !== undefined ? y : '' }} onHoverEnd={() => cycleY()} onHoverStart={() => cycleY()}>\n            {children}\n          </motion.div>\n        );\n      }\n      return (\n        <motion.div ref={ref} animate={{ x: x !== undefined ? x : '' }} onHoverEnd={() => cycleX()} onHoverStart={() => cycleX()}>\n          {children}\n        </motion.div>\n      );\n\n    case 'scale':\n    default:\n      if (typeof scale === 'number') {\n        scale = {\n          hover: scale,\n          tap: scale\n        };\n      }\n      return (\n        <motion.div ref={ref} whileHover={{ scale: scale?.hover }} whileTap={{ scale: scale?.tap }}>\n          {children}\n        </motion.div>\n      );\n  }\n});\n\nAnimateButton.defaultProps = {\n  type: 'scale',\n  offset: 10,\n  direction: 'right',\n  scale: {\n    hover: 1,\n    tap: 0.9\n  }\n};\n\nexport default AnimateButton;\n","// PROJECT IMPORTS\nimport { SortStatusProps } from 'types/user';\n\nconst SortStatus: SortStatusProps[] = [\n  {\n    value: '',\n    label: 'All'\n  },\n  {\n    value: '1',\n    label: 'Inactive'\n  },\n  {\n    value: '2',\n    label: 'Active'\n  },\n  {\n    value: '3',\n    label: 'Blocked'\n  }\n];\n\nexport default SortStatus;\n","// THIRD-PARTY\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone';\nimport EditTwoToneIcon from '@mui/icons-material/EditTwoTone';\nimport moment from 'moment';\nimport React from 'react';\nimport VisibilityTwoToneIcon from '@mui/icons-material/VisibilityTwoTone';\nimport { Chip, IconButton, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\n// PROJECT IMPORTS\nimport { getCustomerList } from 'store/slices/customer';\nimport { useDispatch, useSelector } from 'store';\nimport { UserProfile } from 'types/user-profile';\n\ninterface IProps {\n  handleEdit?: React.MouseEventHandler<HTMLButtonElement>;\n  handleInfor?: React.MouseEventHandler<HTMLButtonElement>;\n  handleDelete?: React.MouseEventHandler<HTMLButtonElement>;\n  onSelected?: any;\n}\n\nconst CustomerList = ({ handleEdit, handleDelete, handleInfor, onSelected }: IProps) => {\n  const theme = useTheme();\n  const dispatch = useDispatch();\n\n  const [data, setData] = React.useState<UserProfile[]>([]);\n  const { users } = useSelector((state) => state.customer);\n\n  React.useEffect(() => {\n    setData(users);\n  }, [users]);\n\n  React.useEffect(() => {\n    dispatch(getCustomerList());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return (\n    <TableContainer>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell sx={{ pl: 3 }}>#</TableCell>\n            <TableCell>Name</TableCell>\n            <TableCell>Username</TableCell>\n            <TableCell>Email</TableCell>\n            <TableCell>Phone</TableCell>\n            <TableCell>Date of Birth</TableCell>\n            <TableCell>Gender</TableCell>\n            <TableCell>Created</TableCell>\n            <TableCell>Status</TableCell>\n            <TableCell align=\"center\" sx={{ pr: 3 }}>\n              Actions\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data &&\n            data.map((row, index) => (\n              <TableRow hover key={index}>\n                <TableCell onSelect={onSelected} sx={{ pl: 3 }}>\n                  {row.id}\n                </TableCell>\n                <TableCell>{row.name}</TableCell>\n                <TableCell>{row.username}</TableCell>\n                <TableCell>{row.email}</TableCell>\n                <TableCell>{row.phone}</TableCell>\n                <TableCell>{row.dob ?? 'N/A'}</TableCell>\n                <TableCell>{row.gender ?? 'N/A'}</TableCell>\n                <TableCell>{moment(row.created_at).format('DD/MM/YYYY HH:mm')}</TableCell>\n                <TableCell>\n                  {row.status === 1 && (\n                    <Chip\n                      label=\"Inactive\"\n                      size=\"small\"\n                      sx={{\n                        background: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.warning.light,\n                        color: theme.palette.warning.dark\n                      }}\n                    />\n                  )}\n                  {row.status === 2 && (\n                    <Chip\n                      label=\"Active\"\n                      size=\"small\"\n                      sx={{\n                        background: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.success.light + 60,\n                        color: theme.palette.success.dark\n                      }}\n                    />\n                  )}\n                  {row.status === 3 && (\n                    <Chip\n                      label=\"Blocked\"\n                      size=\"small\"\n                      sx={{\n                        background: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.orange.light + 80,\n                        color: theme.palette.orange.dark\n                      }}\n                    />\n                  )}\n                </TableCell>\n                <TableCell align=\"center\" sx={{ pr: 3 }}>\n                  <IconButton color=\"primary\" size=\"large\" onClick={handleInfor}>\n                    <VisibilityTwoToneIcon sx={{ fontSize: '1.3rem' }} />\n                  </IconButton>\n                  <IconButton color=\"secondary\" size=\"large\" onClick={handleEdit}>\n                    <EditTwoToneIcon sx={{ fontSize: '1.3rem' }} />\n                  </IconButton>\n                  <IconButton color=\"error\" size=\"large\" onClick={handleDelete}>\n                    <DeleteTwoToneIcon sx={{ fontSize: '1.3rem' }} />\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\nexport default CustomerList;\n","// THIRD-PARTY\nimport { forwardRef, SyntheticEvent } from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Grid, Slide, SlideProps, TextField } from '@mui/material';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\n\n// PROJECT IMPORTS\nimport AnimateButton from 'ui-component/extended/AnimateButton';\nimport { gridSpacing } from 'store/constant';\n\nconst Transition = forwardRef((props: SlideProps, ref) => <Slide direction=\"left\" ref={ref} {...props} />);\n\ninterface AddCustomerProps {\n  open: boolean;\n  handleCloseDialog: (e: SyntheticEvent) => void;\n}\n\nconst validationSchema = Yup.object({\n  name: Yup.string().required('Name is required')\n});\n\nconst AddAdministrator = ({ open, handleCloseDialog }: AddCustomerProps) => {\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      username: '',\n      email: '',\n      password: '',\n      password_confirmation: '',\n      phone: '',\n      type: 2\n    },\n    validationSchema,\n    onSubmit: (values) => {}\n  });\n  return (\n    <Dialog\n      open={open}\n      TransitionComponent={Transition}\n      keepMounted\n      onClose={handleCloseDialog}\n      sx={{\n        '&>div:nth-of-type(3)': {\n          '&>div': {\n            m: 0,\n            borderRadius: '0px',\n            width: 850,\n            maxWidth: 850,\n            maxHeight: '100%'\n          }\n        }\n      }}\n    >\n      {open && (\n        <>\n          <DialogTitle>Add Customer</DialogTitle>\n          <form onSubmit={formik.handleSubmit}>\n            <DialogContent>\n              <Grid container spacing={gridSpacing} sx={{ mt: 0.25 }}>\n                <Grid item xs={12}>\n                  <TextField\n                    fullWidth\n                    id=\"name\"\n                    name=\"name\"\n                    label=\"Name\"\n                    value={formik.values.name}\n                    onChange={formik.handleChange}\n                    error={formik.touched.name && Boolean(formik.errors.name)}\n                    helperText={formik.touched.name && formik.errors.name}\n                  />\n                </Grid>\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <AnimateButton>\n                <Button variant=\"contained\" type=\"submit\">\n                  Create\n                </Button>\n              </AnimateButton>\n              <Button variant=\"text\" color=\"error\" onClick={handleCloseDialog}>\n                Close\n              </Button>\n            </DialogActions>\n          </form>\n        </>\n      )}\n    </Dialog>\n  );\n};\n\nexport default AddAdministrator;\n","// THIRD-PARTY\nimport { forwardRef, SyntheticEvent } from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Grid, Slide, SlideProps, TextField } from '@mui/material';\n\n// PROJECT IMPORTS\nimport AnimateButton from 'ui-component/extended/AnimateButton';\nimport { gridSpacing } from 'store/constant';\n\nconst Transition = forwardRef((props: SlideProps, ref) => <Slide direction=\"left\" ref={ref} {...props} />);\n\ninterface AddCustomerProps {\n  open: boolean;\n  handleCloseDialog: (e: SyntheticEvent) => void;\n}\n\nconst InfoCustomer = ({ open, handleCloseDialog }: AddCustomerProps) => {\n  const theme = useTheme();\n\n  return (\n    <Dialog\n      open={open}\n      TransitionComponent={Transition}\n      keepMounted\n      onClose={handleCloseDialog}\n      sx={{\n        '&>div:nth-of-type(3)': {\n          '&>div': {\n            m: 0,\n            borderRadius: '0px',\n            width: 850,\n            maxWidth: 850,\n            maxHeight: '100%'\n          }\n        }\n      }}\n    >\n      {open && (\n        <>\n          <DialogTitle>Edit Customer</DialogTitle>\n          <DialogContent>\n            <Grid container spacing={gridSpacing} sx={{ mt: 0.25 }}>\n              <Grid item xs={12}>\n                <TextField id=\"outlined-basic1\" fullWidth label=\"Enter Name*\" />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField id=\"outlined-basic1\" fullWidth label=\"Enter Username*\" />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField id=\"outlined-basic1\" fullWidth label=\"Enter Email*\" />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField id=\"outlined-basic1\" fullWidth label=\"Enter password*\" />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField id=\"outlined-basic1\" fullWidth label=\"Enter password_confirmation*\" />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField id=\"outlined-basic1\" fullWidth label=\"Enter phone*\" />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField id=\"outlined-basic1\" fullWidth label=\"Enter type*\" />\n              </Grid>\n            </Grid>\n          </DialogContent>\n          <DialogActions>\n            <AnimateButton>\n              <Button variant=\"contained\">Create</Button>\n            </AnimateButton>\n            <Button variant=\"text\" color=\"error\" onClick={handleCloseDialog}>\n              Close\n            </Button>\n          </DialogActions>\n        </>\n      )}\n    </Dialog>\n  );\n};\n\nexport default InfoCustomer;\n","// THIRD-PARTY\nimport { forwardRef, SyntheticEvent } from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Grid, Slide, SlideProps, TextField } from '@mui/material';\n\n// PROJECT IMPORTS\nimport AnimateButton from 'ui-component/extended/AnimateButton';\nimport { gridSpacing } from 'store/constant';\n\nconst Transition = forwardRef((props: SlideProps, ref) => <Slide direction=\"left\" ref={ref} {...props} />);\n\ninterface AddAdministratorProps {\n  open: boolean;\n  handleCloseDialog: (e: SyntheticEvent) => void;\n}\n\nconst InfoCustomer = ({ open, handleCloseDialog }: AddAdministratorProps) => {\n  const theme = useTheme();\n\n  return (\n    <Dialog\n      open={open}\n      TransitionComponent={Transition}\n      keepMounted\n      onClose={handleCloseDialog}\n      sx={{\n        '&>div:nth-of-type(3)': {\n          '&>div': {\n            m: 0,\n            borderRadius: '0px',\n            width: 850,\n            maxWidth: 850,\n            maxHeight: '100%'\n          }\n        }\n      }}\n    >\n      {open && (\n        <>\n          <DialogTitle>Info Customer</DialogTitle>\n          <DialogContent>\n            <Grid container spacing={gridSpacing} sx={{ mt: 0.25 }}>\n              <Grid item xs={12}>\n                <TextField id=\"outlined-basic1\" fullWidth label=\"Enter Name*\" />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField id=\"outlined-basic1\" fullWidth label=\"Enter Username*\" />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField id=\"outlined-basic1\" fullWidth label=\"Enter Email*\" />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField id=\"outlined-basic1\" fullWidth label=\"Enter password*\" />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField id=\"outlined-basic1\" fullWidth label=\"Enter password_confirmation*\" />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField id=\"outlined-basic1\" fullWidth label=\"Enter phone*\" />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField id=\"outlined-basic1\" fullWidth label=\"Enter type*\" />\n              </Grid>\n            </Grid>\n          </DialogContent>\n          <DialogActions>\n            <AnimateButton>\n              <Button variant=\"contained\">Create</Button>\n            </AnimateButton>\n            <Button variant=\"text\" color=\"error\" onClick={handleCloseDialog}>\n              Close\n            </Button>\n          </DialogActions>\n        </>\n      )}\n    </Dialog>\n  );\n};\n\nexport default InfoCustomer;\n","// THIRD-PARTY\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport React, { useEffect, useState } from 'react';\nimport SearchIcon from '@mui/icons-material/Search';\nimport AddIcon from '@mui/icons-material/AddTwoTone';\nimport {\n  Button,\n  Fab,\n  Grid,\n  InputAdornment,\n  Menu,\n  MenuItem,\n  Pagination,\n  Stack,\n  TextField,\n  Tooltip,\n  Typography,\n  useMediaQuery\n} from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport ExpandMoreRoundedIcon from '@mui/icons-material/ExpandMoreRounded';\n\n// PROJECT IMPORTS\nimport CustomerList from './CustomerList';\nimport AddCustomer from 'views/pages/customer/AddCustomer';\nimport MainCard from 'ui-component/cards/MainCard';\nimport SortStatus from 'views/pages/administrator/SortStatus';\nimport { dispatch } from 'store';\nimport { getCustomerList } from 'store/slices/customer';\nimport { UserFilter } from 'types/user';\nimport { gridSpacing } from '../../../store/constant';\nimport EditCustomer from './EditCustomer';\nimport InfoCustomer from './InfoCustomer';\n\nconst Customer = () => {\n  const theme = useTheme();\n\n  const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\n  const matchDownMD = useMediaQuery(theme.breakpoints.down('lg'));\n\n  const spacingMD = matchDownMD ? 1 : 1.5;\n\n  const [open, setOpen] = React.useState(false);\n  const [openEdit, setOpenEdit] = React.useState(false);\n  const [openInfo, setOpenInfo] = React.useState(false);\n\n  const handleClickOpenDialog = () => {\n    setOpen(true);\n  };\n  const handleCloseDialog = () => {\n    setOpen(false);\n  };\n  const handleClickOpenEdit = () => {\n    setOpenEdit(true);\n  };\n  const handleCloseEdit = () => {\n    setOpenEdit(false);\n  };\n  const handleClickOpenInfo = () => {\n    setOpenInfo(true);\n  };\n  const handleCloseInfo = () => {\n    setOpenInfo(false);\n  };\n\n  const initialState: UserFilter = {\n    search: '',\n    status: ''\n  };\n  const [filter, setFilter] = useState(initialState);\n\n  const handleSearch = async (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement> | undefined) => {\n    const newString = event?.target.value;\n    setFilter({ ...filter, search: newString! });\n  };\n\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const openSort = Boolean(anchorEl);\n  const handleClickListItem = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const filterData = async () => {\n    setTimeout(async () => {\n      await dispatch(getCustomerList(filter));\n    }, 400);\n  };\n\n  useEffect(() => {\n    filterData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [filter]);\n\n  const handleMenuItemClick = (event: React.MouseEvent<HTMLElement>, index: string | '') => {\n    setFilter({ ...filter, status: index });\n    setAnchorEl(null);\n  };\n  const sortLabel = SortStatus.filter((items) => items.value === filter.status);\n\n  const handleClickPagination = (event: React.MouseEvent) => {};\n  const handleDeleteCustomte = (id: number) => {\n    console.log(id);\n  };\n  return (\n    <MainCard\n      title={\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={6}>\n            <Grid container alignItems=\"center\" justifyContent=\"space-between\" spacing={matchDownMD ? 0.5 : 2}>\n              <Grid item>\n                <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"center\" spacing={matchDownSM ? 0.5 : spacingMD}>\n                  <TextField\n                    sx={{ width: { xs: 140, md: 'auto' } }}\n                    InputProps={{\n                      startAdornment: (\n                        <InputAdornment position=\"start\">\n                          <SearchIcon fontSize=\"small\" />\n                        </InputAdornment>\n                      )\n                    }}\n                    value={filter.search}\n                    placeholder=\"Search....\"\n                    size=\"small\"\n                    onChange={handleSearch}\n                  />\n\n                  <Typography sx={{ display: { xs: 'none', sm: 'flex' }, fontSize: '1rem', color: 'grey.500', fontWeight: 400 }}>\n                    |\n                  </Typography>\n                  <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"center\" sx={{ display: { xs: 'none', sm: 'flex' } }}>\n                    <Typography variant=\"h5\">Sort by: </Typography>\n                    <Button\n                      id=\"demo-positioned-button\"\n                      aria-controls=\"demo-positioned-menu\"\n                      aria-haspopup=\"true\"\n                      aria-expanded={openSort ? 'true' : undefined}\n                      onClick={handleClickListItem}\n                      sx={{ color: 'grey.500', fontWeight: 400 }}\n                      endIcon={<KeyboardArrowDownIcon />}\n                    >\n                      {sortLabel.length > 0 && sortLabel[0].label}\n                    </Button>\n                    <Menu\n                      id=\"demo-positioned-menu\"\n                      aria-labelledby=\"demo-positioned-button\"\n                      anchorEl={anchorEl}\n                      open={openSort}\n                      onClose={handleClose}\n                      anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                      }}\n                      transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                      }}\n                    >\n                      {SortStatus.map((status, index) => (\n                        <MenuItem\n                          sx={{ p: 1.5 }}\n                          key={index}\n                          selected={status.value === filter.status}\n                          onClick={(event) => handleMenuItemClick(event, status.value || '')}\n                        >\n                          {status.label}\n                        </MenuItem>\n                      ))}\n                    </Menu>\n                  </Stack>\n                </Stack>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={12} sm={6} sx={{ textAlign: 'right' }}>\n            <Tooltip title=\"Add\">\n              <Fab\n                color=\"primary\"\n                size=\"small\"\n                onClick={handleClickOpenDialog}\n                sx={{ boxShadow: 'none', ml: 1, width: 32, height: 32, minHeight: 32 }}\n              >\n                <AddIcon fontSize=\"small\" />\n              </Fab>\n            </Tooltip>\n          </Grid>\n        </Grid>\n      }\n      content={false}\n    >\n      <AddCustomer open={open} handleCloseDialog={handleCloseDialog} />\n      <InfoCustomer open={openInfo} handleCloseDialog={handleCloseInfo} />\n      <EditCustomer open={openEdit} handleCloseDialog={handleCloseEdit} />\n      <CustomerList handleEdit={handleClickOpenEdit} handleInfor={handleClickOpenInfo} handleDelete={() => handleDeleteCustomte(1)} />\n      <Grid item xs={12} sx={{ p: 3 }}>\n        <Grid container justifyContent=\"space-between\" spacing={gridSpacing}>\n          <Grid item>\n            <Pagination count={10} color=\"primary\" />\n          </Grid>\n          <Grid item>\n            <Button\n              size=\"large\"\n              sx={{ color: theme.palette.grey[900] }}\n              color=\"secondary\"\n              endIcon={<ExpandMoreRoundedIcon />}\n              onClick={handleClickPagination}\n            >\n              10 Rows\n            </Button>\n            <Menu\n              id=\"menu-user-list-style1\"\n              anchorEl={anchorEl}\n              keepMounted\n              open={Boolean(anchorEl)}\n              onClose={handleClose}\n              variant=\"selectedMenu\"\n              anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right'\n              }}\n              transformOrigin={{\n                vertical: 'bottom',\n                horizontal: 'right'\n              }}\n            >\n              <MenuItem onClick={handleClose}> 10 Rows</MenuItem>\n              <MenuItem onClick={handleClose}> 20 Rows</MenuItem>\n              <MenuItem onClick={handleClose}> 30 Rows </MenuItem>\n            </Menu>\n          </Grid>\n        </Grid>\n      </Grid>\n    </MainCard>\n  );\n};\n\nexport default Customer;\n"],"sourceRoot":""}