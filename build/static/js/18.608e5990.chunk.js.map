{"version":3,"sources":["views/pages/administrator/AdministratorList.tsx","views/pages/administrator/SortStatus.ts","views/pages/administrator/index.tsx"],"names":["AdministratorList","theme","useTheme","dispatch","useDispatch","React","useState","data","setData","users","useSelector","state","user","useEffect","getAdministratorList","TableContainer","Table","TableHead","TableRow","TableCell","sx","pl","align","pr","TableBody","map","row","index","hover","id","name","username","email","phone","dob","gender","moment","created_at","format","status","Chip","label","size","background","palette","mode","dark","main","warning","light","color","success","orange","IconButton","fontSize","SortStatus","value","Administrator","matchDownSM","useMediaQuery","breakpoints","down","matchDownMD","spacingMD","setOpen","search","filter","setFilter","handleSearch","event","a","newString","target","anchorEl","setAnchorEl","openSort","Boolean","handleClose","filterData","setTimeout","sortLabel","items","MainCard","title","Grid","container","spacing","item","xs","sm","alignItems","justifyContent","Stack","direction","TextField","width","md","InputProps","startAdornment","InputAdornment","position","placeholder","onChange","Typography","display","fontWeight","variant","Button","undefined","onClick","currentTarget","endIcon","length","Menu","open","onClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","p","selected","handleMenuItemClick","textAlign","Tooltip","Fab","boxShadow","ml","height","minHeight","content","gridSpacing","Pagination","count","grey","keepMounted"],"mappings":"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","file":"static/js/18.608e5990.chunk.js","sourcesContent":["// THIRD-PARTY\r\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone';\r\nimport EditTwoToneIcon from '@mui/icons-material/EditTwoTone';\r\nimport moment from 'moment';\r\nimport React from 'react';\r\nimport VisibilityTwoToneIcon from '@mui/icons-material/VisibilityTwoTone';\r\nimport { Chip, IconButton, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\n// PROJECT IMPORTS\r\nimport { getAdministratorList } from 'store/slices/user';\r\nimport { useDispatch, useSelector } from 'store';\r\nimport { UserProfile } from 'types/user-profile';\r\n\r\nconst AdministratorList = () => {\r\n  const theme = useTheme();\r\n  const dispatch = useDispatch();\r\n\r\n  const [data, setData] = React.useState<UserProfile[]>([]);\r\n  const { users } = useSelector((state) => state.user);\r\n\r\n  React.useEffect(() => {\r\n    setData(users);\r\n  }, [users]);\r\n\r\n  React.useEffect(() => {\r\n    dispatch(getAdministratorList());\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <TableContainer>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell sx={{ pl: 3 }}>#</TableCell>\r\n            <TableCell>Name</TableCell>\r\n            <TableCell>Username</TableCell>\r\n            <TableCell>Email</TableCell>\r\n            <TableCell>Phone</TableCell>\r\n            <TableCell>Date of Birth</TableCell>\r\n            <TableCell>Gender</TableCell>\r\n            <TableCell>Created</TableCell>\r\n            <TableCell>Status</TableCell>\r\n            <TableCell align=\"center\" sx={{ pr: 3 }}>\r\n              Actions\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data &&\r\n            data.map((row, index) => (\r\n              <TableRow hover key={index}>\r\n                <TableCell sx={{ pl: 3 }}>{row.id}</TableCell>\r\n                <TableCell>{row.name}</TableCell>\r\n                <TableCell>{row.username}</TableCell>\r\n                <TableCell>{row.email}</TableCell>\r\n                <TableCell>{row.phone}</TableCell>\r\n                <TableCell>{row.dob ?? 'N/A'}</TableCell>\r\n                <TableCell>{row.gender ?? 'N/A'}</TableCell>\r\n                <TableCell>{moment(row.created_at).format('DD/MM/YYYY HH:mm')}</TableCell>\r\n                <TableCell>\r\n                  {row.status === 1 && (\r\n                    <Chip\r\n                      label=\"Inactive\"\r\n                      size=\"small\"\r\n                      sx={{\r\n                        background: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.warning.light,\r\n                        color: theme.palette.warning.dark\r\n                      }}\r\n                    />\r\n                  )}\r\n                  {row.status === 2 && (\r\n                    <Chip\r\n                      label=\"Active\"\r\n                      size=\"small\"\r\n                      sx={{\r\n                        background: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.success.light + 60,\r\n                        color: theme.palette.success.dark\r\n                      }}\r\n                    />\r\n                  )}\r\n                  {row.status === 3 && (\r\n                    <Chip\r\n                      label=\"Blocked\"\r\n                      size=\"small\"\r\n                      sx={{\r\n                        background: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.orange.light + 80,\r\n                        color: theme.palette.orange.dark\r\n                      }}\r\n                    />\r\n                  )}\r\n                </TableCell>\r\n                <TableCell align=\"center\" sx={{ pr: 3 }}>\r\n                  <IconButton color=\"primary\" size=\"large\">\r\n                    <VisibilityTwoToneIcon sx={{ fontSize: '1.3rem' }} />\r\n                  </IconButton>\r\n                  <IconButton color=\"secondary\" size=\"large\">\r\n                    <EditTwoToneIcon sx={{ fontSize: '1.3rem' }} />\r\n                  </IconButton>\r\n                  <IconButton color=\"error\" size=\"large\">\r\n                    <DeleteTwoToneIcon sx={{ fontSize: '1.3rem' }} />\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default AdministratorList;\r\n","// PROJECT IMPORTS\r\nimport { SortStatusProps } from 'types/user';\r\n\r\nconst SortStatus: SortStatusProps[] = [\r\n  {\r\n    value: '',\r\n    label: 'All'\r\n  },\r\n  {\r\n    value: '1',\r\n    label: 'Inactive'\r\n  },\r\n  {\r\n    value: '2',\r\n    label: 'Active'\r\n  },\r\n  {\r\n    value: '3',\r\n    label: 'Blocked'\r\n  }\r\n];\r\n\r\nexport default SortStatus;\r\n","// THIRD-PARTY\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport React, { useEffect, useState } from 'react';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport AddIcon from '@mui/icons-material/AddTwoTone';\r\nimport {\r\n  Button,\r\n  Fab,\r\n  Grid,\r\n  InputAdornment,\r\n  Menu,\r\n  MenuItem,\r\n  Pagination,\r\n  Stack,\r\n  TextField,\r\n  Tooltip,\r\n  Typography,\r\n  useMediaQuery\r\n} from '@mui/material';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport ExpandMoreRoundedIcon from '@mui/icons-material/ExpandMoreRounded';\r\n\r\n// PROJECT IMPORTS\r\nimport AdministratorList from 'views/pages/administrator/AdministratorList';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SortStatus from 'views/pages/administrator/SortStatus';\r\nimport { dispatch } from 'store';\r\nimport { getAdministratorList } from 'store/slices/user';\r\nimport { UserFilter } from 'types/user';\r\nimport { gridSpacing } from '../../../store/constant';\r\n\r\nconst Administrator = () => {\r\n  const theme = useTheme();\r\n\r\n  const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\r\n  const matchDownMD = useMediaQuery(theme.breakpoints.down('lg'));\r\n\r\n  const spacingMD = matchDownMD ? 1 : 1.5;\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClickOpenDialog = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleCloseDialog = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const initialState: UserFilter = {\r\n    search: '',\r\n    status: ''\r\n  };\r\n  const [filter, setFilter] = useState(initialState);\r\n\r\n  const handleSearch = async (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement> | undefined) => {\r\n    const newString = event?.target.value;\r\n    setFilter({ ...filter, search: newString! });\r\n  };\r\n\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n  const openSort = Boolean(anchorEl);\r\n  const handleClickListItem = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const filterData = async () => {\r\n    setTimeout(async () => {\r\n      await dispatch(getAdministratorList(filter));\r\n    }, 400);\r\n  };\r\n\r\n  useEffect(() => {\r\n    filterData();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [filter]);\r\n\r\n  const handleMenuItemClick = (event: React.MouseEvent<HTMLElement>, index: string | '') => {\r\n    setFilter({ ...filter, status: index });\r\n    setAnchorEl(null);\r\n  };\r\n  const sortLabel = SortStatus.filter((items) => items.value === filter.status);\r\n\r\n  const handleClickPagination = (event: React.MouseEvent) => {};\r\n\r\n  return (\r\n    <MainCard\r\n      title={\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} sm={6}>\r\n            <Grid container alignItems=\"center\" justifyContent=\"space-between\" spacing={matchDownMD ? 0.5 : 2}>\r\n              <Grid item>\r\n                <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"center\" spacing={matchDownSM ? 0.5 : spacingMD}>\r\n                  <TextField\r\n                    sx={{ width: { xs: 140, md: 'auto' } }}\r\n                    InputProps={{\r\n                      startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                          <SearchIcon fontSize=\"small\" />\r\n                        </InputAdornment>\r\n                      )\r\n                    }}\r\n                    value={filter.search}\r\n                    placeholder=\"Search....\"\r\n                    size=\"small\"\r\n                    onChange={handleSearch}\r\n                  />\r\n\r\n                  <Typography sx={{ display: { xs: 'none', sm: 'flex' }, fontSize: '1rem', color: 'grey.500', fontWeight: 400 }}>\r\n                    |\r\n                  </Typography>\r\n                  <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"center\" sx={{ display: { xs: 'none', sm: 'flex' } }}>\r\n                    <Typography variant=\"h5\">Sort by: </Typography>\r\n                    <Button\r\n                      id=\"demo-positioned-button\"\r\n                      aria-controls=\"demo-positioned-menu\"\r\n                      aria-haspopup=\"true\"\r\n                      aria-expanded={openSort ? 'true' : undefined}\r\n                      onClick={handleClickListItem}\r\n                      sx={{ color: 'grey.500', fontWeight: 400 }}\r\n                      endIcon={<KeyboardArrowDownIcon />}\r\n                    >\r\n                      {sortLabel.length > 0 && sortLabel[0].label}\r\n                    </Button>\r\n                    <Menu\r\n                      id=\"demo-positioned-menu\"\r\n                      aria-labelledby=\"demo-positioned-button\"\r\n                      anchorEl={anchorEl}\r\n                      open={openSort}\r\n                      onClose={handleClose}\r\n                      anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                      }}\r\n                      transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right'\r\n                      }}\r\n                    >\r\n                      {SortStatus.map((status, index) => (\r\n                        <MenuItem\r\n                          sx={{ p: 1.5 }}\r\n                          key={index}\r\n                          selected={status.value === filter.status}\r\n                          onClick={(event) => handleMenuItemClick(event, status.value || '')}\r\n                        >\r\n                          {status.label}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Menu>\r\n                  </Stack>\r\n                </Stack>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} sx={{ textAlign: 'right' }}>\r\n            <Tooltip title=\"Add\">\r\n              <Fab\r\n                color=\"primary\"\r\n                size=\"small\"\r\n                onClick={handleClickOpenDialog}\r\n                sx={{ boxShadow: 'none', ml: 1, width: 32, height: 32, minHeight: 32 }}\r\n              >\r\n                <AddIcon fontSize=\"small\" />\r\n              </Fab>\r\n            </Tooltip>\r\n          </Grid>\r\n        </Grid>\r\n      }\r\n      content={false}\r\n    >\r\n      <AdministratorList />\r\n      <Grid item xs={12} sx={{ p: 3 }}>\r\n        <Grid container justifyContent=\"space-between\" spacing={gridSpacing}>\r\n          <Grid item>\r\n            <Pagination count={10} color=\"primary\" />\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              size=\"large\"\r\n              sx={{ color: theme.palette.grey[900] }}\r\n              color=\"secondary\"\r\n              endIcon={<ExpandMoreRoundedIcon />}\r\n              onClick={handleClickPagination}\r\n            >\r\n              10 Rows\r\n            </Button>\r\n            <Menu\r\n              id=\"menu-user-list-style1\"\r\n              anchorEl={anchorEl}\r\n              keepMounted\r\n              open={Boolean(anchorEl)}\r\n              onClose={handleClose}\r\n              variant=\"selectedMenu\"\r\n              anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right'\r\n              }}\r\n              transformOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'right'\r\n              }}\r\n            >\r\n              <MenuItem onClick={handleClose}> 10 Rows</MenuItem>\r\n              <MenuItem onClick={handleClose}> 20 Rows</MenuItem>\r\n              <MenuItem onClick={handleClose}> 30 Rows </MenuItem>\r\n            </Menu>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </MainCard>\r\n  );\r\n};\r\n\r\nexport default Administrator;\r\n"],"sourceRoot":""}