{"version":3,"sources":["views/pages/ranks/SortStatus.ts","views/pages/ranks/RanksList.tsx","views/pages/ranks/index.tsx"],"names":["SortStatus","value","label","RanksList","dispatch","useDispatch","React","useState","data","setData","ranks","useSelector","state","rank","useEffect","getRanksList","TableContainer","Table","TableHead","TableRow","TableCell","sx","pl","align","pr","TableBody","map","row","index","hover","id","name","IconButton","color","size","fontSize","Ranks","theme","useTheme","matchDownSM","useMediaQuery","breakpoints","down","matchDownMD","spacingMD","setOpen","search","status","filter","setFilter","handleSearch","event","a","newString","target","anchorEl","setAnchorEl","openSort","Boolean","filterData","setTimeout","sortLabel","items","MainCard","title","Grid","container","spacing","item","xs","sm","alignItems","justifyContent","Stack","direction","TextField","width","md","InputProps","startAdornment","InputAdornment","position","placeholder","onChange","Typography","display","fontWeight","variant","Button","undefined","onClick","currentTarget","endIcon","length","Menu","open","onClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","p","selected","handleMenuItemClick","textAlign","Tooltip","Fab","boxShadow","ml","height","minHeight","content"],"mappings":"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","file":"static/js/13.57763be8.chunk.js","sourcesContent":["// PROJECT IMPORTS\nimport { SortStatusProps } from 'types/rank';\n\nconst SortStatus: SortStatusProps[] = [\n  {\n    value: '',\n    label: 'All'\n  },\n  {\n    value: 0,\n    label: 'Inactive'\n  },\n  {\n    value: 1,\n    label: 'Active'\n  }\n];\n\nexport default SortStatus;\n","// THIRD-PARTY\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone';\nimport EditTwoToneIcon from '@mui/icons-material/EditTwoTone';\nimport React from 'react';\nimport VisibilityTwoToneIcon from '@mui/icons-material/VisibilityTwoTone';\nimport { IconButton, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\n\n// PROJECT IMPORTS\nimport { getRanksList } from 'store/slices/rank';\nimport { Rank } from 'types/rank';\nimport { useDispatch, useSelector } from 'store';\n\nconst RanksList = () => {\n  const dispatch = useDispatch();\n\n  const [data, setData] = React.useState<Rank[]>([]);\n  const { ranks } = useSelector((state) => state.rank);\n\n  React.useEffect(() => {\n    setData(ranks);\n  }, [ranks]);\n\n  React.useEffect(() => {\n    dispatch(getRanksList());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <TableContainer>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell sx={{ pl: 3 }}>#</TableCell>\n            <TableCell>Name</TableCell>\n            <TableCell align=\"center\" sx={{ pr: 3 }}>\n              Actions\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data &&\n            data.map((row, index) => (\n              <TableRow hover key={index}>\n                <TableCell sx={{ pl: 3 }}>{row.id}</TableCell>\n                <TableCell>{row.name}</TableCell>\n                <TableCell align=\"center\" sx={{ pr: 3 }}>\n                  <IconButton color=\"primary\" size=\"large\">\n                    <VisibilityTwoToneIcon sx={{ fontSize: '1.3rem' }} />\n                  </IconButton>\n                  <IconButton color=\"secondary\" size=\"large\">\n                    <EditTwoToneIcon sx={{ fontSize: '1.3rem' }} />\n                  </IconButton>\n                  <IconButton color=\"error\" size=\"large\">\n                    <DeleteTwoToneIcon sx={{ fontSize: '1.3rem' }} />\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default RanksList;\n","// THIRD-PARTY\nimport AddIcon from '@mui/icons-material/AddTwoTone';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport MainCard from 'ui-component/cards/MainCard';\nimport React, { useEffect, useState } from 'react';\nimport SearchIcon from '@mui/icons-material/Search';\nimport SortStatus from 'views/pages/ranks/SortStatus';\nimport { Button, Fab, Grid, InputAdornment, Menu, MenuItem, Stack, TextField, Tooltip, Typography, useMediaQuery } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\n// PROJECT IMPORTS\nimport RanksList from 'views/pages/ranks/RanksList';\nimport { dispatch } from 'store';\nimport { getRanksList } from 'store/slices/rank';\nimport { RankFilter } from 'types/rank';\n\nconst Ranks = () => {\n  const theme = useTheme();\n\n  const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\n  const matchDownMD = useMediaQuery(theme.breakpoints.down('lg'));\n\n  const spacingMD = matchDownMD ? 1 : 1.5;\n\n  const [open, setOpen] = React.useState(false);\n  const handleClickOpenDialog = () => {\n    setOpen(true);\n  };\n  const handleCloseDialog = () => {\n    setOpen(false);\n  };\n\n  const initialState: RankFilter = {\n    search: '',\n    status: ''\n  };\n  const [filter, setFilter] = useState(initialState);\n\n  const handleSearch = async (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement> | undefined) => {\n    const newString = event?.target.value;\n    setFilter({ ...filter, search: newString! });\n  };\n\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const openSort = Boolean(anchorEl);\n  const handleClickListItem = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const filterData = async () => {\n    setTimeout(async () => {\n      await dispatch(getRanksList(filter));\n    }, 400);\n  };\n\n  useEffect(() => {\n    filterData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [filter]);\n\n  const handleMenuItemClick = (event: React.MouseEvent<HTMLElement>, index: any) => {\n    setFilter({ ...filter, status: index });\n    setAnchorEl(null);\n  };\n  const sortLabel = SortStatus.filter((items) => items.value === filter.status);\n\n  return (\n    <MainCard\n      title={\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={6}>\n            <Grid container alignItems=\"center\" justifyContent=\"space-between\" spacing={matchDownMD ? 0.5 : 2}>\n              <Grid item>\n                <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"center\" spacing={matchDownSM ? 0.5 : spacingMD}>\n                  <TextField\n                    sx={{ width: { xs: 140, md: 'auto' } }}\n                    InputProps={{\n                      startAdornment: (\n                        <InputAdornment position=\"start\">\n                          <SearchIcon fontSize=\"small\" />\n                        </InputAdornment>\n                      )\n                    }}\n                    value={filter.search}\n                    placeholder=\"Search....\"\n                    size=\"small\"\n                    onChange={handleSearch}\n                  />\n\n                  <Typography sx={{ display: { xs: 'none', sm: 'flex' }, fontSize: '1rem', color: 'grey.500', fontWeight: 400 }}>\n                    |\n                  </Typography>\n                  <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"center\" sx={{ display: { xs: 'none', sm: 'flex' } }}>\n                    <Typography variant=\"h5\">Sort by: </Typography>\n                    <Button\n                      id=\"demo-positioned-button\"\n                      aria-controls=\"demo-positioned-menu\"\n                      aria-haspopup=\"true\"\n                      aria-expanded={openSort ? 'true' : undefined}\n                      onClick={handleClickListItem}\n                      sx={{ color: 'grey.500', fontWeight: 400 }}\n                      endIcon={<KeyboardArrowDownIcon />}\n                    >\n                      {sortLabel.length > 0 && sortLabel[0].label}\n                    </Button>\n                    <Menu\n                      id=\"demo-positioned-menu\"\n                      aria-labelledby=\"demo-positioned-button\"\n                      anchorEl={anchorEl}\n                      open={openSort}\n                      onClose={handleClose}\n                      anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                      }}\n                      transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                      }}\n                    >\n                      {SortStatus.map((status, index) => (\n                        <MenuItem\n                          sx={{ p: 1.5 }}\n                          key={index}\n                          selected={status.value === filter.status}\n                          onClick={(event) => handleMenuItemClick(event, status.value)}\n                        >\n                          {status.label}\n                        </MenuItem>\n                      ))}\n                    </Menu>\n                  </Stack>\n                </Stack>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={12} sm={6} sx={{ textAlign: 'right' }}>\n            <Tooltip title=\"Add\">\n              <Fab\n                color=\"primary\"\n                size=\"small\"\n                onClick={handleClickOpenDialog}\n                sx={{ boxShadow: 'none', ml: 1, width: 32, height: 32, minHeight: 32 }}\n              >\n                <AddIcon fontSize=\"small\" />\n              </Fab>\n            </Tooltip>\n          </Grid>\n        </Grid>\n      }\n      content={false}\n    >\n      <RanksList />\n    </MainCard>\n  );\n};\n\nexport default Ranks;\n"],"sourceRoot":""}