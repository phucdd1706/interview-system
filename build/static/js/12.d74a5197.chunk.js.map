{"version":3,"sources":["views/pages/administrator/SortStatus.ts","views/pages/customer/index.tsx"],"names":["SortStatus","value","label","Customer","theme","useTheme","matchDownSM","useMediaQuery","breakpoints","down","matchDownMD","spacingMD","useState","search","status","filter","setFilter","handleSearch","event","a","newString","target","anchorEl","setAnchorEl","openSort","Boolean","filterData","setTimeout","dispatch","getAdministratorList","useEffect","sortLabel","items","title","container","spacing","item","xs","alignItems","justifyContent","direction","sx","width","md","InputProps","startAdornment","position","fontSize","placeholder","size","onChange","display","sm","color","fontWeight","variant","id","undefined","onClick","currentTarget","endIcon","length","open","onClose","anchorOrigin","vertical","horizontal","transformOrigin","map","index","p","selected","handleMenuItemClick","content"],"mappings":"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","file":"static/js/12.d74a5197.chunk.js","sourcesContent":["// PROJECT IMPORTS\nimport { SortStatusProps } from 'types/user';\n\nconst SortStatus: SortStatusProps[] = [\n  {\n    value: '',\n    label: 'All'\n  },\n  {\n    value: '1',\n    label: 'Inactive'\n  },\n  {\n    value: '2',\n    label: 'Active'\n  },\n  {\n    value: '3',\n    label: 'Blocked'\n  }\n];\n\nexport default SortStatus;\n","// THIRD-PARTY\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport React, { useEffect, useState } from 'react';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { Button, Grid, InputAdornment, Menu, MenuItem, Stack, TextField, Typography, useMediaQuery } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\n// PROJECT IMPORTS\nimport MainCard from 'ui-component/cards/MainCard';\nimport SortStatus from 'views/pages/administrator/SortStatus';\nimport { dispatch } from 'store';\nimport { getAdministratorList } from 'store/slices/user';\nimport { UserFilter } from 'types/user';\n\nconst Customer = () => {\n  const theme = useTheme();\n\n  const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\n  const matchDownMD = useMediaQuery(theme.breakpoints.down('lg'));\n\n  const spacingMD = matchDownMD ? 1 : 1.5;\n\n  const initialState: UserFilter = {\n    search: '',\n    status: ''\n  };\n  const [filter, setFilter] = useState(initialState);\n\n  const handleSearch = async (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement> | undefined) => {\n    const newString = event?.target.value;\n    setFilter({ ...filter, search: newString! });\n  };\n\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const openSort = Boolean(anchorEl);\n  const handleClickListItem = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const filterData = async () => {\n    setTimeout(async () => {\n      await dispatch(getAdministratorList(filter));\n    }, 400);\n  };\n\n  useEffect(() => {\n    filterData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [filter]);\n\n  const handleMenuItemClick = (event: React.MouseEvent<HTMLElement>, index: string | '') => {\n    setFilter({ ...filter, status: index });\n    setAnchorEl(null);\n  };\n  const sortLabel = SortStatus.filter((items) => items.value === filter.status);\n\n  return (\n    <MainCard\n      title={\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Grid container alignItems=\"center\" justifyContent=\"space-between\" spacing={matchDownMD ? 0.5 : 2}>\n              <Grid item>\n                <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"center\" spacing={matchDownSM ? 0.5 : spacingMD}>\n                  <TextField\n                    sx={{ width: { xs: 140, md: 'auto' } }}\n                    InputProps={{\n                      startAdornment: (\n                        <InputAdornment position=\"start\">\n                          <SearchIcon fontSize=\"small\" />\n                        </InputAdornment>\n                      )\n                    }}\n                    value={filter.search}\n                    placeholder=\"Search....\"\n                    size=\"small\"\n                    onChange={handleSearch}\n                  />\n\n                  <Typography sx={{ display: { xs: 'none', sm: 'flex' }, fontSize: '1rem', color: 'grey.500', fontWeight: 400 }}>\n                    |\n                  </Typography>\n                  <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"center\" sx={{ display: { xs: 'none', sm: 'flex' } }}>\n                    <Typography variant=\"h5\">Sort by: </Typography>\n                    <Button\n                      id=\"demo-positioned-button\"\n                      aria-controls=\"demo-positioned-menu\"\n                      aria-haspopup=\"true\"\n                      aria-expanded={openSort ? 'true' : undefined}\n                      onClick={handleClickListItem}\n                      sx={{ color: 'grey.500', fontWeight: 400 }}\n                      endIcon={<KeyboardArrowDownIcon />}\n                    >\n                      {sortLabel.length > 0 && sortLabel[0].label}\n                    </Button>\n                    <Menu\n                      id=\"demo-positioned-menu\"\n                      aria-labelledby=\"demo-positioned-button\"\n                      anchorEl={anchorEl}\n                      open={openSort}\n                      onClose={handleClose}\n                      anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                      }}\n                      transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                      }}\n                    >\n                      {SortStatus.map((status, index) => (\n                        <MenuItem\n                          sx={{ p: 1.5 }}\n                          key={index}\n                          selected={status.value === filter.status}\n                          onClick={(event) => handleMenuItemClick(event, status.value || '')}\n                        >\n                          {status.label}\n                        </MenuItem>\n                      ))}\n                    </Menu>\n                  </Stack>\n                </Stack>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      }\n      content={false}\n    >\n      <p>custommer</p>\n    </MainCard>\n  );\n};\n\nexport default Customer;\n"],"sourceRoot":""}