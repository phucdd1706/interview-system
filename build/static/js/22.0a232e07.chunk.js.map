{"version":3,"sources":["views/pages/account/tabs/Calendar/ViewEventDialog.tsx","views/pages/account/tabs/Calendar/SelectTabs/EventTabs.tsx","views/pages/account/tabs/Calendar/SelectTabs/InterviewTabs.tsx","views/pages/account/tabs/Calendar/SelectTabs/ReminderTabs.tsx","views/pages/account/tabs/Calendar/SelectDialog.tsx","views/pages/account/tabs/Calendar/Calendar.tsx"],"names":["EventDialogTitle","props","children","onClose","other","DialogTitle","sx","m","pb","pt","pr","display","width","justifyContent","IconButton","onClick","position","right","color","theme","palette","grey","ViewEventDialog","open","setOpen","eventInfo","useTheme","React","useState","openButton","setOpenButton","anchorRef","useRef","selectedIndex","setSelectedIndex","options","id","title","icon","marginRight","handleClose","event","current","contains","target","handleDialogClose","Dialog","scroll","fullWidth","maxWidth","borderRadius","maxHeight","Card","CardHeader","paddingLeft","paddingBottom","paddingTop","avatar","Typography","variant","subheader","allDay","start","toLocaleString","weekday","day","year","month","hour","minute","end","CardContent","Grid","container","item","direction","alignItems","spacing","fontSize","Button","marginTop","Link","href","underline","DialogActions","ButtonGroup","mr","size","ref","console","info","log","undefined","prevOpenButton","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","style","transformOrigin","Paper","elevation","square","ClickAwayListener","onClickAway","MenuList","autoFocusItem","map","option","index","MenuItem","disabled","selected","handleMenuItemClick","EventTabs","forwardRef","selectRef","selectInfo","Date","startTime","setStartTime","endTime","setEndTime","openStartDatePicker","setOpenStartDatePicker","openStartTimePicker","setOpenStartTimePicker","openEndDatePicker","setOpenEndDatePicker","openEndTimePicker","setOpenEndTimePicker","SayHi","alert","useImperativeHandle","handleChange","newValue","error","md","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","label","value","onChange","renderInput","inputRef","inputProps","Box","endAdornment","Tabs","height","backgroundColor","primary","light","Tab","DesktopTimePicker","TextField","multiline","rows","InterviewTabs","candidateList","name","rank","Autocomplete","multiple","defaultValue","freeSolo","renderTags","getTagProps","Chip","params","placeholder","ReminderTabs","checked","setChecked","loopOptions","setLoopOptions","FormControl","InputLabel","Select","labelId","marginLeft","FormGroup","FormControlLabel","control","Checkbox","BootstrapDialogTitle","p","top","SelectDialog","createEventId","tabsValue","setTabsValue","setTitle","PaperProps","DialogContent","padding","InputLabelProps","required","TabContext","TabPanel","calendarApi","view","calendar","unselect","addEvent","startStr","endStr","SubComponentsPickers","date","setDate","setStartDate","setEndDate","calendarRef","setGoToDate","openEvent","setOpenEvent","setEventInfo","openSelect","setOpenSelect","setSelectInfo","locale","useConfig","enPickerLocale","viPickerLocale","useEffect","handlePickDate","newDate","a","getApi","gotoDate","eventGuid","MainCard","alignContent","xs","CalendarPicker","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","headerToolbar","left","center","customButtons","prev","click","type","nextDate","getTime","getFullYear","getMonth","next","nextDay","nextWeek","nextMonth","today","text","initialView","events","eventClick","clickInfo","prevState","editable","selectable","selectMirror","select","selectInformation","dayMaxEvents","nowIndicator","handleWindowResize","progressiveEventRendering","dayMaxEventRows","stickyFooterScrollbar","String"],"mappings":"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","file":"static/js/22.0a232e07.chunk.js","sourcesContent":["// THIRD-PARTY\r\nimport React from 'react';\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  Button,\r\n  Typography,\r\n  Grid,\r\n  CardHeader,\r\n  Card,\r\n  CardContent,\r\n  Link,\r\n  ButtonGroup,\r\n  Popper,\r\n  Grow,\r\n  Paper,\r\n  MenuList,\r\n  MenuItem,\r\n  DialogTitle,\r\n  IconButton,\r\n  useTheme\r\n} from '@mui/material';\r\n\r\n// PROJECT IMPORTS\r\n\r\n// Icons Import\r\nimport NoiseControlOffOutlinedIcon from '@mui/icons-material/NoiseControlOffOutlined';\r\nimport MeetingRoomIcon from '@mui/icons-material/MeetingRoom';\r\nimport PhoneIcon from '@mui/icons-material/Phone';\r\nimport EventIcon from '@mui/icons-material/Event';\r\nimport NotificationsOutlinedIcon from '@mui/icons-material/NotificationsOutlined';\r\nimport LaunchOutlinedIcon from '@mui/icons-material/LaunchOutlined';\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\r\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport CheckOutlinedIcon from '@mui/icons-material/CheckOutlined';\r\nimport VideocamOutlinedIcon from '@mui/icons-material/VideocamOutlined';\r\nimport DeleteOutlinedIcon from '@mui/icons-material/DeleteOutlined';\r\nimport EditOutlinedIcon from '@mui/icons-material/EditOutlined';\r\n\r\ninterface Props {\r\n  open: boolean;\r\n  // handleDialogOpen: () => void;\r\n  setOpen: any;\r\n  eventInfo: any;\r\n}\r\n\r\nexport interface DialogTitleProps {\r\n  id: string;\r\n  children?: React.ReactNode;\r\n  onClose: () => void;\r\n}\r\n\r\nconst EventDialogTitle = (props: DialogTitleProps) => {\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  const { children, onClose, ...other } = props;\r\n\r\n  return (\r\n    <DialogTitle sx={{ m: 0, pb: 0, pt: 0, pr: 2, display: 'flex', width: '100%', justifyContent: 'right' }} {...other}>\r\n      {/* {children} */}\r\n      <IconButton\r\n        aria-label=\"delete\"\r\n        onClick={onClose}\r\n        sx={{\r\n          position: 'relative',\r\n          right: 8,\r\n          color: (theme) => theme.palette.grey[500]\r\n        }}\r\n      >\r\n        <EditOutlinedIcon />\r\n      </IconButton>\r\n      <IconButton\r\n        aria-label=\"delete\"\r\n        onClick={onClose}\r\n        sx={{\r\n          position: 'relative',\r\n          right: 8,\r\n          color: (theme) => theme.palette.grey[500]\r\n        }}\r\n      >\r\n        <DeleteOutlinedIcon />\r\n      </IconButton>\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={onClose}\r\n          sx={{\r\n            position: 'relative',\r\n            right: 8,\r\n            color: (theme) => theme.palette.grey[500]\r\n          }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </DialogTitle>\r\n  );\r\n};\r\n\r\nconst ViewEventDialog = ({ open, setOpen, eventInfo }: Props) => {\r\n  const GoogleMeetURL = 'meet.google.com/fmf-qqrg-cbg';\r\n  const PhoneMeet = '0123456789';\r\n  const PersonCreater = 'Do Dinh Phuc';\r\n  const HasMeet = true;\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  const theme = useTheme();\r\n  const [openButton, setOpenButton] = React.useState(false);\r\n  const anchorRef = React.useRef<HTMLDivElement>(null);\r\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\r\n\r\n  const options = [\r\n    { id: 0, title: 'Yes, in a meeting room', icon: <MeetingRoomIcon sx={{ marginRight: '5px' }} /> },\r\n    { id: 1, title: 'Yes', icon: <CheckOutlinedIcon sx={{ marginRight: '5px' }} /> },\r\n    { id: 2, title: 'Yes, joining virtually', icon: <VideocamOutlinedIcon sx={{ marginRight: '5px' }} /> }\r\n  ];\r\n  // const options = ['yes', 'no', 'haha'];\r\n  // AccessTimeFilledIcon\r\n\r\n  const handleClick = () => {\r\n    console.info(`You clicked ${options[selectedIndex].title}`);\r\n    switch (selectedIndex) {\r\n      case 0:\r\n        console.log('Yes, in a meeting room');\r\n        handleDialogClose();\r\n        break;\r\n      case 1:\r\n        console.log('Yes');\r\n        handleDialogClose();\r\n        break;\r\n      case 2:\r\n        console.log('Yes, joining virtually');\r\n        handleDialogClose();\r\n        break;\r\n    }\r\n  };\r\n\r\n  // const renderMenuItem = (option: any, index: number) => {\r\n  //   const value = option.title;\r\n  //   return (\r\n  //     <MenuItem\r\n  //       key={value}\r\n  //       value={value}\r\n  //       disabled={index === 2}\r\n  //       selected={index === selectedIndex}\r\n  //       onClick={(event) => handleMenuItemClick(event, index)}\r\n  //     >\r\n  //       {/* {option.icon} */}\r\n  //       <Typography>1111</Typography>\r\n  //     </MenuItem>\r\n  //   );\r\n  // };\r\n\r\n  const handleMenuItemClick = (event: React.MouseEvent<HTMLLIElement, MouseEvent>, index: number) => {\r\n    setSelectedIndex(index);\r\n    setOpenButton(false);\r\n  };\r\n\r\n  const handleToggle = () => {\r\n    setOpenButton((prevOpenButton) => !prevOpenButton);\r\n  };\r\n\r\n  const handleClose = (event: Event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target as HTMLElement)) {\r\n      return;\r\n    }\r\n\r\n    setOpenButton(false);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleDialogClose}\r\n      aria-labelledby=\"event-dialog\"\r\n      scroll=\"paper\"\r\n      fullWidth\r\n      maxWidth=\"xs\"\r\n      sx={{\r\n        '&>div:nth-of-type(3)': {\r\n          '&>div': {\r\n            m: 0,\r\n            borderRadius: '0px',\r\n            maxHeight: '100%'\r\n          }\r\n        }\r\n      }}\r\n    >\r\n      <EventDialogTitle id=\"select-dialog-title\" onClose={handleDialogClose} />\r\n      <Card>\r\n        <CardHeader\r\n          sx={{ paddingLeft: 3, paddingBottom: 1, paddingTop: 1 }}\r\n          // whiteSpace=\"break-spaces\"\r\n          avatar={<NoiseControlOffOutlinedIcon color=\"primary\" />}\r\n          title={<Typography variant=\"h2\">{eventInfo?.title}</Typography>}\r\n          subheader={\r\n            <Typography>\r\n              <Typography variant=\"subtitle2\">\r\n                {' '}\r\n                Start:{' '}\r\n                {eventInfo?.allDay\r\n                  ? eventInfo?.start.toLocaleString('en-US', {\r\n                      weekday: 'short',\r\n                      day: 'numeric',\r\n                      year: 'numeric',\r\n                      month: 'long'\r\n                    })\r\n                  : eventInfo?.start.toLocaleString('en-US', {\r\n                      weekday: 'short', // long, short, narrow\r\n                      day: 'numeric', // numeric, 2-digit\r\n                      year: 'numeric', // numeric, 2-digit\r\n                      month: 'long', // numeric, 2-digit, long, short, narrow\r\n                      hour: 'numeric', // numeric, 2-digit\r\n                      minute: 'numeric' // numeric, 2-digit\r\n                    })}\r\n              </Typography>\r\n\r\n              {eventInfo?.allDay ? (\r\n                <></>\r\n              ) : (\r\n                <Typography>\r\n                  <Typography variant=\"subtitle2\">\r\n                    {' '}\r\n                    End:{' '}\r\n                    {eventInfo?.end.toLocaleString('en-US', {\r\n                      weekday: 'short',\r\n                      day: 'numeric',\r\n                      year: 'numeric',\r\n                      month: 'long',\r\n                      hour: 'numeric',\r\n                      minute: 'numeric'\r\n                    })}\r\n                  </Typography>\r\n                </Typography>\r\n              )}\r\n            </Typography>\r\n          }\r\n        />\r\n        <CardContent>\r\n          <Grid container>\r\n            {HasMeet === true ? (\r\n              <Grid>\r\n                <Grid container item direction=\"row\" justifyContent=\"flex-start\" alignItems=\"center\" spacing={2}>\r\n                  <Grid item>\r\n                    <MeetingRoomIcon fontSize=\"small\" />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Button variant=\"contained\">Join With Google Meet</Button>\r\n                    <Typography variant=\"subtitle2\">{GoogleMeetURL}</Typography>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container item direction=\"row\" justifyContent=\"flex-start\" alignItems=\"center\" spacing={2} sx={{ marginTop: '2px' }}>\r\n                  <Grid item>\r\n                    <PhoneIcon fontSize=\"small\" />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Link href=\"#\" underline=\"hover\">\r\n                      Join By Phone\r\n                    </Link>\r\n                    <Typography variant=\"subtitle2\">{PhoneMeet}</Typography>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container item direction=\"row\" justifyContent=\"flex-start\" alignItems=\"center\" spacing={2} sx={{ marginTop: '2px' }}>\r\n                  <Grid item>\r\n                    <LaunchOutlinedIcon fontSize=\"small\" />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Link href=\"#\" underline=\"hover\">\r\n                      More Phone Numbers\r\n                    </Link>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            ) : (\r\n              <></>\r\n            )}\r\n\r\n            <Grid container item direction=\"row\" justifyContent=\"flex-start\" alignItems=\"center\" spacing={2} sx={{ marginTop: '2px' }}>\r\n              <Grid item>\r\n                <NotificationsOutlinedIcon fontSize=\"small\" />\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography>10 Minutes Before</Typography>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid container item direction=\"row\" justifyContent=\"flex-start\" alignItems=\"center\" spacing={2} sx={{ marginTop: '2px' }}>\r\n              <Grid item>\r\n                <EventIcon fontSize=\"small\" />\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography>{PersonCreater}</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n      <DialogActions>\r\n        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n          <Grid item>\r\n            <Typography>Going?</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <>\r\n              <ButtonGroup sx={{ mr: 1 }} size=\"small\" variant=\"outlined\" ref={anchorRef} aria-label=\"split button\">\r\n                <Button onClick={handleClick}>{options[selectedIndex].title}</Button>\r\n                <Button\r\n                  size=\"small\"\r\n                  aria-controls={openButton ? 'split-button-menu' : undefined}\r\n                  aria-expanded={openButton ? 'true' : undefined}\r\n                  aria-label=\"select merge strategy\"\r\n                  aria-haspopup=\"menu\"\r\n                  onClick={handleToggle}\r\n                >\r\n                  <ArrowDropDownIcon fontSize=\"small\" />\r\n                </Button>\r\n              </ButtonGroup>\r\n              <Popper open={openButton} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n                {({ TransitionProps, placement }) => (\r\n                  <Grow\r\n                    {...TransitionProps}\r\n                    style={{\r\n                      transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'\r\n                    }}\r\n                  >\r\n                    <Paper elevation={6} square>\r\n                      <ClickAwayListener onClickAway={handleClose}>\r\n                        <MenuList id=\"split-button-menu\" autoFocusItem>\r\n                          {options.map((option, index) => (\r\n                            <MenuItem\r\n                              key={option.id}\r\n                              disabled={index === 2}\r\n                              selected={index === selectedIndex}\r\n                              onClick={(event) => handleMenuItemClick(event, index)}\r\n                            >\r\n                              {option.icon} {option.title}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </MenuList>\r\n                      </ClickAwayListener>\r\n                    </Paper>\r\n                  </Grow>\r\n                )}\r\n              </Popper>\r\n            </>\r\n            <Button sx={{ mr: 1 }} size=\"small\" variant=\"outlined\">\r\n              No\r\n            </Button>\r\n            <Button sx={{ mr: 1 }} size=\"small\" variant=\"outlined\">\r\n              Maybe\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\nexport default ViewEventDialog;\r\n","import React, { forwardRef, Ref, useImperativeHandle, useState } from 'react';\r\nimport { Box, Card, Grid, Tab, Tabs, TextField, Typography, useTheme } from '@mui/material';\r\nimport { RefObject } from '../SelectDialog';\r\n\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport DesktopTimePicker from '@mui/lab/DesktopTimePicker';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport SubjectIcon from '@mui/icons-material/Subject';\r\n\r\nconst EventTabs = forwardRef((props: { selectInfo: any }, selectRef: Ref<RefObject>) => {\r\n  const theme = useTheme();\r\n  const { selectInfo } = props;\r\n  const [startTime, setStartTime] = useState<Date | null>(new Date(selectInfo.start));\r\n  const [endTime, setEndTime] = useState<Date | null>(new Date(selectInfo.end));\r\n  const [openStartDatePicker, setOpenStartDatePicker] = useState(false);\r\n  const [openStartTimePicker, setOpenStartTimePicker] = useState(false);\r\n  const [openEndDatePicker, setOpenEndDatePicker] = useState(false);\r\n  const [openEndTimePicker, setOpenEndTimePicker] = useState(false);\r\n\r\n  useImperativeHandle(selectRef, () => ({ SayHi, startTime, endTime }));\r\n  function SayHi() {\r\n    // eslint-disable-next-line no-alert\r\n    alert(`${selectInfo?.start}`);\r\n  }\r\n\r\n  const handleChange = (event: React.SyntheticEvent, newValue: number) => {\r\n    switch (newValue) {\r\n      case 1:\r\n        setOpenStartDatePicker(() => !openStartDatePicker);\r\n        break;\r\n      case 2:\r\n        setOpenStartTimePicker(() => !openStartTimePicker);\r\n        break;\r\n      case 3:\r\n        setOpenEndDatePicker(() => !openEndDatePicker);\r\n        break;\r\n      case 4:\r\n        setOpenEndTimePicker(() => !openEndTimePicker);\r\n        break;\r\n      default:\r\n        console.error('Some Error Occurred While Choose Date or Time');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <Grid container justifyContent=\"flex-start\" alignItems=\"center\">\r\n        <Grid item container justifyContent=\"flex-start\" alignItems=\"center\" md={12}>\r\n          <Grid item alignItems=\"center\" md={1.3}>\r\n            <AccessTimeIcon fontSize=\"small\" />\r\n          </Grid>\r\n          <Grid item md={1.3}>\r\n            <Typography variant=\"subtitle1\">Start: </Typography>\r\n          </Grid>\r\n          <Grid item md={5}>\r\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n              <DatePicker\r\n                open={openStartDatePicker}\r\n                onClose={() => setOpenStartDatePicker(false)}\r\n                label=\"Basic example\"\r\n                value={startTime}\r\n                onChange={(newValue) => {\r\n                  setStartTime(newValue);\r\n                }}\r\n                renderInput={({ inputRef, inputProps, disabled, onChange, value }) => (\r\n                  <Box ref={inputRef} sx={{ display: 'flex', alignItems: 'center' }}>\r\n                    <input style={{ display: 'none' }} onChange={onChange} disabled={disabled} {...inputProps} />\r\n                    {inputProps?.endAdornment}\r\n                    <Tabs\r\n                      // value={tabsValue}\r\n                      onChange={handleChange}\r\n                      variant=\"fullWidth\"\r\n                      sx={{\r\n                        '& .MuiTabs-indicator': {\r\n                          height: 0\r\n                        },\r\n                        '& .MuiTab-root.Mui-selected': {\r\n                          backgroundColor: theme.palette.primary.light\r\n                        },\r\n                        \"& button[aria-selected='true']\": {\r\n                          borderRadius: 1.5\r\n                        }\r\n                      }}\r\n                    >\r\n                      {/* <Tab label=\"Interview\" value=\"1\" /> */}\r\n                      <Tab\r\n                        label={\r\n                          startTime?.toLocaleString('en-US', {\r\n                            weekday: 'short',\r\n                            day: 'numeric',\r\n                            year: 'numeric',\r\n                            month: 'long'\r\n                          }) || ''\r\n                        }\r\n                        value={1}\r\n                      />\r\n                    </Tabs>\r\n                  </Box>\r\n                )}\r\n              />\r\n            </LocalizationProvider>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography> : </Typography>\r\n          </Grid>\r\n          <Grid item md={3}>\r\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n              <DesktopTimePicker\r\n                open={openStartTimePicker}\r\n                onClose={() => setOpenStartTimePicker(false)}\r\n                label=\"Basic example\"\r\n                value={startTime}\r\n                onChange={(newValue) => {\r\n                  setStartTime(newValue);\r\n                }}\r\n                renderInput={({ inputRef, inputProps, disabled, onChange, value }) => (\r\n                  <Box ref={inputRef} sx={{ display: 'flex', alignItems: 'center' }}>\r\n                    {/* <input style={{ display: 'disable' }} onChange={onChange} disabled={disabled} {...inputProps} /> */}\r\n                    {inputProps?.endAdornment}\r\n                    <Tabs\r\n                      // value={tabsValue}\r\n                      onChange={handleChange}\r\n                      variant=\"fullWidth\"\r\n                      sx={{\r\n                        '& .MuiTabs-indicator': {\r\n                          height: 0\r\n                        },\r\n                        '& .MuiTab-root.Mui-selected': {\r\n                          backgroundColor: theme.palette.primary.light\r\n                        },\r\n                        \"& button[aria-selected='true']\": {\r\n                          borderRadius: 1.5\r\n                        }\r\n                      }}\r\n                    >\r\n                      {/* <Tab label=\"Interview\" value=\"1\" /> */}\r\n                      <Tab\r\n                        label={startTime?.toLocaleString('en-US', {\r\n                          hour: 'numeric', // numeric, 2-digit\r\n                          minute: 'numeric' // numeric, 2-digit\r\n                        })}\r\n                        value={2}\r\n                      />\r\n                    </Tabs>\r\n                  </Box>\r\n                )}\r\n              />\r\n            </LocalizationProvider>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item container justifyContent=\"flex-start\" alignItems=\"center\">\r\n          <Grid item alignItems=\"center\" md={1.3}>\r\n            <></>\r\n          </Grid>\r\n          <Grid item md={1.3}>\r\n            <Typography variant=\"subtitle1\">End: </Typography>\r\n          </Grid>\r\n          <Grid item md={5}>\r\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n              <DatePicker\r\n                open={openEndDatePicker}\r\n                onClose={() => setOpenEndDatePicker(false)}\r\n                label=\"Basic example\"\r\n                value={endTime}\r\n                onChange={(newValue) => {\r\n                  setEndTime(newValue);\r\n                }}\r\n                renderInput={({ inputRef, inputProps, disabled, onChange, value }) => (\r\n                  <Box ref={inputRef} sx={{ display: 'flex', alignItems: 'center' }}>\r\n                    <input style={{ display: 'none' }} onChange={onChange} disabled={disabled} {...inputProps} />\r\n                    {inputProps?.endAdornment}\r\n                    <Tabs\r\n                      // value={tabsValue}\r\n                      onChange={handleChange}\r\n                      variant=\"fullWidth\"\r\n                      sx={{\r\n                        '& .MuiTabs-indicator': {\r\n                          height: 0\r\n                        },\r\n                        '& .MuiTab-root.Mui-selected': {\r\n                          backgroundColor: theme.palette.primary.light\r\n                        },\r\n                        \"& button[aria-selected='true']\": {\r\n                          borderRadius: 1.5\r\n                        }\r\n                      }}\r\n                    >\r\n                      {/* <Tab label=\"Interview\" value=\"1\" /> */}\r\n                      <Tab\r\n                        label={\r\n                          endTime?.toLocaleString('en-US', {\r\n                            weekday: 'short',\r\n                            day: 'numeric',\r\n                            year: 'numeric',\r\n                            month: 'long'\r\n                          }) || ''\r\n                        }\r\n                        value={3}\r\n                      />\r\n                    </Tabs>\r\n                  </Box>\r\n                )}\r\n              />\r\n            </LocalizationProvider>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography> : </Typography>\r\n          </Grid>\r\n          <Grid item md={3}>\r\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n              <DesktopTimePicker\r\n                open={openEndTimePicker}\r\n                onClose={() => setOpenEndTimePicker(false)}\r\n                label=\"Basic example\"\r\n                value={endTime}\r\n                onChange={(newValue) => {\r\n                  setEndTime(newValue);\r\n                }}\r\n                renderInput={({ inputRef, inputProps, disabled, onChange, value }) => (\r\n                  <Box ref={inputRef} sx={{ display: 'flex', alignItems: 'center' }}>\r\n                    {/* <input style={{ display: 'disable' }} onChange={onChange} disabled={disabled} {...inputProps} /> */}\r\n                    {inputProps?.endAdornment}\r\n                    <Tabs\r\n                      // value={tabsValue}\r\n                      onChange={handleChange}\r\n                      variant=\"fullWidth\"\r\n                      sx={{\r\n                        '& .MuiTabs-indicator': {\r\n                          height: 0\r\n                        },\r\n                        '& .MuiTab-root.Mui-selected': {\r\n                          backgroundColor: theme.palette.primary.light\r\n                        },\r\n                        \"& button[aria-selected='true']\": {\r\n                          borderRadius: 1.5\r\n                        }\r\n                      }}\r\n                    >\r\n                      {/* <Tab label=\"Interview\" value=\"1\" /> */}\r\n                      <Tab\r\n                        label={endTime?.toLocaleString('en-US', {\r\n                          hour: 'numeric', // numeric, 2-digit\r\n                          minute: 'numeric' // numeric, 2-digit\r\n                        })}\r\n                        value={4}\r\n                      />\r\n                    </Tabs>\r\n                  </Box>\r\n                )}\r\n              />\r\n            </LocalizationProvider>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item container justifyContent=\"flex-start\" alignItems=\"center\" marginTop={2}>\r\n          <Grid item md={1.3}>\r\n            <SubjectIcon />\r\n          </Grid>\r\n          <Grid item md={9.1}>\r\n            <TextField fullWidth id=\"description-static\" label=\"Add Description\" multiline rows={4} variant=\"filled\" />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default EventTabs;\r\n","import React, { forwardRef, Ref, useImperativeHandle, useState } from 'react';\r\nimport { Autocomplete, Box, Button, Card, Chip, Grid, Tab, Tabs, TextField, Typography, useTheme } from '@mui/material';\r\nimport { RefObject } from '../SelectDialog';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport DesktopTimePicker from '@mui/lab/DesktopTimePicker';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\n\r\n// ICONS IMPORT\r\nimport MeetingRoomIcon from '@mui/icons-material/MeetingRoom';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport PeopleAltOutlinedIcon from '@mui/icons-material/PeopleAltOutlined';\r\nimport AddLocationIcon from '@mui/icons-material/AddLocation';\r\nimport SubjectIcon from '@mui/icons-material/Subject';\r\n\r\nconst InterviewTabs = forwardRef((props: { selectInfo: any }, selectRef: Ref<RefObject>) => {\r\n  const theme = useTheme();\r\n  const { selectInfo } = props;\r\n  const [openStartDatePicker, setOpenStartDatePicker] = useState(false);\r\n  const [openStartTimePicker, setOpenStartTimePicker] = useState(false);\r\n  const [openEndDatePicker, setOpenEndDatePicker] = useState(false);\r\n  const [openEndTimePicker, setOpenEndTimePicker] = useState(false);\r\n  const [startTime, setStartTime] = useState<Date | null>(new Date(selectInfo.start));\r\n  const [endTime, setEndTime] = useState<Date | null>(new Date(selectInfo.end));\r\n\r\n  useImperativeHandle(selectRef, () => ({ SayHi, startTime, endTime }));\r\n\r\n  function SayHi() {\r\n    // eslint-disable-next-line no-alert\r\n    alert(`${selectInfo?.start}`);\r\n  }\r\n\r\n  // Fake Candidate list\r\n  const candidateList = [\r\n    { name: 'Alexa', rank: 'intern' },\r\n    { name: 'Bob', rank: 'fresher' }\r\n  ];\r\n\r\n  const handleChange = (event: React.SyntheticEvent, newValue: number) => {\r\n    switch (newValue) {\r\n      case 1:\r\n        setOpenStartDatePicker(() => !openStartDatePicker);\r\n        break;\r\n      case 2:\r\n        setOpenStartTimePicker(() => !openStartTimePicker);\r\n        break;\r\n      case 3:\r\n        setOpenEndDatePicker(() => !openEndDatePicker);\r\n        break;\r\n      case 4:\r\n        setOpenEndTimePicker(() => !openEndTimePicker);\r\n        break;\r\n      default:\r\n        console.error('Some Error Occurred While Choose Date or Time');\r\n    }\r\n  };\r\n\r\n  console.error = () => {}; // --------------- Disable Console Error --------------\r\n\r\n  return (\r\n    <Card>\r\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n        <Grid container justifyContent=\"flex-start\" alignItems=\"center\">\r\n          <Grid item container justifyContent=\"flex-start\" alignItems=\"center\" md={12}>\r\n            <Grid item alignItems=\"center\" md={1.3}>\r\n              <AccessTimeIcon fontSize=\"small\" />\r\n            </Grid>\r\n            <Grid item md={1.3}>\r\n              <Typography variant=\"subtitle1\">Start: </Typography>\r\n            </Grid>\r\n            <Grid item md={5}>\r\n              <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                <DatePicker\r\n                  open={openStartDatePicker}\r\n                  onClose={() => setOpenStartDatePicker(false)}\r\n                  label=\"Basic example\"\r\n                  value={startTime}\r\n                  onChange={(newValue) => {\r\n                    setStartTime(newValue);\r\n                  }}\r\n                  renderInput={({ inputRef, inputProps, disabled, onChange, value }) => (\r\n                    <Box ref={inputRef} sx={{ display: 'flex', alignItems: 'center' }}>\r\n                      <input style={{ display: 'none' }} onChange={onChange} disabled={disabled} {...inputProps} />\r\n                      {inputProps?.endAdornment}\r\n                      <Tabs\r\n                        // value={tabsValue}\r\n                        onChange={handleChange}\r\n                        variant=\"fullWidth\"\r\n                        sx={{\r\n                          '& .MuiTabs-indicator': {\r\n                            height: 0\r\n                          },\r\n                          '& .MuiTab-root.Mui-selected': {\r\n                            backgroundColor: theme.palette.primary.light\r\n                          },\r\n                          \"& button[aria-selected='true']\": {\r\n                            borderRadius: 1.5\r\n                          }\r\n                        }}\r\n                      >\r\n                        {/* <Tab label=\"Interview\" value=\"1\" /> */}\r\n                        <Tab\r\n                          label={\r\n                            startTime?.toLocaleString('en-US', {\r\n                              weekday: 'short',\r\n                              day: 'numeric',\r\n                              year: 'numeric',\r\n                              month: 'long'\r\n                            }) || ''\r\n                          }\r\n                          value={1}\r\n                        />\r\n                      </Tabs>\r\n                    </Box>\r\n                  )}\r\n                />\r\n              </LocalizationProvider>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography> : </Typography>\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <DesktopTimePicker\r\n                open={openStartTimePicker}\r\n                onClose={() => setOpenStartTimePicker(false)}\r\n                label=\"Basic example\"\r\n                value={startTime}\r\n                onChange={(newValue) => {\r\n                  setStartTime(newValue);\r\n                }}\r\n                renderInput={({ inputRef, inputProps, disabled, onChange, value }) => (\r\n                  <Box ref={inputRef} sx={{ display: 'flex', alignItems: 'center' }}>\r\n                    {/* <input style={{ display: 'disable' }} onChange={onChange} disabled={disabled} {...inputProps} /> */}\r\n                    {inputProps?.endAdornment}\r\n                    <Tabs\r\n                      // value={tabsValue}\r\n                      onChange={handleChange}\r\n                      variant=\"fullWidth\"\r\n                      sx={{\r\n                        '& .MuiTabs-indicator': {\r\n                          height: 0\r\n                        },\r\n                        '& .MuiTab-root.Mui-selected': {\r\n                          backgroundColor: theme.palette.primary.light\r\n                        },\r\n                        \"& button[aria-selected='true']\": {\r\n                          borderRadius: 1.5\r\n                        }\r\n                      }}\r\n                    >\r\n                      {/* <Tab label=\"Interview\" value=\"1\" /> */}\r\n                      <Tab\r\n                        label={startTime?.toLocaleString('en-US', {\r\n                          hour: 'numeric', // numeric, 2-digit\r\n                          minute: 'numeric' // numeric, 2-digit\r\n                        })}\r\n                        value={2}\r\n                      />\r\n                    </Tabs>\r\n                  </Box>\r\n                )}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item container justifyContent=\"flex-start\" alignItems=\"center\">\r\n            <Grid item alignItems=\"center\" md={1.3}>\r\n              <></>\r\n            </Grid>\r\n            <Grid item md={1.3}>\r\n              <Typography variant=\"subtitle1\">End: </Typography>\r\n            </Grid>\r\n            <Grid item md={5}>\r\n              <DatePicker\r\n                open={openEndDatePicker}\r\n                onClose={() => setOpenEndDatePicker(false)}\r\n                label=\"Basic example\"\r\n                value={endTime}\r\n                onChange={(newValue) => {\r\n                  setEndTime(newValue);\r\n                }}\r\n                renderInput={({ inputRef, inputProps, disabled, onChange, value }) => (\r\n                  <Box ref={inputRef} sx={{ display: 'flex', alignItems: 'center' }}>\r\n                    <input style={{ display: 'none' }} onChange={onChange} disabled={disabled} {...inputProps} />\r\n                    {inputProps?.endAdornment}\r\n                    <Tabs\r\n                      // value={tabsValue}\r\n                      onChange={handleChange}\r\n                      variant=\"fullWidth\"\r\n                      sx={{\r\n                        '& .MuiTabs-indicator': {\r\n                          height: 0\r\n                        },\r\n                        '& .MuiTab-root.Mui-selected': {\r\n                          backgroundColor: theme.palette.primary.light\r\n                        },\r\n                        \"& button[aria-selected='true']\": {\r\n                          borderRadius: 1.5\r\n                        }\r\n                      }}\r\n                    >\r\n                      {/* <Tab label=\"Interview\" value=\"1\" /> */}\r\n                      <Tab\r\n                        label={\r\n                          endTime?.toLocaleString('en-US', {\r\n                            weekday: 'short',\r\n                            day: 'numeric',\r\n                            year: 'numeric',\r\n                            month: 'long'\r\n                          }) || ''\r\n                        }\r\n                        value={3}\r\n                      />\r\n                    </Tabs>\r\n                  </Box>\r\n                )}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography> : </Typography>\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <DesktopTimePicker\r\n                open={openEndTimePicker}\r\n                onClose={() => setOpenEndTimePicker(false)}\r\n                label=\"Basic example\"\r\n                value={endTime}\r\n                onChange={(newValue) => {\r\n                  setEndTime(newValue);\r\n                }}\r\n                renderInput={({ inputRef, inputProps, disabled, onChange, value }) => (\r\n                  <Box ref={inputRef} sx={{ display: 'flex', alignItems: 'center' }}>\r\n                    {/* <input style={{ display: 'disable' }} onChange={onChange} disabled={disabled} {...inputProps} /> */}\r\n                    {inputProps?.endAdornment}\r\n                    <Tabs\r\n                      // value={tabsValue}\r\n                      onChange={handleChange}\r\n                      variant=\"fullWidth\"\r\n                      sx={{\r\n                        '& .MuiTabs-indicator': {\r\n                          height: 0\r\n                        },\r\n                        '& .MuiTab-root.Mui-selected': {\r\n                          backgroundColor: theme.palette.primary.light\r\n                        },\r\n                        \"& button[aria-selected='true']\": {\r\n                          borderRadius: 1.5\r\n                        }\r\n                      }}\r\n                    >\r\n                      {/* <Tab label=\"Interview\" value=\"1\" /> */}\r\n                      <Tab\r\n                        label={endTime?.toLocaleString('en-US', {\r\n                          hour: 'numeric', // numeric, 2-digit\r\n                          minute: 'numeric' // numeric, 2-digit\r\n                        })}\r\n                        value={4}\r\n                      />\r\n                    </Tabs>\r\n                  </Box>\r\n                )}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item container justifyContent=\"flex-start\" alignItems=\"center\">\r\n            <Grid item md={1.3}>\r\n              <MeetingRoomIcon />\r\n            </Grid>\r\n            <Grid item md={9.1}>\r\n              <Button fullWidth variant=\"contained\" target=\"_blank\" href=\"https://meet.google.com/\">\r\n                Add Google Meet\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item container justifyContent=\"flex-start\" alignItems=\"center\" marginTop={2}>\r\n            <Grid item md={1.3}>\r\n              <PeopleAltOutlinedIcon />\r\n            </Grid>\r\n            <Grid item md={9.1}>\r\n              <Autocomplete\r\n                multiple\r\n                id=\"tags-filled\"\r\n                options={candidateList.map((option) => option.name)}\r\n                defaultValue={[candidateList[0].name]}\r\n                freeSolo\r\n                renderTags={(value: readonly string[], getTagProps) =>\r\n                  value.map((option: string, index: number) => <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />)\r\n                }\r\n                renderInput={(params) => <TextField {...params} variant=\"filled\" label=\"Add Candidate\" placeholder=\"Candidates\" />}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item container justifyContent=\"flex-start\" alignItems=\"center\" marginTop={2}>\r\n            <Grid item md={1.3}>\r\n              <AddLocationIcon />\r\n            </Grid>\r\n            <Grid item md={9.1}>\r\n              <TextField fullWidth label=\"Add Location\" size=\"small\" />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item container justifyContent=\"flex-start\" alignItems=\"center\" marginTop={2}>\r\n            <Grid item md={1.3}>\r\n              <SubjectIcon />\r\n            </Grid>\r\n            <Grid item md={9.1}>\r\n              <TextField fullWidth label=\"Add More Description\" size=\"small\" />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </LocalizationProvider>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default InterviewTabs;\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport React, { forwardRef, Ref, useImperativeHandle, useState } from 'react';\r\nimport {\r\n  Box,\r\n  Card,\r\n  Checkbox,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  SelectChangeEvent,\r\n  Tab,\r\n  Tabs,\r\n  Typography,\r\n  useTheme\r\n} from '@mui/material';\r\nimport { RefObject } from '../SelectDialog';\r\n\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport DesktopTimePicker from '@mui/lab/DesktopTimePicker';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport LoopIcon from '@mui/icons-material/Loop';\r\n\r\nconst ReminderTabs = forwardRef((props: { selectInfo: any }, selectRef: Ref<RefObject>) => {\r\n  const theme = useTheme();\r\n  const { selectInfo } = props;\r\n  const [startTime, setStartTime] = useState<Date | null>(new Date(selectInfo.start));\r\n  const [endTime, setEndTime] = useState<Date | null>(new Date(selectInfo.end));\r\n  const [openStartDatePicker, setOpenStartDatePicker] = useState(false);\r\n  const [openStartTimePicker, setOpenStartTimePicker] = useState(false);\r\n  const [checked, setChecked] = React.useState(false);\r\n\r\n  useImperativeHandle(selectRef, () => ({ SayHi, startTime, endTime }));\r\n  function SayHi() {\r\n    // eslint-disable-next-line no-alert\r\n    alert(`${selectInfo?.start}`);\r\n  }\r\n\r\n  const [loopOptions, setLoopOptions] = React.useState('');\r\n\r\n  const handleBoxChange = (event: SelectChangeEvent) => {\r\n    setLoopOptions(event.target.value as string);\r\n  };\r\n\r\n  const handleChange = (event: React.SyntheticEvent, newValue: number) => {\r\n    switch (newValue) {\r\n      case 1:\r\n        setOpenStartDatePicker(() => !openStartDatePicker);\r\n        break;\r\n      case 2:\r\n        setOpenStartTimePicker(() => !openStartTimePicker);\r\n        break;\r\n      default:\r\n        console.error('Some Error Occurred While Choose Date or Time');\r\n    }\r\n  };\r\n\r\n  const handleChecked = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setChecked(event.target.checked);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <Grid container justifyContent=\"flex-start\" alignItems=\"center\">\r\n        <Grid item container justifyContent=\"flex-start\" alignItems=\"center\" md={12}>\r\n          <Grid item alignItems=\"center\" md={1.3}>\r\n            <AccessTimeIcon fontSize=\"small\" />\r\n          </Grid>\r\n          <Grid item md={1.3}>\r\n            <Typography variant=\"subtitle1\">Start: </Typography>\r\n          </Grid>\r\n          <Grid item md={5}>\r\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n              <DatePicker\r\n                open={openStartDatePicker}\r\n                onClose={() => setOpenStartDatePicker(false)}\r\n                label=\"Basic example\"\r\n                value={startTime}\r\n                onChange={(newValue) => {\r\n                  setStartTime(newValue);\r\n                }}\r\n                renderInput={({ inputRef, inputProps, disabled, onChange, value }) => (\r\n                  <Box ref={inputRef} sx={{ display: 'flex', alignItems: 'center' }}>\r\n                    <input style={{ display: 'none' }} onChange={onChange} disabled={disabled} {...inputProps} />\r\n                    {inputProps?.endAdornment}\r\n                    <Tabs\r\n                      // value={tabsValue}\r\n                      onChange={handleChange}\r\n                      variant=\"fullWidth\"\r\n                      sx={{\r\n                        '& .MuiTabs-indicator': {\r\n                          height: 0\r\n                        },\r\n                        '& .MuiTab-root.Mui-selected': {\r\n                          backgroundColor: theme.palette.primary.light\r\n                        },\r\n                        \"& button[aria-selected='true']\": {\r\n                          borderRadius: 1.5\r\n                        }\r\n                      }}\r\n                    >\r\n                      {/* <Tab label=\"Interview\" value=\"1\" /> */}\r\n                      <Tab\r\n                        label={\r\n                          startTime?.toLocaleString('en-US', {\r\n                            weekday: 'short',\r\n                            day: 'numeric',\r\n                            year: 'numeric',\r\n                            month: 'long'\r\n                          }) || ''\r\n                        }\r\n                        value={1}\r\n                      />\r\n                    </Tabs>\r\n                  </Box>\r\n                )}\r\n              />\r\n            </LocalizationProvider>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography> : </Typography>\r\n          </Grid>\r\n          <Grid item md={3}>\r\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n              <DesktopTimePicker\r\n                open={openStartTimePicker}\r\n                onClose={() => setOpenStartTimePicker(false)}\r\n                label=\"Basic example\"\r\n                value={startTime}\r\n                onChange={(newValue) => {\r\n                  setStartTime(newValue);\r\n                }}\r\n                renderInput={({ inputRef, inputProps, disabled, onChange, value }) => (\r\n                  <Box ref={inputRef} sx={{ display: 'flex', alignItems: 'center' }}>\r\n                    {/* <input style={{ display: 'disable' }} onChange={onChange} disabled={disabled} {...inputProps} /> */}\r\n                    {inputProps?.endAdornment}\r\n                    <Tabs\r\n                      // value={tabsValue}\r\n                      onChange={handleChange}\r\n                      variant=\"fullWidth\"\r\n                      sx={{\r\n                        '& .MuiTabs-indicator': {\r\n                          height: 0\r\n                        },\r\n                        '& .MuiTab-root.Mui-selected': {\r\n                          backgroundColor: theme.palette.primary.light\r\n                        },\r\n                        \"& button[aria-selected='true']\": {\r\n                          borderRadius: 1.5\r\n                        }\r\n                      }}\r\n                    >\r\n                      {/* <Tab label=\"Interview\" value=\"1\" /> */}\r\n                      <Tab\r\n                        label={startTime?.toLocaleString('en-US', {\r\n                          hour: 'numeric', // numeric, 2-digit\r\n                          minute: 'numeric' // numeric, 2-digit\r\n                        })}\r\n                        value={2}\r\n                      />\r\n                    </Tabs>\r\n                  </Box>\r\n                )}\r\n              />\r\n            </LocalizationProvider>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item container justifyContent=\"flex-start\" alignItems=\"center\" marginTop={2}>\r\n          <Grid item md={1.3}>\r\n            <LoopIcon />\r\n          </Grid>\r\n          <Grid item md={5.1}>\r\n            <FormControl fullWidth>\r\n              <InputLabel id=\"select-label\">Loop</InputLabel>\r\n              <Select labelId=\"select-label\" id=\"select-label\" value={loopOptions} label=\"Loop\" onChange={handleBoxChange}>\r\n                <MenuItem value=\"never\">Never</MenuItem>\r\n                <MenuItem value=\"daily\">Daily</MenuItem>\r\n                <MenuItem value=\"week\">Every Week</MenuItem>\r\n                <MenuItem value=\"weekDay\">Day of the Week</MenuItem>\r\n                <MenuItem value=\"weekend\">Weekend</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item md={4} marginLeft={2}>\r\n            <FormGroup>\r\n              <FormControlLabel\r\n                control={<Checkbox checked={checked} onChange={handleChecked} name=\"checked\" inputProps={{ 'aria-label': 'controlled' }} />}\r\n                label=\"All Day?\"\r\n              />\r\n            </FormGroup>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default ReminderTabs;\r\n","// THIRD-PARTY\r\nimport React, { useState, useRef } from 'react';\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  Button,\r\n  Grid,\r\n  DialogTitle,\r\n  IconButton,\r\n  TextField,\r\n  DialogContent,\r\n  Tab,\r\n  Tabs,\r\n  useTheme,\r\n  FormControl,\r\n  Box\r\n} from '@mui/material';\r\nimport TabPanel from '@mui/lab/TabPanel';\r\nimport TabContext from '@mui/lab/TabContext';\r\n\r\n// Icons Import\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport EventTabs from './SelectTabs/EventTabs';\r\nimport InterviewTabs from './SelectTabs/InterviewTabs';\r\nimport ReminderTabs from './SelectTabs/ReminderTabs';\r\n\r\n// PROJECT IMPORTS\r\n\r\ninterface Props {\r\n  open: boolean;\r\n  // handleDialogOpen: () => void;\r\n  setOpen: any;\r\n  selectInfo: any;\r\n  createEventId: any;\r\n}\r\n\r\nexport interface RefObject {\r\n  SayHi: () => void;\r\n  startTime: Date | null;\r\n  endTime: Date | null;\r\n}\r\n\r\nexport interface DialogTitleProps {\r\n  id: string;\r\n  children?: React.ReactNode;\r\n  onClose: () => void;\r\n}\r\n\r\nconst BootstrapDialogTitle = (props: DialogTitleProps) => {\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  const { children, onClose, ...other } = props;\r\n\r\n  return (\r\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\r\n      {/* {children} */}\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={onClose}\r\n          sx={{\r\n            position: 'absolute',\r\n            right: 8,\r\n            top: 8,\r\n            color: (theme) => theme.palette.grey[500]\r\n          }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </DialogTitle>\r\n  );\r\n};\r\n\r\nconst SelectDialog = ({ open, setOpen, selectInfo, createEventId }: Props) => {\r\n  const theme = useTheme();\r\n  const [tabsValue, setTabsValue] = useState('1');\r\n  const [title, setTitle] = useState('');\r\n  const selectRef = useRef<RefObject>(null);\r\n\r\n  const handleChange = (event: React.SyntheticEvent, newValue: string) => {\r\n    setTabsValue(newValue);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    const calendarApi = selectInfo.view.calendar;\r\n    // const title = prompt(`Please enter a new title for your event from ${selectInfo.startStr} to ${selectInfo.endStr}`);\r\n    calendarApi.unselect();\r\n    if (title && title !== '') {\r\n      calendarApi.addEvent({\r\n        id: createEventId(),\r\n        title,\r\n        start: selectInfo.startStr,\r\n        end: selectInfo.endStr,\r\n        allDay: selectInfo.allDay\r\n      });\r\n      handleDialogClose();\r\n    } else {\r\n      console.error('Some Error Occurred While Saving Event!');\r\n    }\r\n  };\r\n\r\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setTitle(event.target.value);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setTitle('');\r\n    setOpen(false);\r\n  };\r\n\r\n  // test function\r\n  const onButtonClick = () => {\r\n    if (selectRef.current) {\r\n      selectRef.current.SayHi();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      // onClose={() => setOpen(false)}\r\n      onClose={handleDialogClose}\r\n      // aria-labelledby=\"event-dialog\"\r\n      scroll=\"paper\"\r\n      fullWidth\r\n      maxWidth=\"xs\"\r\n      PaperProps={{\r\n        style: { borderRadius: 5 }\r\n      }}\r\n      sx={{\r\n        '&>div:nth-of-type(3)': {\r\n          '&>div': {\r\n            m: 0,\r\n            borderRadius: '0px',\r\n            maxHeight: '100%'\r\n          }\r\n        }\r\n      }}\r\n    >\r\n      {/* Header */}\r\n      <BootstrapDialogTitle id=\"customized-dialog-title\" onClose={handleDialogClose} />\r\n      {/* Body */}\r\n      <DialogContent sx={{ padding: '0px 0px 20px' }}>\r\n        <Grid container>\r\n          <Grid item width=\"95%\" sx={{ marginLeft: 8 }}>\r\n            <FormControl fullWidth>\r\n              <TextField\r\n                id=\"select-title-input\"\r\n                value={title}\r\n                onChange={handleTitleChange}\r\n                variant=\"standard\"\r\n                label=\"Add Title\"\r\n                inputProps={{ style: { fontSize: 18 } }} // font size of input text\r\n                InputLabelProps={{ style: { fontSize: 18 } }} // font size of input label\r\n                fullWidth\r\n                required\r\n                sx={{ paddingTop: 1 }}\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item width=\"95%\">\r\n            <TabContext value={tabsValue}>\r\n              <Box>\r\n                <Tabs\r\n                  value={tabsValue}\r\n                  onChange={handleChange}\r\n                  variant=\"fullWidth\"\r\n                  sx={{\r\n                    height: 10,\r\n                    marginLeft: 8,\r\n                    marginTop: 1,\r\n                    '& .MuiTabs-indicator': {\r\n                      height: 0\r\n                    },\r\n                    '& .MuiTab-root.Mui-selected': {\r\n                      backgroundColor: theme.palette.primary.light\r\n                    },\r\n                    \"& button[aria-selected='true']\": {\r\n                      borderRadius: 1.5\r\n                    }\r\n                  }}\r\n                  // TabIndicatorProps={{\r\n                  //   style: {\r\n                  //     transition: 'none'\r\n                  //   }\r\n                  // }}\r\n                >\r\n                  <Tab label=\"Interview\" value=\"1\" />\r\n                  <Tab label=\"Event\" value=\"2\" />\r\n                  <Tab label=\"Reminder\" value=\"3\" />\r\n                </Tabs>\r\n              </Box>\r\n              <TabPanel value=\"1\">\r\n                {' '}\r\n                <InterviewTabs selectInfo={selectInfo} ref={selectRef} />{' '}\r\n              </TabPanel>\r\n              <TabPanel value=\"2\">\r\n                {' '}\r\n                <EventTabs selectInfo={selectInfo} ref={selectRef} />{' '}\r\n              </TabPanel>\r\n              <TabPanel value=\"3\">\r\n                {' '}\r\n                <ReminderTabs selectInfo={selectInfo} ref={selectRef} />{' '}\r\n              </TabPanel>\r\n            </TabContext>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      {/* Footer */}\r\n      <DialogActions>\r\n        <Button onClick={onButtonClick}>More Options</Button>\r\n        <Button variant=\"contained\" onClick={handleSave}>\r\n          Save\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\nexport default SelectDialog;\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\n// THIRD-PARTY\r\nimport React, { useState } from 'react';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport CalendarPicker from '@mui/lab/CalendarPicker';\r\nimport Grid from '@mui/material/Grid';\r\nimport { Alert, Button, useTheme } from '@mui/material';\r\nimport FullCalendar, { DateSelectArg, EventClickArg } from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport viLocale from '@fullcalendar/core/locales/vi';\r\nimport enLocale from '@fullcalendar/core/locales/en-gb';\r\nimport viPickerLocale from 'date-fns/locale/vi';\r\nimport enPickerLocale from 'date-fns/locale/en-US';\r\nimport { Calendar } from '@fullcalendar/core';\r\nimport listPlugin from '@fullcalendar/list';\r\n\r\n// PROJECT IMPORTS\r\nimport useConfig from 'hooks/useConfig';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport ViewEventDialog from './ViewEventDialog';\r\nimport SelectDialog from './SelectDialog';\r\nimport './calendar.css';\r\nimport Locales from 'ui-component/Locales';\r\n\r\nexport default function SubComponentsPickers() {\r\n  const theme = useTheme();\r\n  const [date, setDate] = useState<Date>(new Date());\r\n  const [startDate, setStartDate] = useState<Date>(new Date());\r\n  const [endDate, setEndDate] = useState<Date>(new Date());\r\n  const calendarRef = React.useRef<any>([]);\r\n  const [goToDate, setGoToDate] = useState(new Date());\r\n  const [openEvent, setOpenEvent] = useState<boolean>(false);\r\n  const [eventInfo, setEventInfo] = useState<any>();\r\n  const [openSelect, setOpenSelect] = useState<boolean>(false);\r\n  const [selectInfo, setSelectInfo] = useState<any>();\r\n\r\n  const dataEvent = [\r\n    { title: 'Event 1', start: '2022-05-06T10:36:24', end: '2022-05-06T16:36:24', date: '2022-05-06' },\r\n    { title: 'Event 10', start: '2022-05-08T10:36:24', end: '2022-05-08T16:36:24' },\r\n    { title: 'Event 3', date: '2022-05-06', color: '#E53935' },\r\n    { title: 'Event 4', date: '2022-05-06' },\r\n    { title: 'Event 5', date: '2022-05-06' },\r\n    { title: 'Event 2', date: '2022-05-07' }\r\n  ];\r\n  const { locale } = useConfig();\r\n  const localeMap = {\r\n    en: enPickerLocale,\r\n    vi: viPickerLocale\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    setStartDate(date);\r\n    setEndDate(date);\r\n  }, [date]);\r\n\r\n  // const start = new Date();\r\n  // startDate.setHours(0, 0, 0, 0);\r\n  // const startTime = new Date(startDate.getTime() - startDate.getTimezoneOffset() * 60000).toISOString();\r\n\r\n  // endDate.setHours(23, 59, 59, 999);\r\n  // const endTime = new Date(endDate.getTime() - endDate.getTimezoneOffset() * 60000).toISOString();\r\n\r\n  const handlePickDate = async (newDate: Date | null) => {\r\n    await setDate(newDate || new Date());\r\n    await setGoToDate(newDate || new Date());\r\n    // console.log(newDate, goToDate);\r\n    // // Ref to previos ref?\r\n    newDate && calendarRef.current.getApi().gotoDate(new Date(newDate));\r\n  };\r\n\r\n  let eventGuid = 0;\r\n  // eslint-disable-next-line no-plusplus\r\n  const createEventId = () => String(eventGuid++);\r\n\r\n  // alert(arg.dateStr);\r\n  const handleDateClick = (arg: { dateStr: any }) => {\r\n    <Alert severity=\"success\">This is a success alert — {arg.dateStr}!</Alert>;\r\n  };\r\n\r\n  const handleEventClick = (clickInfo: EventClickArg) => {\r\n    setEventInfo(clickInfo.event);\r\n    setOpenEvent((prevState: any) => !prevState);\r\n  };\r\n\r\n  const handleEventClose = () => {\r\n    setOpenEvent(false);\r\n  };\r\n\r\n  const handleDataSelect = (selectInformation: DateSelectArg) => {\r\n    setSelectInfo(selectInformation);\r\n    setDate(new Date(selectInformation.startStr));\r\n    setOpenSelect((prevState: any) => !prevState);\r\n    // const title = prompt(`Please enter a new title for your event from ${selectInfo.startStr} to ${selectInfo.endStr}`);\r\n    // const calendarApi = selectInfo.view.calendar;\r\n    // console.log(selectInfo);\r\n    // calendarApi.unselect(); // clear date selection\r\n    // if (title) {\r\n    //   calendarApi.addEvent({\r\n    //     id: createEventId(),\r\n    //     title,\r\n    //     start: selectInfo.startStr,\r\n    //     end: selectInfo.endStr,\r\n    //     allDay: selectInfo.allDay\r\n    //   });\r\n    // }\r\n  };\r\n\r\n  // const renderEventContent = (eventInfo: any) => {\r\n  //   console.log(`Detail Event${eventInfo.timeText}, ${eventInfo.title}`);\r\n  // };\r\n\r\n  return (\r\n    <MainCard>\r\n      <LocalizationProvider dateAdapter={AdapterDateFns} locale={locale === 'vi' ? viPickerLocale : enPickerLocale}>\r\n        <Grid container spacing={3} alignContent=\"center\">\r\n          <Grid item xs={12} md={4}>\r\n            <MainCard>\r\n              <CalendarPicker date={date} onChange={handlePickDate} ref={calendarRef} />\r\n            </MainCard>\r\n          </Grid>\r\n          <Grid item xs={12} md={8}>\r\n            <MainCard>\r\n              <FullCalendar\r\n                plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n                ref={calendarRef}\r\n                headerToolbar={{\r\n                  left: 'prev,next today',\r\n                  center: 'title',\r\n                  right: 'dayGridMonth,timeGridWeek,timeGridDay'\r\n                }}\r\n                customButtons={{\r\n                  prev: {\r\n                    click() {\r\n                      calendarRef.current.getApi().prev();\r\n                      switch (calendarRef.current.getApi().view.type) {\r\n                        case 'timeGridDay': {\r\n                          const nextDate = new Date(date.getTime() - 24 * 60 * 60 * 1000);\r\n                          setDate(nextDate);\r\n                          break;\r\n                        }\r\n                        case 'timeGridWeek': {\r\n                          const nextDate = new Date(date.getTime() - 7 * 24 * 60 * 60 * 1000);\r\n                          setDate(nextDate);\r\n                          break;\r\n                        }\r\n                        case 'dayGridMonth': {\r\n                          const nextDate = new Date(date.getFullYear(), date.getMonth() - 1, 1);\r\n                          setDate(nextDate);\r\n                          break;\r\n                        }\r\n                        default: {\r\n                          console.error('Some Error Occurred while click next button');\r\n                          break;\r\n                        }\r\n                      }\r\n                    }\r\n                  },\r\n                  next: {\r\n                    click() {\r\n                      calendarRef.current.getApi().next();\r\n                      switch (calendarRef.current.getApi().view.type) {\r\n                        case 'timeGridDay': {\r\n                          const nextDay = new Date(date.getTime() + 24 * 60 * 60 * 1000);\r\n                          setDate(nextDay);\r\n                          break;\r\n                        }\r\n                        case 'timeGridWeek': {\r\n                          const nextWeek = new Date(date.getTime() + 7 * 24 * 60 * 60 * 1000);\r\n                          setDate(nextWeek);\r\n                          break;\r\n                        }\r\n                        case 'dayGridMonth': {\r\n                          const nextMonth = new Date(date.getFullYear(), date.getMonth() + 1, 1);\r\n                          setDate(nextMonth);\r\n                          break;\r\n                        }\r\n                        default: {\r\n                          console.error('Some Error Occurred while click next button');\r\n                          break;\r\n                        }\r\n                      }\r\n                    }\r\n                  },\r\n                  today: {\r\n                    text: 'today',\r\n                    click() {\r\n                      calendarRef.current.getApi().today();\r\n                      setDate(new Date());\r\n                    }\r\n                  }\r\n                }}\r\n                initialView=\"dayGridMonth\"\r\n                // dateClick={handleDateClick}\r\n                events={dataEvent} // Event Init\r\n                eventClick={handleEventClick}\r\n                // eventContent={renderEventContent}\r\n                editable\r\n                selectable // Select Event Enable\r\n                selectMirror\r\n                select={handleDataSelect}\r\n                locale={locale === 'vi' ? 'viLocale' : ''}\r\n                dayMaxEvents\r\n                nowIndicator\r\n                handleWindowResize\r\n                progressiveEventRendering\r\n                dayMaxEventRows\r\n                stickyFooterScrollbar\r\n              />\r\n            </MainCard>\r\n          </Grid>\r\n        </Grid>\r\n        <SelectDialog open={openSelect} setOpen={setOpenSelect} selectInfo={selectInfo} createEventId={createEventId} />\r\n        <ViewEventDialog open={openEvent} setOpen={setOpenEvent} eventInfo={eventInfo} />\r\n      </LocalizationProvider>\r\n    </MainCard>\r\n  );\r\n}\r\n"],"sourceRoot":""}