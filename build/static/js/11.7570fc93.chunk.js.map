{"version":3,"sources":["ui-component/extended/AnimateButton.tsx","../node_modules/popmotion/dist/es/utils/wrap.js","../node_modules/framer-motion/dist/es/utils/use-cycle.js","views/pages/authentication/AuthCardWrapper.tsx","ui-component/cards/AuthFooter.tsx","hooks/useScriptRef.ts","views/pages/authentication/AuthWrapper.tsx","views/pages/authentication/auth-forms/AuthForgot.tsx","views/pages/authentication/auth/Forgot.tsx"],"names":["AnimateButton","React","forwardRef","ref","offset1","offset2","children","type","direction","offset","scale","useCycle","x","cycleX","y","cycleY","div","animate","rotate","transition","repeat","Infinity","repeatType","duration","repeatDelay","undefined","onHoverEnd","onHoverStart","hover","tap","whileHover","whileTap","defaultProps","wrap","min","max","v","rangeSize","items","_i","arguments","length","index","useRef","_a","__read","useState","current","item","setItem","next","AuthCardWrapper","other","sx","maxWidth","xs","lg","margin","md","flexGrow","flexBasis","content","p","sm","xl","AuthFooter","justifyContent","variant","component","Link","href","target","underline","useScriptRef","scripted","useEffect","AuthWrapper","styled","theme","backgroundColor","palette","mode","background","default","primary","light","minHeight","Alert","props","elevation","JWTForgot","forgotProp","others","useTheme","scriptedRef","open","setOpen","login","useAuth","handleClick","handleClose","event","reason","initialValues","email","password","submit","validationSchema","Yup","shape","required","onSubmit","values","a","setErrors","setStatus","setSubmitting","then","err","success","message","console","error","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","FormControl","fullWidth","Boolean","typography","customInput","InputLabel","htmlFor","OutlinedInput","id","value","name","onBlur","onChange","label","inputProps","FormHelperText","Box","mt","Button","onClick","disabled","size","color","Snackbar","autoHideDuration","onClose","severity","width","Forgot","matchDownSM","useMediaQuery","breakpoints","down","Grid","container","alignItems","m","mb","spacing","to","Logo","Stack","Typography","secondary","main","gutterBottom","fontSize","textAlign","AuthForgot","Divider","textDecoration"],"mappings":"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","file":"static/js/11.7570fc93.chunk.js","sourcesContent":["// THIRD-PARTY\nimport React, { Ref } from 'react';\nimport { motion, useCycle } from 'framer-motion';\n\ninterface ScaleProps {\n  hover: number | string | undefined;\n  tap: number | string | undefined;\n}\n\ninterface AnimateButtonProps {\n  children?: React.ReactNode;\n  type?: 'slide' | 'scale' | 'rotate';\n  direction?: 'up' | 'down' | 'left' | 'right';\n  offset?: number;\n  scale?: ScaleProps;\n}\n\nconst AnimateButton = React.forwardRef(({ children, type, direction, offset, scale }: AnimateButtonProps, ref: Ref<HTMLDivElement>) => {\n  let offset1;\n  let offset2;\n  switch (direction) {\n    case 'up':\n    case 'left':\n      offset1 = offset;\n      offset2 = 0;\n      break;\n    case 'right':\n    case 'down':\n    default:\n      offset1 = 0;\n      offset2 = offset;\n      break;\n  }\n\n  const [x, cycleX] = useCycle(offset1, offset2);\n  const [y, cycleY] = useCycle(offset1, offset2);\n\n  switch (type) {\n    case 'rotate':\n      return (\n        <motion.div\n          ref={ref}\n          animate={{ rotate: 360 }}\n          transition={{\n            repeat: Infinity,\n            repeatType: 'loop',\n            duration: 2,\n            repeatDelay: 0\n          }}\n        >\n          {children}\n        </motion.div>\n      );\n    case 'slide':\n      if (direction === 'up' || direction === 'down') {\n        return (\n          <motion.div ref={ref} animate={{ y: y !== undefined ? y : '' }} onHoverEnd={() => cycleY()} onHoverStart={() => cycleY()}>\n            {children}\n          </motion.div>\n        );\n      }\n      return (\n        <motion.div ref={ref} animate={{ x: x !== undefined ? x : '' }} onHoverEnd={() => cycleX()} onHoverStart={() => cycleX()}>\n          {children}\n        </motion.div>\n      );\n\n    case 'scale':\n    default:\n      if (typeof scale === 'number') {\n        scale = {\n          hover: scale,\n          tap: scale\n        };\n      }\n      return (\n        <motion.div ref={ref} whileHover={{ scale: scale?.hover }} whileTap={{ scale: scale?.tap }}>\n          {children}\n        </motion.div>\n      );\n  }\n});\n\nAnimateButton.defaultProps = {\n  type: 'scale',\n  offset: 10,\n  direction: 'right',\n  scale: {\n    hover: 1,\n    tap: 0.9\n  }\n};\n\nexport default AnimateButton;\n","var wrap = function (min, max, v) {\n    var rangeSize = max - min;\n    return ((((v - min) % rangeSize) + rangeSize) % rangeSize) + min;\n};\n\nexport { wrap };\n","import { __read } from 'tslib';\nimport { useRef, useState } from 'react';\nimport { wrap } from 'popmotion';\n\n/**\n * Cycles through a series of visual properties. Can be used to toggle between or cycle through animations. It works similar to `useState` in React. It is provided an initial array of possible states, and returns an array of two arguments.\n *\n * @library\n *\n * ```jsx\n * import * as React from \"react\"\n * import { Frame, useCycle } from \"framer\"\n *\n * export function MyComponent() {\n *   const [x, cycleX] = useCycle(0, 50, 100)\n *\n *   return (\n *     <Frame\n *       animate={{ x: x }}\n *       onTap={() => cycleX()}\n *      />\n *    )\n * }\n * ```\n *\n * @motion\n *\n * An index value can be passed to the returned `cycle` function to cycle to a specific index.\n *\n * ```jsx\n * import * as React from \"react\"\n * import { motion, useCycle } from \"framer-motion\"\n *\n * export const MyComponent = () => {\n *   const [x, cycleX] = useCycle(0, 50, 100)\n *\n *   return (\n *     <motion.div\n *       animate={{ x: x }}\n *       onTap={() => cycleX()}\n *      />\n *    )\n * }\n * ```\n *\n * @param items - items to cycle through\n * @returns [currentState, cycleState]\n *\n * @public\n */\nfunction useCycle() {\n    var items = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        items[_i] = arguments[_i];\n    }\n    var index = useRef(0);\n    var _a = __read(useState(items[index.current]), 2), item = _a[0], setItem = _a[1];\n    return [\n        item,\n        function (next) {\n            index.current =\n                typeof next !== \"number\"\n                    ? wrap(0, items.length, index.current + 1)\n                    : next;\n            setItem(items[index.current]);\n        },\n    ];\n}\n\nexport { useCycle };\n","// THIRD-PARTY\nimport { Box } from '@mui/material';\n\n// PROJECT IMPORTS\nimport MainCard, { MainCardProps } from 'ui-component/cards/MainCard';\n\nconst AuthCardWrapper = ({ children, ...other }: MainCardProps) => (\n  <MainCard\n    sx={{\n      maxWidth: { xs: 400, lg: 475 },\n      margin: { xs: 2.5, md: 3 },\n      '& > *': {\n        flexGrow: 1,\n        flexBasis: '50%'\n      }\n    }}\n    content={false}\n    {...other}\n  >\n    <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\n  </MainCard>\n);\n\nexport default AuthCardWrapper;\n","// THIRD-PARTY\nimport { Link, Stack, Typography } from '@mui/material';\n\nconst AuthFooter = () => (\n  <Stack direction=\"row\" justifyContent=\"space-between\">\n    <Typography variant=\"subtitle2\" component={Link} href=\"https://beetsoft.com.vn\" target=\"_blank\" underline=\"hover\">\n      beetsoft.com.vn\n    </Typography>\n    <Typography variant=\"subtitle2\" component={Link} href=\"https://beetsoft.com.vn\" target=\"_blank\" underline=\"hover\">\n      &copy; beetsoft.com.vn\n    </Typography>\n  </Stack>\n);\n\nexport default AuthFooter;\n","import { useEffect, useRef } from 'react';\n\nconst useScriptRef = () => {\n  const scripted = useRef(true);\n\n  useEffect(\n    () => () => {\n      scripted.current = false;\n    },\n    []\n  );\n\n  return scripted;\n};\n\nexport default useScriptRef;\n","// THIRD-PARTY\nimport { styled } from '@mui/material/styles';\n\nconst AuthWrapper = styled('div')(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? theme.palette.background.default : theme.palette.primary.light,\n  minHeight: '100vh'\n}));\n\nexport default AuthWrapper;\n","import React from 'react';\r\nimport * as Yup from 'yup';\r\nimport { Box, Button, FormControl, FormHelperText, InputLabel, OutlinedInput, Snackbar } from '@mui/material';\r\nimport { Formik } from 'formik';\r\nimport MuiAlert, { AlertProps } from '@mui/material/Alert';\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\n// PROJECT IMPORTS\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport useAuth from 'hooks/useAuth';\r\nimport useScriptRef from 'hooks/useScriptRef';\r\n\r\nconst Alert = React.forwardRef<HTMLDivElement, AlertProps>((props, ref) => (\r\n  <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />\r\n));\r\n\r\nfunction JWTForgot({ forgotProp, ...others }: { forgotProp?: number }): JSX.Element {\r\n  const theme = useTheme();\r\n  const scriptedRef = useScriptRef();\r\n  /* const [checked, setChecked] = React.useState(true); */\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const { login } = useAuth();\r\n\r\n  const handleClick = () => {\r\n    // If Input not empty then alert success, else set error\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event?: React.SyntheticEvent | Event, reason?: string) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={{\r\n          email: '',\r\n          password: '',\r\n          submit: null\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n          password: Yup.string().max(255).required('Password is required')\r\n        })}\r\n        onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n          try {\r\n            await login(values.email, values.password).then(\r\n              () => {},\r\n              (err: any) => {\r\n                if (scriptedRef.current) {\r\n                  setStatus({ success: false });\r\n                  setErrors({ submit: err.message });\r\n                  setSubmitting(false);\r\n                }\r\n              }\r\n            );\r\n          } catch (err: any) {\r\n            console.error(err);\r\n            if (scriptedRef.current) {\r\n              setStatus({ success: false });\r\n              setErrors({ submit: err.message });\r\n              setSubmitting(false);\r\n            }\r\n          }\r\n        }}\r\n      >\r\n        {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n          <form noValidate onSubmit={handleSubmit} {...others}>\r\n            <FormControl fullWidth error={Boolean(touched.email && errors.email)} sx={{ ...theme.typography.customInput }}>\r\n              <InputLabel htmlFor=\"outlined-adornment-email-login\">Email Address / Username</InputLabel>\r\n              <OutlinedInput\r\n                id=\"outlined-adornment-email-login\"\r\n                type=\"email\"\r\n                value={values.email}\r\n                name=\"email\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                label=\"Email Address / Username\"\r\n                inputProps={{}}\r\n              />\r\n              {touched.email && errors.email && (\r\n                <FormHelperText error id=\"standard-weight-helper-text-email-login\">\r\n                  {errors.email}\r\n                </FormHelperText>\r\n              )}\r\n            </FormControl>\r\n\r\n            <Box sx={{ mt: 2 }}>\r\n              <AnimateButton>\r\n                <Button\r\n                  href=\"login\"\r\n                  onClick={handleClick}\r\n                  disabled={isSubmitting}\r\n                  fullWidth\r\n                  size=\"large\"\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                >\r\n                  Submit\r\n                </Button>\r\n                <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                  <Alert onClose={handleClose} severity=\"success\" sx={{ width: '100%' }}>\r\n                    This is a success message!\r\n                  </Alert>\r\n                </Snackbar>\r\n              </AnimateButton>\r\n            </Box>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default JWTForgot;\r\n","// THIRD-PARTY\r\nimport { Divider, Grid, Stack, Typography, useMediaQuery } from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\n// PROJECT IMPORTS\r\nimport AuthCardWrapper from '../AuthCardWrapper';\r\nimport AuthFooter from 'ui-component/cards/AuthFooter';\r\nimport AuthForgot from '../auth-forms/AuthForgot';\r\nimport AuthWrapper from '../AuthWrapper';\r\nimport Logo from 'ui-component/Logo';\r\n\r\nconst Forgot = () => {\r\n  const theme = useTheme();\r\n  const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n  return (\r\n    <AuthWrapper>\r\n      <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\r\n        <Grid item xs={12}>\r\n          <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\r\n            <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\r\n              <AuthCardWrapper>\r\n                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\r\n                  <Grid item sx={{ mb: 3 }}>\r\n                    <Link to=\"#\">\r\n                      <Logo />\r\n                    </Link>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Grid container direction={matchDownSM ? 'column-reverse' : 'row'} alignItems=\"center\" justifyContent=\"center\">\r\n                      <Grid item>\r\n                        <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\r\n                          <Typography color={theme.palette.secondary.main} gutterBottom variant={matchDownSM ? 'h3' : 'h2'}>\r\n                            Forgot password?\r\n                          </Typography>\r\n                          <Typography variant=\"caption\" fontSize=\"16px\" textAlign=\"center\">\r\n                            Enter your email address below and we&apos;ll send you password reset OTP.\r\n                          </Typography>\r\n                        </Stack>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <AuthForgot />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Divider />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\r\n                      <Typography component={Link} to=\"/login\" variant=\"subtitle1\" sx={{ textDecoration: 'none' }}>\r\n                        Already have an account?\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </AuthCardWrapper>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\r\n          <AuthFooter />\r\n        </Grid>\r\n      </Grid>\r\n    </AuthWrapper>\r\n  );\r\n};\r\n\r\nexport default Forgot;\r\n"],"sourceRoot":""}