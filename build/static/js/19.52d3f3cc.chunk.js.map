{"version":3,"sources":["views/pages/authentication/AuthCardWrapper.tsx","ui-component/cards/AuthFooter.tsx","hooks/useScriptRef.ts","views/pages/authentication/AuthWrapper.tsx","views/pages/authentication/auth-forms/AuthForgot.tsx","views/pages/authentication/auth/Forgot.tsx"],"names":["AuthCardWrapper","children","other","sx","maxWidth","xs","lg","margin","md","flexGrow","flexBasis","content","p","sm","xl","AuthFooter","direction","justifyContent","variant","component","Link","href","target","underline","useScriptRef","scripted","useRef","useEffect","current","AuthWrapper","styled","theme","backgroundColor","palette","mode","background","default","primary","light","minHeight","Alert","React","forwardRef","props","ref","elevation","JWTForgot","forgotProp","others","useTheme","scriptedRef","useState","open","setOpen","login","useAuth","handleClick","handleClose","event","reason","initialValues","email","password","submit","validationSchema","yup","shape","max","required","onSubmit","values","a","setErrors","setStatus","setSubmitting","then","err","success","message","console","error","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","FormControl","fullWidth","Boolean","typography","customInput","InputLabel","htmlFor","OutlinedInput","id","type","value","name","onBlur","onChange","label","inputProps","FormHelperText","Box","mt","AnimateButton","Button","onClick","disabled","size","color","Snackbar","autoHideDuration","onClose","severity","width","Forgot","matchDownSM","useMediaQuery","breakpoints","down","Grid","container","item","alignItems","m","mb","spacing","to","Logo","Stack","Typography","secondary","main","gutterBottom","fontSize","textAlign","AuthForgot","Divider","textDecoration"],"mappings":"wMAuBeA,IAjBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAaC,EAAhB,wBACtB,cAAC,IAAD,yBACEC,GAAI,CACFC,SAAU,CAAEC,GAAI,IAAKC,GAAI,KACzBC,OAAQ,CAAEF,GAAI,IAAKG,GAAI,GACvB,QAAS,CACPC,SAAU,EACVC,UAAW,QAGfC,SAAS,GACLT,GAVN,aAYE,cAAC,IAAD,CAAKC,GAAI,CAAES,EAAG,CAAEP,GAAI,EAAGQ,GAAI,EAAGC,GAAI,IAAlC,SAA0Cb,S,iCCnB9C,qCAcec,IAXI,kBACjB,eAAC,IAAD,CAAOC,UAAU,MAAMC,eAAe,gBAAtC,UACE,cAAC,IAAD,CAAYC,QAAQ,YAAYC,UAAWC,IAAMC,KAAK,0BAA0BC,OAAO,SAASC,UAAU,QAA1G,6BAGA,cAAC,IAAD,CAAYL,QAAQ,YAAYC,UAAWC,IAAMC,KAAK,0BAA0BC,OAAO,SAASC,UAAU,QAA1G,uC,iCCRJ,WAeeC,IAbM,WACnB,IAAMC,EAAWC,kBAAO,GASxB,OAPAC,qBACE,kBAAM,WACJF,EAASG,SAAU,KAErB,IAGKH,I,iCCZT,WAGMI,EAAcC,YAAO,MAAPA,EAAc,gBAAGC,EAAH,EAAGA,MAAH,MAAgB,CAChDC,gBAAwC,SAAvBD,EAAME,QAAQC,KAAkBH,EAAME,QAAQE,WAAWC,QAAUL,EAAME,QAAQI,QAAQC,MAC1GC,UAAW,YAGEV,O,sUCITW,EAAQC,IAAMC,YAAuC,SAACC,EAAOC,GAAR,OACzD,cAAC,IAAD,aAAUC,UAAW,EAAGD,IAAKA,EAAK1B,QAAQ,UAAayB,OA2G1CG,MAxGf,YAAoF,EAA/DC,WAAgE,IAAjDC,EAAgD,iBAC5EjB,EAAQkB,cACRC,EAAc1B,cAEpB,EAAwBiB,IAAMU,UAAS,GAAvC,mBAAOC,EAAP,KAAaC,EAAb,KAEQC,EAAUC,cAAVD,MAEFE,EAAc,WAElBH,GAAQ,IAGJI,EAAc,SAACC,EAAsCC,GAC1C,cAAXA,GAIJN,GAAQ,IAGV,OACE,mCACE,cAAC,IAAD,CACEO,cAAe,CACbC,MAAO,GACPC,SAAU,GACVC,OAAQ,MAEVC,iBAAkBC,MAAaC,MAAM,CACnCL,MAAOI,MAAaJ,MAAM,yBAAyBM,IAAI,KAAKC,SAAS,qBACrEN,SAAUG,MAAaE,IAAI,KAAKC,SAAS,0BAE3CC,SAAQ,uCAAE,WAAOC,EAAP,sBAAAC,EAAA,6DAAiBC,EAAjB,EAAiBA,UAAWC,EAA5B,EAA4BA,UAAWC,EAAvC,EAAuCA,cAAvC,kBAEApB,EAAMgB,EAAOT,MAAOS,EAAOR,UAAUa,MACzC,eACA,SAACC,GACK1B,EAAYtB,UACd6C,EAAU,CAAEI,SAAS,IACrBL,EAAU,CAAET,OAAQa,EAAIE,UACxBJ,GAAc,OARd,uDAaNK,QAAQC,MAAR,MACI9B,EAAYtB,UACd6C,EAAU,CAAEI,SAAS,IACrBL,EAAU,CAAET,OAAQ,KAAIe,UACxBJ,GAAc,IAjBV,yDAAF,wDAVV,SAgCG,gBAAGO,EAAH,EAAGA,OAAQC,EAAX,EAAWA,WAAYC,EAAvB,EAAuBA,aAAcC,EAArC,EAAqCA,aAAcC,EAAnD,EAAmDA,aAAcC,EAAjE,EAAiEA,QAAShB,EAA1E,EAA0EA,OAA1E,OACC,+CAAMiB,YAAU,EAAClB,SAAUe,GAAkBpC,GAA7C,cACE,eAACwC,EAAA,EAAD,CAAaC,WAAS,EAACT,MAAOU,QAAQJ,EAAQzB,OAASoB,EAAOpB,OAAQ1D,GAAE,eAAO4B,EAAM4D,WAAWC,aAAhG,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,iCAApB,sCACA,cAACC,EAAA,EAAD,CACEC,GAAG,iCACHC,KAAK,QACLC,MAAO5B,EAAOT,MACdsC,KAAK,QACLC,OAAQlB,EACRmB,SAAUlB,EACVmB,MAAM,2BACNC,WAAY,KAEbjB,EAAQzB,OAASoB,EAAOpB,OACvB,cAAC2C,EAAA,EAAD,CAAgBxB,OAAK,EAACgB,GAAG,0CAAzB,SACGf,EAAOpB,WAKd,cAAC4C,EAAA,EAAD,CAAKtG,GAAI,CAAEuG,GAAI,GAAf,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEvF,KAAK,QACLwF,QAASrD,EACTsD,SAAUzB,EACVI,WAAS,EACTsB,KAAK,QACLd,KAAK,SACL/E,QAAQ,YACR8F,MAAM,YARR,oBAYA,cAACC,EAAA,EAAD,CAAU7D,KAAMA,EAAM8D,iBAAkB,IAAMC,QAAS1D,EAAvD,SACE,cAAC,EAAD,CAAO0D,QAAS1D,EAAa2D,SAAS,UAAUjH,GAAI,CAAEkH,MAAO,QAA7D,yD,kBCtCHC,UAzDA,WACb,IAAMvF,EAAQkB,cACRsE,EAAcC,YAAczF,EAAM0F,YAAYC,KAAK,OAEzD,OACE,cAAC7F,EAAA,EAAD,UACE,eAAC8F,EAAA,EAAD,CAAMC,WAAS,EAAC5G,UAAU,SAASC,eAAe,WAAWd,GAAI,CAAEoC,UAAW,SAA9E,UACE,cAACoF,EAAA,EAAD,CAAME,MAAI,EAACxH,GAAI,GAAf,SACE,cAACsH,EAAA,EAAD,CAAMC,WAAS,EAAC3G,eAAe,SAAS6G,WAAW,SAAS3H,GAAI,CAAEoC,UAAW,sBAA7E,SACE,cAACoF,EAAA,EAAD,CAAME,MAAI,EAAC1H,GAAI,CAAE4H,EAAG,CAAE1H,GAAI,EAAGQ,GAAI,GAAKmH,GAAI,GAA1C,SACE,cAAChI,EAAA,EAAD,UACE,eAAC2H,EAAA,EAAD,CAAMC,WAAS,EAACK,QAAS,EAAGH,WAAW,SAAS7G,eAAe,SAA/D,UACE,cAAC0G,EAAA,EAAD,CAAME,MAAI,EAAC1H,GAAI,CAAE6H,GAAI,GAArB,SACE,cAAC,IAAD,CAAME,GAAG,IAAT,SACE,cAACC,EAAA,EAAD,QAGJ,cAACR,EAAA,EAAD,CAAME,MAAI,EAACxH,GAAI,GAAf,SACE,cAACsH,EAAA,EAAD,CAAMC,WAAS,EAAC5G,UAAWuG,EAAc,iBAAmB,MAAOO,WAAW,SAAS7G,eAAe,SAAtG,SACE,cAAC0G,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,eAACO,EAAA,EAAD,CAAON,WAAW,SAAS7G,eAAe,SAASgH,QAAS,EAA5D,UACE,cAACI,EAAA,EAAD,CAAYrB,MAAOjF,EAAME,QAAQqG,UAAUC,KAAMC,cAAY,EAACtH,QAASqG,EAAc,KAAO,KAA5F,8BAGA,cAACc,EAAA,EAAD,CAAYnH,QAAQ,UAAUuH,SAAS,OAAOC,UAAU,SAAxD,4FAOR,cAACf,EAAA,EAAD,CAAME,MAAI,EAACxH,GAAI,GAAf,SACE,cAACsI,EAAD,MAEF,cAAChB,EAAA,EAAD,CAAME,MAAI,EAACxH,GAAI,GAAf,SACE,cAACuI,EAAA,EAAD,MAEF,cAACjB,EAAA,EAAD,CAAME,MAAI,EAACxH,GAAI,GAAf,SACE,cAACsH,EAAA,EAAD,CAAME,MAAI,EAACD,WAAS,EAAC5G,UAAU,SAAS8G,WAAW,SAASzH,GAAI,GAAhE,SACE,cAACgI,EAAA,EAAD,CAAYlH,UAAWC,IAAM8G,GAAG,SAAShH,QAAQ,YAAYf,GAAI,CAAE0I,eAAgB,QAAnF,qDAUd,cAAClB,EAAA,EAAD,CAAME,MAAI,EAACxH,GAAI,GAAIF,GAAI,CAAE4H,EAAG,EAAGrB,GAAI,GAAnC,SACE,cAAC3F,EAAA,EAAD","file":"static/js/19.52d3f3cc.chunk.js","sourcesContent":["// THIRD-PARTY\nimport { Box } from '@mui/material';\n\n// PROJECT IMPORTS\nimport MainCard, { MainCardProps } from 'ui-component/cards/MainCard';\n\nconst AuthCardWrapper = ({ children, ...other }: MainCardProps) => (\n  <MainCard\n    sx={{\n      maxWidth: { xs: 400, lg: 475 },\n      margin: { xs: 2.5, md: 3 },\n      '& > *': {\n        flexGrow: 1,\n        flexBasis: '50%'\n      }\n    }}\n    content={false}\n    {...other}\n  >\n    <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\n  </MainCard>\n);\n\nexport default AuthCardWrapper;\n","// THIRD-PARTY\nimport { Link, Stack, Typography } from '@mui/material';\n\nconst AuthFooter = () => (\n  <Stack direction=\"row\" justifyContent=\"space-between\">\n    <Typography variant=\"subtitle2\" component={Link} href=\"https://beetsoft.com.vn\" target=\"_blank\" underline=\"hover\">\n      beetsoft.com.vn\n    </Typography>\n    <Typography variant=\"subtitle2\" component={Link} href=\"https://beetsoft.com.vn\" target=\"_blank\" underline=\"hover\">\n      &copy; beetsoft.com.vn\n    </Typography>\n  </Stack>\n);\n\nexport default AuthFooter;\n","import { useEffect, useRef } from 'react';\n\nconst useScriptRef = () => {\n  const scripted = useRef(true);\n\n  useEffect(\n    () => () => {\n      scripted.current = false;\n    },\n    []\n  );\n\n  return scripted;\n};\n\nexport default useScriptRef;\n","// THIRD-PARTY\nimport { styled } from '@mui/material/styles';\n\nconst AuthWrapper = styled('div')(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? theme.palette.background.default : theme.palette.primary.light,\n  minHeight: '100vh'\n}));\n\nexport default AuthWrapper;\n","import React from 'react';\nimport * as yup from 'yup';\nimport { Box, Button, FormControl, FormHelperText, InputLabel, OutlinedInput, Snackbar } from '@mui/material';\nimport { Formik } from 'formik';\nimport MuiAlert, { AlertProps } from '@mui/material/Alert';\nimport { useTheme } from '@mui/material/styles';\n\n// PROJECT IMPORTS\nimport AnimateButton from 'ui-component/extended/AnimateButton';\nimport useAuth from 'hooks/useAuth';\nimport useScriptRef from 'hooks/useScriptRef';\n\nconst Alert = React.forwardRef<HTMLDivElement, AlertProps>((props, ref) => (\n  <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />\n));\n\nfunction JWTForgot({ forgotProp, ...others }: { forgotProp?: number }): JSX.Element {\n  const theme = useTheme();\n  const scriptedRef = useScriptRef();\n  /* const [checked, setChecked] = React.useState(true); */\n  const [open, setOpen] = React.useState(false);\n\n  const { login } = useAuth();\n\n  const handleClick = () => {\n    // If Input not empty then alert success, else set error\n    setOpen(true);\n  };\n\n  const handleClose = (event?: React.SyntheticEvent | Event, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          email: '',\n          password: '',\n          submit: null\n        }}\n        validationSchema={yup.object().shape({\n          email: yup.string().email('Must be a valid email').max(255).required('Email is required'),\n          password: yup.string().max(255).required('Password is required')\n        })}\n        onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n          try {\n            await login(values.email, values.password).then(\n              () => {},\n              (err: any) => {\n                if (scriptedRef.current) {\n                  setStatus({ success: false });\n                  setErrors({ submit: err.message });\n                  setSubmitting(false);\n                }\n              }\n            );\n          } catch (err: any) {\n            console.error(err);\n            if (scriptedRef.current) {\n              setStatus({ success: false });\n              setErrors({ submit: err.message });\n              setSubmitting(false);\n            }\n          }\n        }}\n      >\n        {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n          <form noValidate onSubmit={handleSubmit} {...others}>\n            <FormControl fullWidth error={Boolean(touched.email && errors.email)} sx={{ ...theme.typography.customInput }}>\n              <InputLabel htmlFor=\"outlined-adornment-email-login\">Email Address / Username</InputLabel>\n              <OutlinedInput\n                id=\"outlined-adornment-email-login\"\n                type=\"email\"\n                value={values.email}\n                name=\"email\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n                label=\"Email Address / Username\"\n                inputProps={{}}\n              />\n              {touched.email && errors.email && (\n                <FormHelperText error id=\"standard-weight-helper-text-email-login\">\n                  {errors.email}\n                </FormHelperText>\n              )}\n            </FormControl>\n\n            <Box sx={{ mt: 2 }}>\n              <AnimateButton>\n                <Button\n                  href=\"login\"\n                  onClick={handleClick}\n                  disabled={isSubmitting}\n                  fullWidth\n                  size=\"large\"\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"secondary\"\n                >\n                  Submit\n                </Button>\n                <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n                  <Alert onClose={handleClose} severity=\"success\" sx={{ width: '100%' }}>\n                    This is a success message!\n                  </Alert>\n                </Snackbar>\n              </AnimateButton>\n            </Box>\n          </form>\n        )}\n      </Formik>\n    </>\n  );\n}\n\nexport default JWTForgot;\n","// THIRD-PARTY\nimport { Divider, Grid, Stack, Typography, useMediaQuery } from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport { useTheme } from '@mui/material/styles';\n\n// PROJECT IMPORTS\nimport AuthCardWrapper from '../AuthCardWrapper';\nimport AuthFooter from 'ui-component/cards/AuthFooter';\nimport AuthForgot from '../auth-forms/AuthForgot';\nimport AuthWrapper from '../AuthWrapper';\nimport Logo from 'ui-component/Logo';\n\nconst Forgot = () => {\n  const theme = useTheme();\n  const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\n\n  return (\n    <AuthWrapper>\n      <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\n        <Grid item xs={12}>\n          <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\n            <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\n              <AuthCardWrapper>\n                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\n                  <Grid item sx={{ mb: 3 }}>\n                    <Link to=\"#\">\n                      <Logo />\n                    </Link>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Grid container direction={matchDownSM ? 'column-reverse' : 'row'} alignItems=\"center\" justifyContent=\"center\">\n                      <Grid item>\n                        <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\n                          <Typography color={theme.palette.secondary.main} gutterBottom variant={matchDownSM ? 'h3' : 'h2'}>\n                            Forgot password?\n                          </Typography>\n                          <Typography variant=\"caption\" fontSize=\"16px\" textAlign=\"center\">\n                            Enter your email address below and we&apos;ll send you password reset OTP.\n                          </Typography>\n                        </Stack>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <AuthForgot />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Divider />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\n                      <Typography component={Link} to=\"/login\" variant=\"subtitle1\" sx={{ textDecoration: 'none' }}>\n                        Already have an account?\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </AuthCardWrapper>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\n          <AuthFooter />\n        </Grid>\n      </Grid>\n    </AuthWrapper>\n  );\n};\n\nexport default Forgot;\n"],"sourceRoot":""}